[{"categories":["软件开发 Database"],"content":"postgrest配置及说明","date":"2024-10-13","objectID":"/postgrest-config-and-explanation/","series":null,"tags":["Database postgres"],"title":"postgrest配置及说明","uri":"/postgrest-config-and-explanation/"},{"categories":["软件开发 Database"],"content":"\rpostgrest配置及说明","date":"2024-10-13","objectID":"/postgrest-config-and-explanation/:0:0","series":null,"tags":["Database postgres"],"title":"postgrest配置及说明","uri":"/postgrest-config-and-explanation/#postgrest配置及说明"},{"categories":["软件开发 Database"],"content":"\r准备scecret和token # Allow \"tr\" to process non-utf8 byte sequences export LC_CTYPE=C # Read random bytes keeping only alphanumerics and add the secret to the configuration file echo \"jwt-secret = \\\"$(\u003c /dev/urandom tr -dc A-Za-z0-9 | head -c32)\\\"\" 记住这里的jwt-secret的内容，后面放到docker-compose的PGRST_JWT_SECRET中 打开https://jwt.io/ payload中写{role: web_user} secret写入这里的jwt-secret的内容 记下左边生成的token，作为每次请求的身份认证 ","date":"2024-10-13","objectID":"/postgrest-config-and-explanation/:1:0","series":null,"tags":["Database postgres"],"title":"postgrest配置及说明","uri":"/postgrest-config-and-explanation/#准备scecret和token"},{"categories":["软件开发 Database"],"content":"\r安装 postgres version: '3' services: postgres: image: postgres container_name: postgres restart: always # set shared memory limit when using docker-compose shm_size: 128mb environment: TZ: Asia/Shanghai POSTGRES_PASSWORD: ${PGSQL_ROOT} ports: - \"5432:5432\" volumes: - /etc/localtime:/etc/localtime:ro - ./data:/var/lib/postgresql/data:rw - ./customize.conf:/etc/postgresql/postgresql.conf.d/custmize.conf adminer: image: adminer restart: always ports: - 8089:8080 postgrest version: '3' services: pgrest: image: postgrest/postgrest ports: - \"3000:3000\" environment: PGRST_DB_URI: postgres://henry:${PGSQL_PWD}@${PGSQL_HOST}:5432/web PGRST_JWT_SECRET: sample_jwt_secret PGRST_OPENAPI_SERVER_PROXY_URI: http://127.0.0.1:3000 ","date":"2024-10-13","objectID":"/postgrest-config-and-explanation/:2:0","series":null,"tags":["Database postgres"],"title":"postgrest配置及说明","uri":"/postgrest-config-and-explanation/#安装"},{"categories":["软件开发 Database"],"content":"\r配置 ## 如果没有普通用户，先用postgres用户登录，创建普通用户 create role henry noinherit login password 'sample_pwd'; ## 然后创建web_user用于读写数据 create role web_user nologin; ## 指定henry可以切换用户为web_user ## 因为henry在PGRST_DB_URI中，因此postgrest用henry身份连接到postgres，然后henry切换用户为web_user. grant web_user to henry; ## 切换到指定的数据库 ## 将schema和表的权限给web_user grant usage on schema public to web_user; grant all on public.msfund to web_user; ","date":"2024-10-13","objectID":"/postgrest-config-and-explanation/:3:0","series":null,"tags":["Database postgres"],"title":"postgrest配置及说明","uri":"/postgrest-config-and-explanation/#配置"},{"categories":["软件开发 Database"],"content":"\r使用 export token=sample_token curl http://10.8.0.68:3000/msfund -X POST -H \"Authorization: Bearer $token\" -H \"Content-Type: application/json\" -d '{\"code\": \"002644\", \"data\": \"{\\\"FundName\\\":\\\"大成景荣债券A\\\", \\\"CategoryName\\\": \\\"普通债券\\\"}\"}' curl http://10.8.0.68:3000/msfund -H \"Authorization: Bearer $token\" -H \"Content-Type: application/json\" curl http://10.8.0.68:3000/msfund?code=eq.002644 -H \"Authorization: Bearer $token\" -H \"Content-Type: application/json\" curl http://10.8.0.68:3000/msfund?code=eq.002644 -X PUT -H \"Authorization: Bearer $token\" -H \"Content-Type: application/json\" -d '{\"code\": \"002644\", \"data\": \"{\\\"FundName\\\":\\\"易方达中小盘A\\\", \\\"CategoryName\\\": \\\"大盘价值\\\"}\"}' curl http://10.8.0.68:3000/msfund?code=eq.002644 -X PATCH -H \"Authorization: Bearer $token\" -H \"Content-Type: application/json\" -d '{\"code\": \"002644\", \"data\": \"{\\\"FundName\\\":\\\"易方达优质精选A\\\", \\\"CategoryName\\\": \\\"大盘价值\\\"}\"}' curl -X DELETE \"http://10.8.0.68:3000/msfund?code=eq.002644\" -H \"Authorization: Bearer $token\" ","date":"2024-10-13","objectID":"/postgrest-config-and-explanation/:4:0","series":null,"tags":["Database postgres"],"title":"postgrest配置及说明","uri":"/postgrest-config-and-explanation/#使用"},{"categories":["软件开发 Git"],"content":"git解决","date":"2024-10-12","objectID":"/git-solve-gnutls-recv-error/","series":null,"tags":["Git"],"title":"git解决","uri":"/git-solve-gnutls-recv-error/"},{"categories":["软件开发 Git"],"content":"\rgit解决 sudo apt install gnutls-bin git config --global http.sslverify false git config --global http.postBuffer 1048576000 //增加至1GB缓存 #设置git最小和最大下载速度 git config --global http.lowSpeedLimit 0 git config --global http.lowSpeedTime 999999 #以下步骤大大加快git下载速度 git config --global core.compression -1 export GIT_TRACE_PACKET=1 export GIT_TRACE=1 export GIT_CURL_VERBOSE=1 #sudo ifconfig eth0 mtu 14000 ","date":"2024-10-12","objectID":"/git-solve-gnutls-recv-error/:0:0","series":null,"tags":["Git"],"title":"git解决","uri":"/git-solve-gnutls-recv-error/#git解决"},{"categories":["Linux"],"content":"openwrt安装privoxy转换socks5到http代理","date":"2024-08-09","objectID":"/openwrt-privoxy-http-proxy-from-socks5/","series":null,"tags":["openwrt"],"title":"openwrt安装privoxy转换socks5到http代理","uri":"/openwrt-privoxy-http-proxy-from-socks5/"},{"categories":["Linux"],"content":"\ropenwrt安装privoxy转换socks5到http代理很多软件不支持socks5代理，只支持http代理，比如cmd和powershell ","date":"2024-08-09","objectID":"/openwrt-privoxy-http-proxy-from-socks5/:0:0","series":null,"tags":["openwrt"],"title":"openwrt安装privoxy转换socks5到http代理","uri":"/openwrt-privoxy-http-proxy-from-socks5/#openwrt安装privoxy转换socks5到http代理"},{"categories":["Linux"],"content":"\r编译OpenWrt选择 luci-app-privoxy ","date":"2024-08-09","objectID":"/openwrt-privoxy-http-proxy-from-socks5/:1:0","series":null,"tags":["openwrt"],"title":"openwrt安装privoxy转换socks5到http代理","uri":"/openwrt-privoxy-http-proxy-from-socks5/#编译openwrt"},{"categories":["Linux"],"content":"\r安装privoxy opkg update opkg install privoxy ","date":"2024-08-09","objectID":"/openwrt-privoxy-http-proxy-from-socks5/:2:0","series":null,"tags":["openwrt"],"title":"openwrt安装privoxy转换socks5到http代理","uri":"/openwrt-privoxy-http-proxy-from-socks5/#安装privoxy"},{"categories":["Linux"],"content":"\r配置打开 /etc/config/privoxy 通常需要修改这三处配置 list listen_address '0.0.0.0:1071' ## 1071为privoxy监听的端口 option forward_socks5 '/ 0.0.0.0:1111 .' ## 1070为socks5服务端口 list permit_access '10.18.18.0/24' ## 10.18.18.0为LAN网段 ","date":"2024-08-09","objectID":"/openwrt-privoxy-http-proxy-from-socks5/:3:0","series":null,"tags":["openwrt"],"title":"openwrt安装privoxy转换socks5到http代理","uri":"/openwrt-privoxy-http-proxy-from-socks5/#配置"},{"categories":["Linux"],"content":"\r建议forward_socks5最好自建一个socks5的server，这样http也能共享代理软件的规则。 ","date":"2024-08-09","objectID":"/openwrt-privoxy-http-proxy-from-socks5/:4:0","series":null,"tags":["openwrt"],"title":"openwrt安装privoxy转换socks5到http代理","uri":"/openwrt-privoxy-http-proxy-from-socks5/#建议"},{"categories":["Linux"],"content":"\r保存重启 privoxy/etc/init.d/privoxy restart ","date":"2024-08-09","objectID":"/openwrt-privoxy-http-proxy-from-socks5/:5:0","series":null,"tags":["openwrt"],"title":"openwrt安装privoxy转换socks5到http代理","uri":"/openwrt-privoxy-http-proxy-from-socks5/#保存重启-privoxy"},{"categories":["Linux"],"content":"\r验证curl -x 127.0.0.1:8118 -I https://www.google.com ","date":"2024-08-09","objectID":"/openwrt-privoxy-http-proxy-from-socks5/:6:0","series":null,"tags":["openwrt"],"title":"openwrt安装privoxy转换socks5到http代理","uri":"/openwrt-privoxy-http-proxy-from-socks5/#验证"},{"categories":["Linux"],"content":"\r客户端代理设置常见客户端代理设置可见 常见工具的代理设置. ","date":"2024-08-09","objectID":"/openwrt-privoxy-http-proxy-from-socks5/:7:0","series":null,"tags":["openwrt"],"title":"openwrt安装privoxy转换socks5到http代理","uri":"/openwrt-privoxy-http-proxy-from-socks5/#客户端代理设置"},{"categories":["Windows"],"content":"常见工具的代理设置.","date":"2024-08-09","objectID":"/proxy-setting-on-windows/","series":null,"tags":["代理","Windows"],"title":"常见工具的代理设置.","uri":"/proxy-setting-on-windows/"},{"categories":["Windows"],"content":"\r常见工具的代理设置.socks5代理转http代理可见 openwrt安装privoxy转换socks5到http代理 ","date":"2024-08-09","objectID":"/proxy-setting-on-windows/:0:0","series":null,"tags":["代理","Windows"],"title":"常见工具的代理设置.","uri":"/proxy-setting-on-windows/#常见工具的代理设置"},{"categories":["Windows"],"content":"\rpowershell proxy $env:http_proxy=\"http://10.18.18.1:1071\" $env:https_proxy=\"http://10.18.18.1:1071\" ","date":"2024-08-09","objectID":"/proxy-setting-on-windows/:1:0","series":null,"tags":["代理","Windows"],"title":"常见工具的代理设置.","uri":"/proxy-setting-on-windows/#powershell-proxy"},{"categories":["Windows"],"content":"\rscoop proxyscoop config proxy 10.18.18.1:1071 ## HTTP ","date":"2024-08-09","objectID":"/proxy-setting-on-windows/:2:0","series":null,"tags":["代理","Windows"],"title":"常见工具的代理设置.","uri":"/proxy-setting-on-windows/#scoop-proxy"},{"categories":["Windows"],"content":"\rgit proxy git config --global http.proxy socks5://10.18.18.1:1071 git config --global https.proxy socks5://10.18.18.1:1071 git config --global --unset http.proxy git config --global --unset https.proxy git config --global --get http.proxy git config --global --get https.proxy ","date":"2024-08-09","objectID":"/proxy-setting-on-windows/:3:0","series":null,"tags":["代理","Windows"],"title":"常见工具的代理设置.","uri":"/proxy-setting-on-windows/#git-proxy"},{"categories":["Windows"],"content":"\rcmd proxy set HTTP_PROXY=http://10.18.18.1:1071 set HTTPS_PROXY=http://10.18.18.1:1071 set HTTP_PROXY= set HTTPS_PROXY= ","date":"2024-08-09","objectID":"/proxy-setting-on-windows/:4:0","series":null,"tags":["代理","Windows"],"title":"常见工具的代理设置.","uri":"/proxy-setting-on-windows/#cmd-proxy"},{"categories":["Windows"],"content":"\rsystem proxy netsh winhttp set proxy proxy-server=\"http://10.18.18.1:1071\" netsh winhttp set proxy proxy-server=\"http://10.18.18.1:1071\" bypass-list=\"*.local\" netsh winhttp show proxy netsh winhttp reset proxy ","date":"2024-08-09","objectID":"/proxy-setting-on-windows/:5:0","series":null,"tags":["代理","Windows"],"title":"常见工具的代理设置.","uri":"/proxy-setting-on-windows/#system-proxy"},{"categories":["Windows"],"content":"\ryet another system proxy setx HTTP_PROXY \"http://10.18.18.1:1071\" setx HTTPS_PROXY \"http://10.18.18.1:1071\" setx HTTP_PROXY \"\" setx HTTPS_PROXY \"\" ","date":"2024-08-09","objectID":"/proxy-setting-on-windows/:6:0","series":null,"tags":["代理","Windows"],"title":"常见工具的代理设置.","uri":"/proxy-setting-on-windows/#yet-another-system-proxy"},{"categories":["Linux"],"content":"群晖NAS上面使用Crontab","date":"2024-08-08","objectID":"/synology-dsm-nas-crontab/","series":null,"tags":["群晖"],"title":"群晖NAS上面使用Crontab","uri":"/synology-dsm-nas-crontab/"},{"categories":["Linux"],"content":"\r群晖NAS上面使用Crontab群晖nas默认不能直接使用crontab -e来管理计划任务 默认群晖是不允许root直接登陆的, 所以我们要先切换到root下 sudo -i ##输入当前登陆用户的密码 之后编辑/etc/crontab,添加自己的脚本 和普通的crontab不一样,他加了一列用户所以是 minute hour mday mouth wday who comman *例 0 2 * * * root /volume1/backup/backup/u8backup.sh #每天2点以root身份执行该脚本 最后重启下crontab synoservice -restart crond ","date":"2024-08-08","objectID":"/synology-dsm-nas-crontab/:0:0","series":null,"tags":["群晖"],"title":"群晖NAS上面使用Crontab","uri":"/synology-dsm-nas-crontab/#群晖nas上面使用crontab"},{"categories":["Linux"],"content":"openwrt配置LAN口多IP","date":"2024-07-31","objectID":"/openwrt-config-lan-multi-ip/","series":null,"tags":["openwrt","网口"],"title":"openwrt配置LAN口多IP","uri":"/openwrt-config-lan-multi-ip/"},{"categories":["Linux"],"content":"\ropenwrt配置LAN口多IP","date":"2024-07-31","objectID":"/openwrt-config-lan-multi-ip/:0:0","series":null,"tags":["openwrt","网口"],"title":"openwrt配置LAN口多IP","uri":"/openwrt-config-lan-multi-ip/#openwrt配置lan口多ip"},{"categories":["Linux"],"content":"\r与虚拟机中不同之前都是在PVE中装的openwrt，要访问其它网段，直接加虚拟网卡就可以。 但在实体硬件上这招不行了，探索之后发现可以使用网卡别名。 ","date":"2024-07-31","objectID":"/openwrt-config-lan-multi-ip/:1:0","series":null,"tags":["openwrt","网口"],"title":"openwrt配置LAN口多IP","uri":"/openwrt-config-lan-multi-ip/#与虚拟机中不同"},{"categories":["Linux"],"content":"\r修改network配置文件 vi /etc/config/network config interface 'lan' option type 'bridge' option proto 'static' option netmask '255.255.255.0' option _orig_ifname 'eth0 eth1 eth2 eth3' option _orig_bridge 'true' option ifname 'eth0' option ipaddr '192.168.88.1' config alias option interface 'lan' #option proto 'dhcp' option proto 'static' option ipaddr '192.168.236.2' option netmask '255.255.255.0' #option ip6assign '60' ","date":"2024-07-31","objectID":"/openwrt-config-lan-multi-ip/:2:0","series":null,"tags":["openwrt","网口"],"title":"openwrt配置LAN口多IP","uri":"/openwrt-config-lan-multi-ip/#修改network配置文件"},{"categories":["Linux"],"content":"\rimmortalwrt中使用别名immortalwrt中也可以新建接口，选择alias @lan ","date":"2024-07-31","objectID":"/openwrt-config-lan-multi-ip/:3:0","series":null,"tags":["openwrt","网口"],"title":"openwrt配置LAN口多IP","uri":"/openwrt-config-lan-multi-ip/#immortalwrt中使用别名"},{"categories":["Linux"],"content":"\r防火墙设置新接口加入WAN，即可ping通其它网段 再配合静态路由，即可在LAN中任何设备ping通其它网段 ","date":"2024-07-31","objectID":"/openwrt-config-lan-multi-ip/:4:0","series":null,"tags":["openwrt","网口"],"title":"openwrt配置LAN口多IP","uri":"/openwrt-config-lan-multi-ip/#防火墙设置"},{"categories":["Linux"],"content":"openwrt编译支持安卓usb共享网络","date":"2024-07-31","objectID":"/openwrt-compile-usb-share-network-android/","series":null,"tags":["openwrt"],"title":"openwrt编译支持安卓usb共享网络","uri":"/openwrt-compile-usb-share-network-android/"},{"categories":["Linux"],"content":"\ropenwrt编译支持安卓usb共享网络","date":"2024-07-31","objectID":"/openwrt-compile-usb-share-network-android/:0:0","series":null,"tags":["openwrt"],"title":"openwrt编译支持安卓usb共享网络","uri":"/openwrt-compile-usb-share-network-android/#openwrt编译支持安卓usb共享网络"},{"categories":["Linux"],"content":"\r必备组件 Kernal modules - USB Support - kmod-usb-net - kmod-usb-net-cdc-ether - kmod-usb-net-rndis #手机热点usb共享Modem拨号 Utilities - Editors - nano-full - usbutils ","date":"2024-07-31","objectID":"/openwrt-compile-usb-share-network-android/:1:0","series":null,"tags":["openwrt"],"title":"openwrt编译支持安卓usb共享网络","uri":"/openwrt-compile-usb-share-network-android/#必备组件"},{"categories":["Linux"],"content":"\r连接安卓安卓连接到openwrt设备的USB口 打开安卓–设置–移动网络–个人热点–更多共享设置–通过USB共享网络（不接USB时不会显示此选择） ","date":"2024-07-31","objectID":"/openwrt-compile-usb-share-network-android/:2:0","series":null,"tags":["openwrt"],"title":"openwrt编译支持安卓usb共享网络","uri":"/openwrt-compile-usb-share-network-android/#连接安卓"},{"categories":["Linux"],"content":"\r添加网口网络——接口——添加新接口 协议选择“DHCP客户端” 设备选择“以太网适配器(USB设备)” （在没连接USB设备的情况下， “设备”一栏不会出现这个设备） 网口加入WAN防火墙区域 过一会儿就能看到USB接口有流量数据了 ","date":"2024-07-31","objectID":"/openwrt-compile-usb-share-network-android/:3:0","series":null,"tags":["openwrt"],"title":"openwrt编译支持安卓usb共享网络","uri":"/openwrt-compile-usb-share-network-android/#添加网口"},{"categories":["Linux"],"content":"\r自动打开个人热点openwrt重启后个人热点会断点，因此需要automate之类的工具，当插入usb时自动打开USB共享网络（待完成） ","date":"2024-07-31","objectID":"/openwrt-compile-usb-share-network-android/:4:0","series":null,"tags":["openwrt"],"title":"openwrt编译支持安卓usb共享网络","uri":"/openwrt-compile-usb-share-network-android/#自动打开个人热点"},{"categories":["Linux"],"content":"树莓派3B+编译openwrt","date":"2024-07-31","objectID":"/raspberry-3b-openwrt/","series":null,"tags":["openwrt","树莓派"],"title":"树莓派3B+编译openwrt","uri":"/raspberry-3b-openwrt/"},{"categories":["Linux"],"content":"\r树莓派3B+编译openwrt","date":"2024-07-31","objectID":"/raspberry-3b-openwrt/:0:0","series":null,"tags":["openwrt","树莓派"],"title":"树莓派3B+编译openwrt","uri":"/raspberry-3b-openwrt/#树莓派3b编译openwrt"},{"categories":["Linux"],"content":"\r更换CPU架构","date":"2024-07-31","objectID":"/raspberry-3b-openwrt/:1:0","series":null,"tags":["openwrt","树莓派"],"title":"树莓派3B+编译openwrt","uri":"/raspberry-3b-openwrt/#更换cpu架构"},{"categories":["Linux"],"content":"\r如果需要同时编译多个CPU架构，可以将每个CPU架构用一个虚拟机编译","date":"2024-07-31","objectID":"/raspberry-3b-openwrt/:1:1","series":null,"tags":["openwrt","树莓派"],"title":"树莓派3B+编译openwrt","uri":"/raspberry-3b-openwrt/#如果需要同时编译多个cpu架构可以将每个cpu架构用一个虚拟机编译"},{"categories":["Linux"],"content":"\r清除之前CPU架构的编译残留make dirclean 此操作会删除/bin和/build_dir目录的中的文件(make clean)以及/staging_dir、/toolchain、/tmp和/logs中的文件。 rm -rf tmp rm -f .config #最好重新配置 ","date":"2024-07-31","objectID":"/raspberry-3b-openwrt/:1:2","series":null,"tags":["openwrt","树莓派"],"title":"树莓派3B+编译openwrt","uri":"/raspberry-3b-openwrt/#清除之前cpu架构的编译残留"},{"categories":["Linux"],"content":"\r编译OpenWrtmake menuconfig make download -j8 V=s make -j$(nproc) || make -j1 || make -j1 V=s trojan-plus如果有gsl编译错误一般是因为git clone出错，多试几次即可 编译成功后bin/targets下会有factory和sysupgrade两个gz文件，factory用于刷新机器，sysupgrade用于更新openwrt。 ","date":"2024-07-31","objectID":"/raspberry-3b-openwrt/:2:0","series":null,"tags":["openwrt","树莓派"],"title":"树莓派3B+编译openwrt","uri":"/raspberry-3b-openwrt/#编译openwrt"},{"categories":["Linux"],"content":"\r烧录镜像","date":"2024-07-31","objectID":"/raspberry-3b-openwrt/:3:0","series":null,"tags":["openwrt","树莓派"],"title":"树莓派3B+编译openwrt","uri":"/raspberry-3b-openwrt/#烧录镜像"},{"categories":["Linux"],"content":"\r格式化SD卡最好用SDCardFormatterv5，其它工具经常会导致烧录校验失败 ","date":"2024-07-31","objectID":"/raspberry-3b-openwrt/:3:1","series":null,"tags":["openwrt","树莓派"],"title":"树莓派3B+编译openwrt","uri":"/raspberry-3b-openwrt/#格式化sd卡"},{"categories":["Linux"],"content":"\r写入SD卡使用etcher ","date":"2024-07-31","objectID":"/raspberry-3b-openwrt/:3:2","series":null,"tags":["openwrt","树莓派"],"title":"树莓派3B+编译openwrt","uri":"/raspberry-3b-openwrt/#写入sd卡"},{"categories":["Linux"],"content":"\r插卡，上电","date":"2024-07-31","objectID":"/raspberry-3b-openwrt/:4:0","series":null,"tags":["openwrt","树莓派"],"title":"树莓派3B+编译openwrt","uri":"/raspberry-3b-openwrt/#插卡上电"},{"categories":["Linux"],"content":"\r连接WIFI: immortalwrt，可查看lan地址","date":"2024-07-31","objectID":"/raspberry-3b-openwrt/:5:0","series":null,"tags":["openwrt","树莓派"],"title":"树莓派3B+编译openwrt","uri":"/raspberry-3b-openwrt/#连接wifi-immortalwrt可查看lan地址"},{"categories":["Linux"],"content":"\r登陆管理界面","date":"2024-07-31","objectID":"/raspberry-3b-openwrt/:6:0","series":null,"tags":["openwrt","树莓派"],"title":"树莓派3B+编译openwrt","uri":"/raspberry-3b-openwrt/#登陆管理界面"},{"categories":["Linux"],"content":"\r关闭电源灯 （待验证）红色电源灯看着不舒服可以关掉 点击「系统 -\u003e LED 配置」，使用两个配置。 配置 1 软件：led0 LED 名称：led0 默认状态：不打勾 触发器：无 配置 2 软件：led1 LED 名称：led1 默认状态：不打勾 触发器：无 ","date":"2024-07-31","objectID":"/raspberry-3b-openwrt/:7:0","series":null,"tags":["openwrt","树莓派"],"title":"树莓派3B+编译openwrt","uri":"/raspberry-3b-openwrt/#关闭电源灯-待验证"},{"categories":["IT备忘"],"content":"TPLINK的AP无法连接","date":"2024-05-07","objectID":"/tplink-ap-connot-connect/","series":null,"tags":["网络"],"title":"TPLINK的AP无法连接","uri":"/tplink-ap-connot-connect/"},{"categories":["IT备忘"],"content":"\rTPLINK的AP无法连接突然发现4个AP中有两个无法连接（管理），查资料后发现是因为AP无法在DHCP获取IP。 因为我的TPLINK路由器关闭了DHCP，改由软路由DHCP，因为软路由可以将自定义的终端名称写入dnsmasq，这样可以直接ping终端名称。 ","date":"2024-05-07","objectID":"/tplink-ap-connot-connect/:0:0","series":null,"tags":["网络"],"title":"TPLINK的AP无法连接","uri":"/tplink-ap-connot-connect/#tplink的ap无法连接"},{"categories":["IT备忘"],"content":"\r解决方案重新用TPLINK DHCP，设置AP的MAC为静态IP，AP获取到IP之后就可以管理了，然后再切换到软路由DHCP。 ","date":"2024-05-07","objectID":"/tplink-ap-connot-connect/:0:0","series":null,"tags":["网络"],"title":"TPLINK的AP无法连接","uri":"/tplink-ap-connot-connect/#解决方案"},{"categories":["IT备忘 Linux"],"content":"挂载raid1的其中一块盘","date":"2024-04-25","objectID":"/mount-one-disk-of-raid1/","series":null,"tags":["Linux disk"],"title":"挂载raid1的其中一块盘","uri":"/mount-one-disk-of-raid1/"},{"categories":["IT备忘 Linux"],"content":"\r挂载raid1的其中一块盘直接挂载会报错 sudo mount /dev/sdf3 /volume1/sync/old mount: /volume1/sync/old: unknown filesystem type ’linux_raid_member'. 需要先组装成软raid1 sudo mdadm --assemble --run /dev/md6 /dev/sdf3 然后再挂载软raid1 sudo mount /dev/md6 /volume1/sync/old ","date":"2024-04-25","objectID":"/mount-one-disk-of-raid1/:0:0","series":null,"tags":["Linux disk"],"title":"挂载raid1的其中一块盘","uri":"/mount-one-disk-of-raid1/#挂载raid1的其中一块盘"},{"categories":["Linux"],"content":"PVE安装黑群DSM7","date":"2024-04-18","objectID":"/pve-xpenology-dsm7/","series":null,"tags":["黑群"],"title":"PVE安装黑群DSM7","uri":"/pve-xpenology-dsm7/"},{"categories":["Linux"],"content":"\rPVE安装黑群DSM7","date":"2024-04-18","objectID":"/pve-xpenology-dsm7/:0:0","series":null,"tags":["黑群"],"title":"PVE安装黑群DSM7","uri":"/pve-xpenology-dsm7/#pve安装黑群dsm7"},{"categories":["Linux"],"content":"\r下载最新引导arpl ","date":"2024-04-18","objectID":"/pve-xpenology-dsm7/:1:0","series":null,"tags":["黑群"],"title":"PVE安装黑群DSM7","uri":"/pve-xpenology-dsm7/#下载最新引导"},{"categories":["Linux"],"content":"\r新建vm cpu选host，打开NUMA 打开QEMU GA 内存4G 默认的硬盘（装完就分离此硬盘） 接上要直通的网卡（！在启动引导之前加上，因为要判断驱动） ","date":"2024-04-18","objectID":"/pve-xpenology-dsm7/:2:0","series":null,"tags":["黑群"],"title":"PVE安装黑群DSM7","uri":"/pve-xpenology-dsm7/#新建vm"},{"categories":["Linux"],"content":"\r上传到pve qm importdisk 1002 ./arpl.img local-zfs ","date":"2024-04-18","objectID":"/pve-xpenology-dsm7/:3:0","series":null,"tags":["黑群"],"title":"PVE安装黑群DSM7","uri":"/pve-xpenology-dsm7/#上传到pve"},{"categories":["Linux"],"content":"\r挂载arpl盘，并设置为启动盘确保路由器dhcp ","date":"2024-04-18","objectID":"/pve-xpenology-dsm7/:4:0","series":null,"tags":["黑群"],"title":"PVE安装黑群DSM7","uri":"/pve-xpenology-dsm7/#挂载arpl盘并设置为启动盘"},{"categories":["Linux"],"content":"\r开机进入Web console （http://10.8.0.x:7681/）User config is on/mnt/p1/user-config.ynl Default SSH Root password is Redp1lL-1s-4ueSomE ","date":"2024-04-18","objectID":"/pve-xpenology-dsm7/:5:0","series":null,"tags":["黑群"],"title":"PVE安装黑群DSM7","uri":"/pve-xpenology-dsm7/#开机进入web-console-http1080x7681"},{"categories":["Linux"],"content":"\r设置黑群型号 DS3617xs （其它几个试了都无法启动） 选最高的build（我只到42962，即7.1） 随机生成SN 添加必要的addon Boot Build Boot Loader 重启虚拟机（等web console显示Connection Closed） 如果重启后无法进入安装界面则可能要换一个型号 ","date":"2024-04-18","objectID":"/pve-xpenology-dsm7/:6:0","series":null,"tags":["黑群"],"title":"PVE安装黑群DSM7","uri":"/pve-xpenology-dsm7/#设置黑群型号"},{"categories":["Linux"],"content":"\r进入安装界面（http://10.8.0.x:5000/）到 Synology下载对应Build的pat ","date":"2024-04-18","objectID":"/pve-xpenology-dsm7/:7:0","series":null,"tags":["黑群"],"title":"PVE安装黑群DSM7","uri":"/pve-xpenology-dsm7/#进入安装界面http1080x5000"},{"categories":["Linux"],"content":"\r安装完成后，powerbutton (是否是此套件的效果有待验证) 下载 powerbutton-7.0-bromolow.tar + install.sh （已经放到onedrive） 用ssh登陆dsm sudo su 输入密码 进入上传的文件夹 cd /volume3/3TII/pb/ chmod 755 install.sh sh install.sh 套件中心 可加入： https://spk7.imnks.com ","date":"2024-04-18","objectID":"/pve-xpenology-dsm7/:8:0","series":null,"tags":["黑群"],"title":"PVE安装黑群DSM7","uri":"/pve-xpenology-dsm7/#安装完成后powerbutton-是否是此套件的效果有待验证"},{"categories":["Windows"],"content":"WIN11无线网卡没有电源管理选项","date":"2024-04-10","objectID":"/no-power-management-option-for-the-wi-n11-wireless-card/","series":null,"tags":["Windows 无线网卡"],"title":"WIN11无线网卡没有电源管理选项","uri":"/no-power-management-option-for-the-wi-n11-wireless-card/"},{"categories":["Windows"],"content":"\rWIN11无线网卡没有电源管理选项reg add HKLM\\System\\CurrentControlSet\\Control\\Power /v PlatformAoAcOverride /t REG_DWORD /d 0 ","date":"2024-04-10","objectID":"/no-power-management-option-for-the-wi-n11-wireless-card/:0:0","series":null,"tags":["Windows 无线网卡"],"title":"WIN11无线网卡没有电源管理选项","uri":"/no-power-management-option-for-the-wi-n11-wireless-card/#win11无线网卡没有电源管理选项"},{"categories":["IT备忘","Linux"],"content":"openwrt-BCM2710-compile","date":"2024-04-07","objectID":"/openwrt-compile/","series":null,"tags":["openwrt"],"title":"openwrt-BCM2710-compile","uri":"/openwrt-compile/"},{"categories":["IT备忘","Linux"],"content":"\ropenwrt-compile #!/bin/bash proj=immortalwrt home=/home/henry ver=openwrt-23.05 nasdir=henry@10.8.0.2:/volume1/pve/images system=bcm27xx target=bcm2710 profile=rpi-3 bindir=$home/$proj/bin/targets/$system/$target factory=$proj-$system-$target-$profile-squashfs-factory sysupgrade=$proj-$system-$target-$profile-squashfs-sysupgrade timestamp=$(date +\"%Y%m%d\") ## For the first time compile #git clone -b $ver --single-branch --filter=blob:none https://github.com/immortalwrt/immortalwrt cd $home/$proj \u0026\u0026 \\ cp .config $home/compile/openwrt-$(date +%u).config \u0026\u0026 \\ git pull \u0026\u0026 \\ ##### For the first time compile =\u003e #echo \"src-git passwall_packages https://github.com/xiaorouji/openwrt-passwall-packages.git;main\" \u003e\u003e feeds.conf.default \u0026\u0026 \\ #echo \"src-git passwall https://github.com/xiaorouji/openwrt-passwall.git;main\" \u003e\u003e feeds.conf.default \u0026\u0026 \\ #git clone https://github.com/jerrykuku/luci-theme-argon.git package/luci-theme-argon.git \u0026\u0026 \\ #git clone https://github.com/jerrykuku/luci-app-argon-config.git package/luci-app-argon-config \u0026\u0026 \\ #git clone https://github.com/nixonli/ddns-scripts_dnspod.git package/ddns-scripts_dnspod \u0026\u0026 \\ #git clone https://github.com/zzsj0928/luci-app-pushbot package/luci-app-pushbot \u0026\u0026 \\ ##### For the first time compile \u003c= sed -i 's/192.168.1.1/10.18.18.1/g' package/base-files/files/bin/config_generate \u0026\u0026 \\ ./scripts/feeds update -a \u0026\u0026 ./scripts/feeds install -a \u0026\u0026 \\ make clean \u0026\u0026 make -j1 V=s \u0026\u0026 \\ scp -i $home/.ssh/id_ed25519 $bindir/$sysupgrade.img.gz $nasdir/$sysupgrade-$timestamp.img.gz \u0026\u0026 \\ scp -i $home/.ssh/id_ed25519 $bindir/$factory.img.gz $nasdir/$factory-$timestamp.img.gz if [ $? -eq 0 ]; then result=\"successful\" else result=\"failed=$?\" fi dingding=\"https://oapi.dingtalk.com/robot/send?access_token=dingdingtoken\" msg=\"'{\\\"msgtype\\\": \\\"text\\\", \\\"text\\\":{\\\"content\\\":\\\"[Builder] Built $ver for $system-$target $result\\\"}}'\" CURL=\"curl $dingding -H 'Content-Type: application/json' -X POST --data $msg\" eval $CURL #echo \"Compile openWrt: result $result\" | mailx -s \"Compile OpenWrt $ver $result\" root ","date":"2024-04-07","objectID":"/openwrt-compile/:0:0","series":null,"tags":["openwrt"],"title":"openwrt-BCM2710-compile","uri":"/openwrt-compile/#openwrt-compile"},{"categories":["IT备忘"],"content":"openwrt-BCM2710-menuconfig","date":"2024-04-07","objectID":"/openwrt-menuconfig-bcm2710/","series":null,"tags":["openwrt","树莓派3B+"],"title":"openwrt-BCM2710-menuconfig","uri":"/openwrt-menuconfig-bcm2710/"},{"categories":["IT备忘"],"content":"\ropenwrt-menuconfig Target system - BCM27XX Subtarget - BCM2710 Target profile - Raspberry Pi 3B+ Target images - tar.gz （不选则不会进行打包） - squashfs - kernal 256 MB - root 1024 MB Kernal modules - USB Support - kmod-usb-net - kmod-usb-net-cdc-ether - kmod-usb-net-rndis #手机热点usb共享Modem拨号 LUCI - application - accesscontrol 访问时间控制 - autoreboot - ahcp：自动配置IPv6，IPv4v6双栈；用于路由探测与地址分配 - argon config - attendedsysupgrade 系统更新 - banip - commands - #cshark：Cloud Shark，数据流抓取工具套件 - ddns - #diag-core：诊断工具套件，执行ping，扫描等，视安装的工具套件而定 - #DNSCrypt-Proxy：将特定于 DNSCrypt-Proxy 的设置应用到 Dnsmasq 配置 - nlbwmon: 流量监控 - nut (network ups tool) - # passwall （trojan-plus如果有gsl编译错误一般是因为git clone出错，多试几次即可） - keepalived - privoxy - pushbot - smartdns - socat - ssr-plus (加kcpun / trojan) - timecontrol ? - timewol - tiny proxy - ttyd - #transmission - turbo acc - udp2raw - upnp - vlmcsd (KMS) - watchcat - wol - wrtbwmon (Realtime monitor traffic) - xfrpc - zerotier - themes - argon Utilities - Editors - nano-full - usbutils Extra packages - ipv6helper Base system - dnsmasq-full Networt - Ip addresses and names - ddns-scripts-dnspod - Web Servers/Proxies (? 会导致包较大) - nginx-full - nginx-ssl ","date":"2024-04-07","objectID":"/openwrt-menuconfig-bcm2710/:0:0","series":null,"tags":["openwrt","树莓派3B+"],"title":"openwrt-BCM2710-menuconfig","uri":"/openwrt-menuconfig-bcm2710/#openwrt-menuconfig"},{"categories":["IT备忘 Linux"],"content":"openwrt-feeds","date":"2024-04-07","objectID":"/openwrt-feeds/","series":null,"tags":["openwrt"],"title":"openwrt-feeds","uri":"/openwrt-feeds/"},{"categories":["IT备忘 Linux"],"content":"\ropenwrt-feeds src-git packages https://github.com/coolsnowwolf/packages src-git luci https://github.com/coolsnowwolf/luci src-git routing https://git.openwrt.org/feed/routing.git src-git telephony https://git.openwrt.org/feed/telephony.git src-git passwall_packages https://github.com/xiaorouji/openwrt-passwall-packages.git;main src-git passwall https://github.com/xiaorouji/openwrt-passwall.git;main ","date":"2024-04-07","objectID":"/openwrt-feeds/:0:0","series":null,"tags":["openwrt"],"title":"openwrt-feeds","uri":"/openwrt-feeds/#openwrt-feeds"},{"categories":["Linux"],"content":"PVE开启SR-IOV","date":"2024-04-05","objectID":"/pve-enables-sr-iov/","series":null,"tags":["PVE","SR-IOV"],"title":"PVE开启SR-IOV","uri":"/pve-enables-sr-iov/"},{"categories":["Linux"],"content":"\rPVE开启SR-IOV","date":"2024-04-05","objectID":"/pve-enables-sr-iov/:0:0","series":null,"tags":["PVE","SR-IOV"],"title":"PVE开启SR-IOV","uri":"/pve-enables-sr-iov/#pve开启sr-iov"},{"categories":["Linux"],"content":"\r开启 IOMMU","date":"2024-04-05","objectID":"/pve-enables-sr-iov/:1:0","series":null,"tags":["PVE","SR-IOV"],"title":"PVE开启SR-IOV","uri":"/pve-enables-sr-iov/#开启-iommu"},{"categories":["Linux"],"content":"\rCPU 支持VT-D和VT-X，并在BIOS中打开编辑文件/etc/default/grub 修改行GRUB_CMDLINE_LINUX_DEFAULT=“quiet” 使其为GRUB_CMDLINE_LINUX_DEFAULT=“quiet intel_iommu=on iommu=pt” update-grub dmesg | grep -e DMAR -e IOMMU DMAR: IOMMU enabled vi /etc/modules vfio vfio_iommu_type1 vfio_pci vfio_virqfd update-initramfs -u -k all cat /etc/kernel/cmdline root=ZFS=rpool/ROOT/pve-1 boot=zfs quiet intel_iommu=on iommu=pt reboot ","date":"2024-04-05","objectID":"/pve-enables-sr-iov/:1:1","series":null,"tags":["PVE","SR-IOV"],"title":"PVE开启SR-IOV","uri":"/pve-enables-sr-iov/#cpu-支持vt-d和vt-x并在bios中打开"},{"categories":["Linux"],"content":"\r开启SR-IOV打开 /etc/default/grub 文件,在GRUB_CMDLINE_LINUX_DEFAULT行添加以下内容 pci=assign-busses是因为部署SR IOV的时候报错”write error: Cannot allocate memory“ 编辑文件/etc/default/grub 修改行GRUB_CMDLINE_LINUX_DEFAULT=“quiet” 使其为GRUB_CMDLINE_LINUX_DEFAULT=“quiet intel_iommu=on iommu=pt pci=assign-busses pcie_acs_override=downstream” ","date":"2024-04-05","objectID":"/pve-enables-sr-iov/:2:0","series":null,"tags":["PVE","SR-IOV"],"title":"PVE开启SR-IOV","uri":"/pve-enables-sr-iov/#开启sr-iov"},{"categories":["Linux"],"content":"\rcmdline这一步搜索了很久 cat /etc/kernel/cmdline root=ZFS=rpool/ROOT/pve-1 boot=zfs quiet intel_iommu=on iommu=pt pci=assign-busses pcie_acs_override=downstream cat /sys/bus/pci/devices/0000:01:00.1/sriov_totalvfs echo 7 \u003e /sys/class/net/ens3f1/device/sriov_numvfs vi /etc/systemd/system/sriov.service [Unit] Description=Script to enable SR-IOV on boot [Service] Type=simple #start SR-IOV ExecStartPre=/usr/bin/bash -c '/usr/bin/echo 7 \u003e /sys/class/net/ens3f0/device/sriov_numvfs' ExecStartPre=/usr/bin/bash -c '/usr/bin/echo 7 \u003e /sys/class/net/ens3f1/device/sriov_numvfs' #set VF MAC # 0000:02:10.0 ExecStartPre=/usr/bin/bash -c '/usr/bin/ip link set dev ens3f0 vf 0 mac 08:08:00:00:00:00' # 0000:02:10.4 ExecStartPre=/usr/bin/bash -c '/usr/bin/ip link set dev ens3f0 vf 1 mac 08:08:00:00:00:01' # 0000:02:11.0 ExecStartPre=/usr/bin/bash -c '/usr/bin/ip link set dev ens3f0 vf 2 mac 08:08:00:00:00:02' # 0000:02:11.4 ExecStartPre=/usr/bin/bash -c '/usr/bin/ip link set dev ens3f0 vf 3 mac 08:08:00:00:00:03' # 0000:02:12.0 ExecStartPre=/usr/bin/bash -c '/usr/bin/ip link set dev ens3f0 vf 4 mac 08:08:00:00:00:04' # 0000:02:12.4 ExecStartPre=/usr/bin/bash -c '/usr/bin/ip link set dev ens3f0 vf 5 mac 08:08:00:09:00:05' # 0000:02:13.0 ExecStartPre=/usr/bin/bash -c '/usr/bin/ip link set dev ens3f0 vf 6 vlan 9 mac 08:08:00:09:00:06' # 0000:02:10.1 #ExecStartPre=/usr/bin/bash -c '/usr/bin/ip link set dev ens3f1 vf 0 mac 08:08:00:00:01:00' # 0000:02:10.5 #ExecStartPre=/usr/bin/bash -c '/usr/bin/ip link set dev ens3f1 vf 1 mac 08:08:00:00:01:01' # 0000:02:11.1 #ExecStartPre=/usr/bin/bash -c '/usr/bin/ip link set dev ens3f1 vf 2 mac 08:08:00:00:01:02' # 0000:02:11.5 #ExecStartPre=/usr/bin/bash -c '/usr/bin/ip link set dev ens3f1 vf 3 mac 08:08:00:00:01:03' # 0000:02:12.1 #ExecStartPre=/usr/bin/bash -c '/usr/bin/ip link set dev ens3f1 vf 4 mac 08:08:00:00:01:04' # 0000:02:12.5 #ExecStartPre=/usr/bin/bash -c '/usr/bin/ip link set dev ens3f1 vf 5 mac 08:08:00:09:01:05' # 0000:02:13.1 #ExecStartPre=/usr/bin/bash -c '/usr/bin/ip link set dev ens3f1 vf 6 vlan 9 mac 08:08:00:09:01:06' #set PF up ExecStartPre=/usr/bin/bash -c '/usr/bin/ip link set ens3f0 up' ExecStartPre=/usr/bin/bash -c '/usr/bin/ip link set ens3f1 up' #set VF up ExecStartPre=/usr/bin/bash -c '/usr/bin/ip link set ens3f0v0 up' ExecStartPre=/usr/bin/bash -c '/usr/bin/ip link set ens3f0v1 up' ExecStartPre=/usr/bin/bash -c '/usr/bin/ip link set ens3f0v2 up' ExecStartPre=/usr/bin/bash -c '/usr/bin/ip link set ens3f0v3 up' ExecStartPre=/usr/bin/bash -c '/usr/bin/ip link set ens3f0v4 up' ExecStartPre=/usr/bin/bash -c '/usr/bin/ip link set ens3f0v5 up' ExecStartPre=/usr/bin/bash -c '/usr/bin/ip link set ens3f0v6 up' # ExecStartPre=/usr/bin/bash -c '/usr/bin/ip link set ens3f1v0 up' # ExecStartPre=/usr/bin/bash -c '/usr/bin/ip link set ens3f1v1 up' # ExecStartPre=/usr/bin/bash -c '/usr/bin/ip link set ens3f1v2 up' # ExecStartPre=/usr/bin/bash -c '/usr/bin/ip link set ens3f1v3 up' # ExecStartPre=/usr/bin/bash -c '/usr/bin/ip link set ens3f1v4 up' # ExecStartPre=/usr/bin/bash -c '/usr/bin/ip link set ens3f1v5 up' # ExecStartPre=/usr/bin/bash -c '/usr/bin/ip link set ens3f1v6 up' #ExecStart=/usr/bin/bash -c '/usr/bin/ip addr add 10.8.0.222/24 dev ens3f1v4' Restart=on-failure [Install] WantedBy=multi-user.target systemctl daemon-reload systemctl enable sriov.service reboot dmesg | grep ensf 0000:02:10.0 ens3f0v0 08:08:00:00:00:00 10.8.0.249 - wan0 0000:02:10.4 ens3f0v1 08:08:00:00:00:01 0000:02:11.0 ens3f0v2 08:08:00:00:00:02 10.8.0.2 - dsm 0000:02:11.4 ens3f0v3 08:08:00:00:00:03 0000:02:12.0 ens3f0v4 08:08:00:00:00:04 0000:02:12.4 ens3f0v5 08:08:00:09:00:05 0000:02:13.0 ens3f0v6 08:08:00:09:00:06 0000:02:10.1 ens3f1v0 08:08:00:00:01:00 10.8.0.253 - gw 0000:02:10.5 ens3f1v1 08:08:00:00:01:01 0000:02:11.1 ens3f1v2 08:08:00:00:01:02 0000:02:11.5 ens3f1v3 08:08:00:00:01:03 0000:02:12.1 ens3f1v4 08:08:00:00:01:04 10.8.0.222 - backup manage of pve 0000:02:12.5 ens3f1v5 08:08:00:09:01:05 10.8.9.1 - lan9 0000:02:13.1 ","date":"2024-04-05","objectID":"/pve-enables-sr-iov/:2:1","series":null,"tags":["PVE","SR-IOV"],"title":"PVE开启SR-IOV","uri":"/pve-enables-sr-iov/#cmdline这一步搜索了很久"},{"categories":["IT备忘"],"content":"github问题","date":"2023-12-21","objectID":"/github-issues/","series":null,"tags":["IT备忘","github"],"title":"github问题","uri":"/github-issues/"},{"categories":["IT备忘"],"content":"\rgithub问题","date":"2023-12-21","objectID":"/github-issues/:0:0","series":null,"tags":["IT备忘","github"],"title":"github问题","uri":"/github-issues/#github问题"},{"categories":["IT备忘"],"content":"\rkex_exchange_identification kex_exchange_identification: Connection closed by remote host Connection closed by 20.205.243.166 port 22 fatal: Could not read from remote repository. Please make sure you have the correct access rights and the repository exists. From stackoverflow.com : For fixing the issues add the Hostname for Git on ~/.ssh/config, Host github.com Hostname ssh.github.com Port 443 In my case github! ","date":"2023-12-21","objectID":"/github-issues/:1:0","series":null,"tags":["IT备忘","github"],"title":"github问题","uri":"/github-issues/#kex_exchange_identification"},{"categories":["Linux"],"content":"zerotier自建moon节点","date":"2023-11-07","objectID":"/zerotier-self-built-moon-node/","series":null,"tags":["zerotier"],"title":"zerotier自建moon节点","uri":"/zerotier-self-built-moon-node/"},{"categories":["Linux"],"content":"\rzerotier自建moon节点","date":"2023-11-07","objectID":"/zerotier-self-built-moon-node/:0:0","series":null,"tags":["zerotier"],"title":"zerotier自建moon节点","uri":"/zerotier-self-built-moon-node/#zerotier自建moon节点"},{"categories":["Linux"],"content":"\rOneDrive\\configs\\OWV9\\etc\\config\\zero\\moons.d curl -s https://install.zerotier.com/ | sudo bash sudozerotier-cli join $planetid cd /var/lib/zerotier-one/ sudo zerotier-idtool initmoon identity.public \u003e moon.json nano moon.json # \"stableEndpoints\": [ \"111.111.111.111/9993\" ] # 111.111.111.111修改为自己的公网ip sudo zerotier-idtool genmoon moon.json mkdir moons.d mv 000000xxxxxxxxxxxx.moon moons.d/ systemctl restart zerotier-one # 重启zerotier # 另一台openwrt zerotier-cli orbit $orbitid $orbitid ","date":"2023-11-07","objectID":"/zerotier-self-built-moon-node/:1:0","series":null,"tags":["zerotier"],"title":"zerotier自建moon节点","uri":"/zerotier-self-built-moon-node/#onedriveconfigsowv9etcconfigzeromoonsd"},{"categories":["Linux"],"content":"PVE解决e1000-detect-hardware-unit-hang的问题","date":"2023-06-02","objectID":"/pve-troubleshoot-the-e1000-detect-hardware-unit-hang/","series":null,"tags":["PVE"],"title":"PVE解决e1000-detect-hardware-unit-hang的问题","uri":"/pve-troubleshoot-the-e1000-detect-hardware-unit-hang/"},{"categories":["Linux"],"content":"\rPVE解决e1000-detect-hardware-hang的问题","date":"2023-06-02","objectID":"/pve-troubleshoot-the-e1000-detect-hardware-unit-hang/:0:0","series":null,"tags":["PVE"],"title":"PVE解决e1000-detect-hardware-unit-hang的问题","uri":"/pve-troubleshoot-the-e1000-detect-hardware-unit-hang/#pve解决e1000-detect-hardware-hang的问题"},{"categories":["Linux"],"content":"\r经常发现PVE无法PING通","date":"2023-06-02","objectID":"/pve-troubleshoot-the-e1000-detect-hardware-unit-hang/:1:0","series":null,"tags":["PVE"],"title":"PVE解决e1000-detect-hardware-unit-hang的问题","uri":"/pve-troubleshoot-the-e1000-detect-hardware-unit-hang/#经常发现pve无法ping通"},{"categories":["Linux"],"content":"\r论坛上的结论是关闭 tso gso gro nano /etc/network/interfaces #找到对应的网卡，iface eno1 inet manual，加上： post-up /usr/bin/logger -p debug -t ifup \"Disabling segmentation offload for eno1\" \u0026\u0026 /sbin/ethtool -K eno1 tso off gso off gro off \u0026\u0026 /usr/bin/logger -p debug -t ifup \"Disabled offload for eno1\" ","date":"2023-06-02","objectID":"/pve-troubleshoot-the-e1000-detect-hardware-unit-hang/:1:1","series":null,"tags":["PVE"],"title":"PVE解决e1000-detect-hardware-unit-hang的问题","uri":"/pve-troubleshoot-the-e1000-detect-hardware-unit-hang/#论坛上的结论是关闭-tso-gso-gro"},{"categories":["Linux"],"content":"\r另外，参考网上的文章 综合以上几种方法，我最后采用的解决办法是：禁用Proxmox宿主机上的TCP checksum offload，并将OpenWRT使用的网卡虚拟化方式改为E1000。实际测试下来没有再发生网卡hang的问题，满速率下载（250Mbps左右）时CPU占用率50%左右，比之前使用Virtio时CPU占用率要高10%左右，还是可以接受的。 问题算是解决了，最后顺带去进一步学习了下相关的知识，首先是TCP checksum offload，此技术的作用是将计算TCP checksum的工作由CPU软件实现改为由NIC设备（即网卡等）硬件实现，以此达到节约CPU资源的目的。 另外就是Virtio与E1000，这是两种不同的网络虚拟化技术，Virtio是半虚拟化而E1000是全虚拟化。对于全虚拟化方案来说，虚拟机是完全感知不到自己是运行在一个虚拟环境中的；而半虚拟化则是虚拟机知道自己就是运行在一个虚拟环境中，此时IO驱动就可以做一些针对性的修改优化，以此降低虚拟化层进行转换带来的开销及性能损失。显而易见，半虚拟化技术的隔离度是没有全虚拟化好的，而且要是虚拟机驱动有问题会导致宿主机也出问题。这就是为什么在使用Virtio时，OpenWRT网络出现问题会导致整个Proxmox的网络都不能用了的原因。除了这两种虚拟化方式外，还有些更为先进的虚拟化技术，如SR-IVO等，有兴趣的话可以看看下面这篇文章的总结： KVM虚拟化网络优化技术总结 ","date":"2023-06-02","objectID":"/pve-troubleshoot-the-e1000-detect-hardware-unit-hang/:1:2","series":null,"tags":["PVE"],"title":"PVE解决e1000-detect-hardware-unit-hang的问题","uri":"/pve-troubleshoot-the-e1000-detect-hardware-unit-hang/#另外参考网上的文章"},{"categories":["Linux"],"content":"PVE解决inbound丢包问题","date":"2023-06-01","objectID":"/pve-solves-the-inbound-packet-loss-problem/","series":null,"tags":["PVE"],"title":"PVE解决inbound丢包问题","uri":"/pve-solves-the-inbound-packet-loss-problem/"},{"categories":["Linux"],"content":"\rPVE解决inbound丢包问题","date":"2023-06-01","objectID":"/pve-solves-the-inbound-packet-loss-problem/:0:0","series":null,"tags":["PVE"],"title":"PVE解决inbound丢包问题","uri":"/pve-solves-the-inbound-packet-loss-problem/#pve解决inbound丢包问题"},{"categories":["Linux"],"content":"\r最近经常收到netdata的警告邮件 ","date":"2023-06-01","objectID":"/pve-solves-the-inbound-packet-loss-problem/:1:0","series":null,"tags":["PVE"],"title":"PVE解决inbound丢包问题","uri":"/pve-solves-the-inbound-packet-loss-problem/#最近经常收到netdata的警告邮件"},{"categories":["Linux"],"content":"\rnetdata inbound packet ","date":"2023-06-01","objectID":"/pve-solves-the-inbound-packet-loss-problem/:2:0","series":null,"tags":["PVE"],"title":"PVE解决inbound丢包问题","uri":"/pve-solves-the-inbound-packet-loss-problem/#netdata-inbound-packet"},{"categories":["Linux"],"content":"\r查了github之后找到的解决方案sudo install llpdap #安装在pve的host ","date":"2023-06-01","objectID":"/pve-solves-the-inbound-packet-loss-problem/:3:0","series":null,"tags":["PVE"],"title":"PVE解决inbound丢包问题","uri":"/pve-solves-the-inbound-packet-loss-problem/#查了github之后找到的解决方案"},{"categories":["Linux"],"content":"\r安装后的netdata inbound packet ","date":"2023-06-01","objectID":"/pve-solves-the-inbound-packet-loss-problem/:4:0","series":null,"tags":["PVE"],"title":"PVE解决inbound丢包问题","uri":"/pve-solves-the-inbound-packet-loss-problem/#安装后的netdata-inbound-packet"},{"categories":["Windows"],"content":"WIN10无法睡眠的解决方法","date":"2023-05-06","objectID":"/win10-can-not-sleep-solution/","series":null,"tags":["WIN10"],"title":"WIN10无法睡眠的解决方法","uri":"/win10-can-not-sleep-solution/"},{"categories":["Windows"],"content":"\rWIN10无法睡眠的解决方法 网卡：检查是否因为网卡数据传输引起。取消允许此设备唤醒计算机，从根本上杜绝软件调用网卡引起的不睡眠。（挂机下载貌似不影响，可自行测试） 其他硬件：详情自己上翻看上述答主。主要就是win+R运行cmd命令，调用命令提示符。或者开始按钮上点击右键（或按Win + X快捷键），在弹出的系统快捷菜单中点击（Windows PowerShell(管理员） 输入powercfg /devicequery wake_armed 查看哪些硬件能唤醒电脑？ 修改注册表关闭 HKEY_LOCAL_MacHINE\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Power\\AwayModeEnabled 键值：0，关闭 1，开启 如无此键，新建一个”DWORD 32位”值, 命名为”AwayModeEnabled”, 并赋值为0. 为彻底关闭离开模式，可以在电源管理中再次关闭： 开始菜单右键-\u003eWindows Powershell (管理员), 输入: powercfg -attributes SUB_SLEEP 25DFA149-5DD1-4736-B5AB-E8A37B5B8187 -ATTRIB_HIDE 回车运行。这个步骤会将【允许离开模式策略】这个选项添加到上面电源管理的【睡眠】选项中。需要重新打开高级电源设置窗口。 在桌面开始菜单win键上右键-\u003e电源选项-\u003e其他电源设置-\u003e更改计划设置-\u003e更改高级电源设置,在弹出窗口中的 【睡眠】窗口中，查看是否有【允许离开模式策略】这个选项, 展开【允许离开模式策略】选项，将使用电池和接通电源都设置为否。 直接运行“gpedit.msc”搜索组策略编辑器并打开。 在左侧的窗格中找到“计算机配置-管理模板-系统-电源管理-睡眠设置”。 在组策略中 找到“睡眠时允许待机（S1-S3）”（分电源和电池）和“指定系统睡眠超时”（分电源和电池）四项策略。 全部设置为启用。 ","date":"2023-05-06","objectID":"/win10-can-not-sleep-solution/:0:0","series":null,"tags":["WIN10"],"title":"WIN10无法睡眠的解决方法","uri":"/win10-can-not-sleep-solution/#win10无法睡眠的解决方法"},{"categories":["IT备忘"],"content":"Debian11最小化安装新系统配置","date":"2023-04-28","objectID":"/config-debain11-from-minimal/","series":null,"tags":["Linux","debian"],"title":"Debian11最小化安装新系统配置","uri":"/config-debain11-from-minimal/"},{"categories":["IT备忘"],"content":"\rDebian最小化安装新系统配置","date":"2023-04-28","objectID":"/config-debain11-from-minimal/:0:0","series":null,"tags":["Linux","debian"],"title":"Debian11最小化安装新系统配置","uri":"/config-debain11-from-minimal/#debian最小化安装新系统配置"},{"categories":["IT备忘"],"content":"\r安装语言选择英文，时区选择上海","date":"2023-04-28","objectID":"/config-debain11-from-minimal/:1:0","series":null,"tags":["Linux","debian"],"title":"Debian11最小化安装新系统配置","uri":"/config-debain11-from-minimal/#安装语言选择英文时区选择上海"},{"categories":["IT备忘"],"content":"\r核对时区 timedatectl date # 24小时显示 sudo localectl set-locale LC_TIME=en_GB.UTF-8 ","date":"2023-04-28","objectID":"/config-debain11-from-minimal/:2:0","series":null,"tags":["Linux","debian"],"title":"Debian11最小化安装新系统配置","uri":"/config-debain11-from-minimal/#核对时区"},{"categories":["IT备忘"],"content":"\r以下操作为方便可以先切换到rootsu root ","date":"2023-04-28","objectID":"/config-debain11-from-minimal/:3:0","series":null,"tags":["Linux","debian"],"title":"Debian11最小化安装新系统配置","uri":"/config-debain11-from-minimal/#以下操作为方便可以先切换到root"},{"categories":["IT备忘"],"content":"\rPVE中xterm.js (也可以安装油猴脚本)","date":"2023-04-28","objectID":"/config-debain11-from-minimal/:4:0","series":null,"tags":["Linux","debian"],"title":"Debian11最小化安装新系统配置","uri":"/config-debain11-from-minimal/#pve中xtermjs-也可以安装油猴脚本urlhttpsgistgithubcomamunchet4cfaf0274f3d238946f9f8f94fa9ee02-desc"},{"categories":["IT备忘"],"content":"\r在硬件中添加串口0 in /etc/default/grub change the GRUB_CMDLINE_LINUX parameter to GRUB_CMDLINE_LINUX=“quiet console=tty0 console=ttyS0,115200” ","date":"2023-04-28","objectID":"/config-debain11-from-minimal/:4:1","series":null,"tags":["Linux","debian"],"title":"Debian11最小化安装新系统配置","uri":"/config-debain11-from-minimal/#在硬件中添加串口0"},{"categories":["IT备忘"],"content":"\r然后运行update-grub ","date":"2023-04-28","objectID":"/config-debain11-from-minimal/:4:2","series":null,"tags":["Linux","debian"],"title":"Debian11最小化安装新系统配置","uri":"/config-debain11-from-minimal/#然后运行"},{"categories":["IT备忘"],"content":"\rPVE reboot这台虚拟机","date":"2023-04-28","objectID":"/config-debain11-from-minimal/:4:3","series":null,"tags":["Linux","debian"],"title":"Debian11最小化安装新系统配置","uri":"/config-debain11-from-minimal/#pve-reboot这台虚拟机"},{"categories":["IT备忘"],"content":"\r替换源 cd /etc/apt mv sources.list sources.list.bak cat \u003e sources.list \u003c\u003cEOF deb https://mirrors.aliyun.com/debian/ bullseye main non-free contrib deb-src https://mirrors.aliyun.com/debian/ bullseye main non-free contrib deb https://mirrors.aliyun.com/debian/ bullseye-updates main non-free contrib deb-src https://mirrors.aliyun.com/debian/ bullseye-updates main non-free contrib deb https://mirrors.aliyun.com/debian/ bullseye-backports main non-free contrib deb-src https://mirrors.aliyun.com/debian/ bullseye-backports main non-free contrib deb https://mirrors.aliyun.com/debian-security/ bullseye-security main non-free contrib deb-src https://mirrors.aliyun.com/debian-security/ bullseye-security main non-free contrib EOF apt update apt upgrade ","date":"2023-04-28","objectID":"/config-debain11-from-minimal/:5:0","series":null,"tags":["Linux","debian"],"title":"Debian11最小化安装新系统配置","uri":"/config-debain11-from-minimal/#替换源"},{"categories":["IT备忘"],"content":"\r安装sudo，新增用户、权限 apt install sudo adduser henry nano /etc/sudoers # (henry ALL=(ALL:ALL) ALL) passwd password su henry ","date":"2023-04-28","objectID":"/config-debain11-from-minimal/:6:0","series":null,"tags":["Linux","debian"],"title":"Debian11最小化安装新系统配置","uri":"/config-debain11-from-minimal/#安装sudo新增用户权限"},{"categories":["IT备忘"],"content":"\r新机器安装（benchmark, 可选）sudo apt install sysbench ","date":"2023-04-28","objectID":"/config-debain11-from-minimal/:7:0","series":null,"tags":["Linux","debian"],"title":"Debian11最小化安装新系统配置","uri":"/config-debain11-from-minimal/#新机器安装benchmark-可选"},{"categories":["IT备忘"],"content":"\rtty支持中文（若选择语言为中文，可选） sudo apt-get install zhcon sudo adduser $(whoami) video echo \"alias zh='zhcon --utf8'\" \u003e\u003e ~/.bashrc touch .bash_profile ","date":"2023-04-28","objectID":"/config-debain11-from-minimal/:8:0","series":null,"tags":["Linux","debian"],"title":"Debian11最小化安装新系统配置","uri":"/config-debain11-from-minimal/#tty支持中文若选择语言为中文可选"},{"categories":["IT备忘"],"content":"\r安装zsh sudo apt-get install qemu-guest-agent git curl zsh automake autoconf pkg-config gcc libevent-dev ncurses-dev make byacc bsd-mailx libnss3-tools -y sh -c \"$(wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)\" ","date":"2023-04-28","objectID":"/config-debain11-from-minimal/:9:0","series":null,"tags":["Linux","debian"],"title":"Debian11最小化安装新系统配置","uri":"/config-debain11-from-minimal/#安装zsh"},{"categories":["IT备忘"],"content":"\rzsh设置见《zsh配置》source ~/.zshrc ","date":"2023-04-28","objectID":"/config-debain11-from-minimal/:9:1","series":null,"tags":["Linux","debian"],"title":"Debian11最小化安装新系统配置","uri":"/config-debain11-from-minimal/#zsh设置见zsh配置zsh配置md-zsh-config-remark"},{"categories":["IT备忘"],"content":"\r安装tmux sudo apt-get install libevent-dev ncurses-dev build-essential bison pkg-config -y git clone https://github.com/tmux/tmux.git cd tmux sh autogen.sh ./configure \u0026\u0026 make sudo make install ","date":"2023-04-28","objectID":"/config-debain11-from-minimal/:10:0","series":null,"tags":["Linux","debian"],"title":"Debian11最小化安装新系统配置","uri":"/config-debain11-from-minimal/#安装tmux"},{"categories":["IT备忘"],"content":"\rtmux设置见《tmux配置》touch ~/.tmux.conf source ~/.tmux.conf ","date":"2023-04-28","objectID":"/config-debain11-from-minimal/:10:1","series":null,"tags":["Linux","debian"],"title":"Debian11最小化安装新系统配置","uri":"/config-debain11-from-minimal/#tmux设置见tmux配置tmux配置md-tmux-config-remark"},{"categories":["IT备忘"],"content":"\rrsync sudo apt install rsync sudo cp /usr/share/doc/rsync/examples/rsyncd.conf /etc/ sudo nano /etc/rsyncd.conf # 修改以下： # [website] # path = /www/website # read only = no # uid = henry # gid = henry # 添加以下：（否则从windows同步过去权限会变为000） # incoming chmod = Du=rwx,Dog=rx,Fu=rwx,Fgo=rx sudo systemctl start rsync ","date":"2023-04-28","objectID":"/config-debain11-from-minimal/:11:0","series":null,"tags":["Linux","debian"],"title":"Debian11最小化安装新系统配置","uri":"/config-debain11-from-minimal/#rsync"},{"categories":["IT备忘"],"content":"\r配置exim smtpsudo apt install debconf sudo dpkg-reconfigure exim4-config 选择\"mail sent by smarthost; received via SMTP or fetchmail\"选项； 将\"System mail name:“设置为“localhost”； 设置\"IP-addresses to listen on for incoming SMTP connections\"为\"127.0.0.1\"来拒绝外部的连接； 不要填写\"Other destinations for which mail is accepted:“选项，值留空； 也不要\"Machines to relay mail for:“选项，值留空； 设置\"IP address or host name of the outgoing smarthost:“的值为\"smtp.163.com:25”； 设置\"Hide local mail name in outgoing mail?“的值为“NO\"选项； 设置\"Keep number of DNS-queries minimal (Dial-on-Demand)?“的值为”NO“选项； 设置\"Delivery method for local mail\"的值为\"mbox format in /var/mail/“选项； 设置\"Split configuration into small files?“的值为\"YES\"选项； 设置”Root and postmaster mail recipient:“的值为空，不需要填写； ","date":"2023-04-28","objectID":"/config-debain11-from-minimal/:12:0","series":null,"tags":["Linux","debian"],"title":"Debian11最小化安装新系统配置","uri":"/config-debain11-from-minimal/#配置exim-smtp"},{"categories":["IT备忘"],"content":"\r修改/etc/exim4/passwd.client smtp.163.com:email.163.com:password # 它的结构为\u003c163的SMTP服务器地址\u003e:\u003c发件人邮箱地址\u003e:\u003c邮箱授权码\u003e ","date":"2023-04-28","objectID":"/config-debain11-from-minimal/:12:1","series":null,"tags":["Linux","debian"],"title":"Debian11最小化安装新系统配置","uri":"/config-debain11-from-minimal/#修改etcexim4passwdclient"},{"categories":["IT备忘"],"content":"\r配置/etc/email-addresses root: email.163.com # 否则系统会告诉你发件人帐号与发件人不符合 henry: email.163.com netdata: email.163.com # 否则netdata报警邮件无法发送(因为系统会告诉你发件人帐号与发件人不符合) systemctl restart exim4.service ","date":"2023-04-28","objectID":"/config-debain11-from-minimal/:12:2","series":null,"tags":["Linux","debian"],"title":"Debian11最小化安装新系统配置","uri":"/config-debain11-from-minimal/#配置etcemail-addresses"},{"categories":["IT备忘"],"content":"\r测试echo \"Email test body\" | mail -s \"Email test subject\" email.163.com ","date":"2023-04-28","objectID":"/config-debain11-from-minimal/:12:3","series":null,"tags":["Linux","debian"],"title":"Debian11最小化安装新系统配置","uri":"/config-debain11-from-minimal/#测试"},{"categories":["IT备忘"],"content":"\r如果需要发送给用户，如root\r配置/etc/aliasroot: email.163.com 运行newaliases echo \"Email test body\" | mail -s \"Email test subject\" root ","date":"2023-04-28","objectID":"/config-debain11-from-minimal/:12:4","series":null,"tags":["Linux","debian"],"title":"Debian11最小化安装新系统配置","uri":"/config-debain11-from-minimal/#如果需要发送给用户如root"},{"categories":["IT备忘"],"content":"\r如果需要发送给用户，如root\r配置/etc/aliasroot: email.163.com 运行newaliases echo \"Email test body\" | mail -s \"Email test subject\" root ","date":"2023-04-28","objectID":"/config-debain11-from-minimal/:12:4","series":null,"tags":["Linux","debian"],"title":"Debian11最小化安装新系统配置","uri":"/config-debain11-from-minimal/#配置etcalias"},{"categories":["IT备忘"],"content":"\r如果需要发送给用户，如root\r配置/etc/aliasroot: email.163.com 运行newaliases echo \"Email test body\" | mail -s \"Email test subject\" root ","date":"2023-04-28","objectID":"/config-debain11-from-minimal/:12:4","series":null,"tags":["Linux","debian"],"title":"Debian11最小化安装新系统配置","uri":"/config-debain11-from-minimal/#运行"},{"categories":["IT备忘"],"content":"\r配置mailx smtp 465 （未成功） su root mkdir -p /etc/pki/nssdb echo -n | openssl s_client -connect smtp.163.com:465 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' \u003e /etc/pki/nssdb/163.crt certutil -A -n \"GeoTrust SSL CA\" -t \"C,,\" -d /etc/pki/nssdb/ -i /etc/pki/nssdb/163.crt certutil -A -n \"GeoTrust Global CA\" -t \"C,,\" -d /etc/pki/nssdb/ -i /etc/pki/nssdb/163.crt certutil -A -n \"GeoTrust SSL CA - G3\" -t \"Pu,Pu,Pu\" -d /etc/pki/nssdb/ -i /etc/pki/nssdb/163.crt certutil -L -d /etc/pki/nssdb/ cat \u003e\u003e /etc/mail.rc \u003c\u003cEOF set from=email.163.com set smtp=smtps://smtp.163.com:465 set smtp-auth-user=email.163.com set smtp-auth-password=password set smtp-auth=login set ssl-verify=ignore set nss-config-dir=/etc/pki/nssdb EOF nano /etc/exim4/update-exim4.conf.conf # dc_eximconfig_configtype='internet' /etc/init.d/exim4 restart echo \" 邮件正文内容 \" | mail -v -s \" 邮件主题 \" email.163.com ","date":"2023-04-28","objectID":"/config-debain11-from-minimal/:13:0","series":null,"tags":["Linux","debian"],"title":"Debian11最小化安装新系统配置","uri":"/config-debain11-from-minimal/#配置mailx-smtp-465-未成功"},{"categories":["IT备忘"],"content":"\rcrontab 注意尽量不要用dc / dk 这些alias，防止无法运行 ","date":"2023-04-28","objectID":"/config-debain11-from-minimal/:14:0","series":null,"tags":["Linux","debian"],"title":"Debian11最小化安装新系统配置","uri":"/config-debain11-from-minimal/#crontab-注意"},{"categories":["IT备忘"],"content":"RT-AC3100更新梅林系统","date":"2022-10-15","objectID":"/upgrade-firmware-for-asus-rt-ac3100/","series":null,"tags":["Linux"],"title":"RT-AC3100更新梅林系统","uri":"/upgrade-firmware-for-asus-rt-ac3100/"},{"categories":["IT备忘"],"content":"\rRT-AC3100更新梅林系统 不要更新官方的梅林系统，否则会失去koolshare软件中心 KoolShare固件地址：https://koolcenter.com/article/firmware/6_download/merlin_mod/90_rt-ac3100_merlin_mod/ 刷完固件后如果软件中心无法正常显示 系统管理-\u003e恢复/导出/上传设置，导出设置和JFFS分区 系统管理-\u003e系统设置，Format JFFS partition at next boot Format JFFS后，导入JFFS分区 如果导入JFFS分区无效，则手动安装： 进入OneDrive\\configs\\RT-AC3100 离线安装shellinabox 打开导出的JFFS分区文件，.koolshare 目录为配置目录 安装FancySS 在路由器中运行install_ss_in_koolshare.sh 离线安装shadowsocks_1.0.5.tar 离线安装zerotier（节点需要重新配置，MOON添加$moonid） 离线安装softwarecenter 关闭2.4G在无线网络-\u003e专业设置-\u003e启用无线网络 ","date":"2022-10-15","objectID":"/upgrade-firmware-for-asus-rt-ac3100/:0:0","series":null,"tags":["Linux"],"title":"RT-AC3100更新梅林系统","uri":"/upgrade-firmware-for-asus-rt-ac3100/#rt-ac3100更新梅林系统"},{"categories":["生活随笔"],"content":"海外购物退税和免税","date":"2022-05-16","objectID":"/overseas-shopping-tax-refund-and-tax-exemption/","series":null,"tags":["退税"],"title":"海外购物退税和免税","uri":"/overseas-shopping-tax-refund-and-tax-exemption/"},{"categories":["生活随笔"],"content":"\r退税非免税 海外购物如何绕税而行","date":"2022-05-16","objectID":"/overseas-shopping-tax-refund-and-tax-exemption/:0:0","series":null,"tags":["退税"],"title":"海外购物退税和免税","uri":"/overseas-shopping-tax-refund-and-tax-exemption/#退税非免税-海外购物如何绕税而行"},{"categories":["生活随笔"],"content":"\r“退税”“免税”有何不同？","date":"2022-05-16","objectID":"/overseas-shopping-tax-refund-and-tax-exemption/:1:0","series":null,"tags":["退税"],"title":"海外购物退税和免税","uri":"/overseas-shopping-tax-refund-and-tax-exemption/#退税免税有何不同"},{"categories":["生活随笔"],"content":"\r并非所有购物都可退税\r信用卡退税最方便境外购物的乐趣不可阻挡，早已心仪的名牌包、国内买不到的限量版彩妆、足够炫耀的异域饰品，都可乘出国之机一网打尽。在你拿着长长的购物单，准备伺机出手之前，一定不要忘了行使你国际游客的权利——绕税而行。　“退税”“免税”有何不同？　“免税”是买商品时免去税费，“退税”则是买完商品之后再退税。但是此税非彼税。专家告诉我们，退税指的是退税购物(tax free shopping)，退的是增值税和消费税，税率集中在5%-20%；而免税免的是进口关税(duty, tariff)，税率集中在20%-100%。　你需要了解的是，看到Duty Free的字样，说明这是个免税店；而看到Tax Free Shopping标志时，说明这家商店是可以购物退税的。　机上买免税品更划算　有些免税店名不是Duty Free而是Tax Free，却与退税标志Tax Free Shopping明显不同。　一般情况下，免税店只适用于出境者。所以你必须在安检之后购买免税品。你买的免税品都会用透明且可盖章的密封塑料袋包装，千万注意别在到达目的地之前开封，否则这些免税品就不属于你了。　免税品也有数量限制，超过免税限额也须交税，各国规定不同。　如果你需要中转，建议免税品还是谨慎购买为好。　其实，飞机上也可以买到免税品，机上买免税品更划算。但品牌及货品可能不如免税店多，如能事前拿到机上免税品目录，可先比较再作决定。 不是所有购物都可以退税。许多国家有“可享受退税的最低金额”的规定，就是说你在同一天、同一个商店购物的金额必须超过这个限度才有资格退税。所以你最好集中到一家店，和同伴一起买东西比较合适。　境外购物一般有三种退税方法： 第一退现金(在境外或回国)， 第二退支票(邮寄回国)， 第三退到信用卡中。在新加坡等国家，你可以享受银联卡退税。　如果你选择现金退税，要记得退税支票是有期限的，要保证在有效期内办理手续。　机场商店并非全是免税店　一般情况下，免税商品不能再享受退税。但也有例外，比如在新加坡的DFS免税店，买够一定金额是可以退税的。　去欧洲旅游前，可能有人会告诉你：“欧洲的免税店可以退税。”这种说法其实并不准确。这里说的免税店，其实是有退税标志的商店，可以办理购物退税。　不是所有机场的商店都是免税店。机场内的免税店几乎都出现在“国际出发”和“国际到达”旅客的必经之路上。多数机场在安检前也有诸多店铺聚集，但都不是免税店。　记住，安检之后的商店才是免税店，认准“Duty Free”标志。 ","date":"2022-05-16","objectID":"/overseas-shopping-tax-refund-and-tax-exemption/:1:1","series":null,"tags":["退税"],"title":"海外购物退税和免税","uri":"/overseas-shopping-tax-refund-and-tax-exemption/#并非所有购物都可退税"},{"categories":["生活随笔"],"content":"\r并非所有购物都可退税\r信用卡退税最方便境外购物的乐趣不可阻挡，早已心仪的名牌包、国内买不到的限量版彩妆、足够炫耀的异域饰品，都可乘出国之机一网打尽。在你拿着长长的购物单，准备伺机出手之前，一定不要忘了行使你国际游客的权利——绕税而行。　“退税”“免税”有何不同？　“免税”是买商品时免去税费，“退税”则是买完商品之后再退税。但是此税非彼税。专家告诉我们，退税指的是退税购物(tax free shopping)，退的是增值税和消费税，税率集中在5%-20%；而免税免的是进口关税(duty, tariff)，税率集中在20%-100%。　你需要了解的是，看到Duty Free的字样，说明这是个免税店；而看到Tax Free Shopping标志时，说明这家商店是可以购物退税的。　机上买免税品更划算　有些免税店名不是Duty Free而是Tax Free，却与退税标志Tax Free Shopping明显不同。　一般情况下，免税店只适用于出境者。所以你必须在安检之后购买免税品。你买的免税品都会用透明且可盖章的密封塑料袋包装，千万注意别在到达目的地之前开封，否则这些免税品就不属于你了。　免税品也有数量限制，超过免税限额也须交税，各国规定不同。　如果你需要中转，建议免税品还是谨慎购买为好。　其实，飞机上也可以买到免税品，机上买免税品更划算。但品牌及货品可能不如免税店多，如能事前拿到机上免税品目录，可先比较再作决定。 不是所有购物都可以退税。许多国家有“可享受退税的最低金额”的规定，就是说你在同一天、同一个商店购物的金额必须超过这个限度才有资格退税。所以你最好集中到一家店，和同伴一起买东西比较合适。　境外购物一般有三种退税方法： 第一退现金(在境外或回国)， 第二退支票(邮寄回国)， 第三退到信用卡中。在新加坡等国家，你可以享受银联卡退税。　如果你选择现金退税，要记得退税支票是有期限的，要保证在有效期内办理手续。　机场商店并非全是免税店　一般情况下，免税商品不能再享受退税。但也有例外，比如在新加坡的DFS免税店，买够一定金额是可以退税的。　去欧洲旅游前，可能有人会告诉你：“欧洲的免税店可以退税。”这种说法其实并不准确。这里说的免税店，其实是有退税标志的商店，可以办理购物退税。　不是所有机场的商店都是免税店。机场内的免税店几乎都出现在“国际出发”和“国际到达”旅客的必经之路上。多数机场在安检前也有诸多店铺聚集，但都不是免税店。　记住，安检之后的商店才是免税店，认准“Duty Free”标志。 ","date":"2022-05-16","objectID":"/overseas-shopping-tax-refund-and-tax-exemption/:1:1","series":null,"tags":["退税"],"title":"海外购物退税和免税","uri":"/overseas-shopping-tax-refund-and-tax-exemption/#信用卡退税最方便"},{"categories":["生活随笔"],"content":"\r并非所有购物都可退税\r信用卡退税最方便境外购物的乐趣不可阻挡，早已心仪的名牌包、国内买不到的限量版彩妆、足够炫耀的异域饰品，都可乘出国之机一网打尽。在你拿着长长的购物单，准备伺机出手之前，一定不要忘了行使你国际游客的权利——绕税而行。　“退税”“免税”有何不同？　“免税”是买商品时免去税费，“退税”则是买完商品之后再退税。但是此税非彼税。专家告诉我们，退税指的是退税购物(tax free shopping)，退的是增值税和消费税，税率集中在5%-20%；而免税免的是进口关税(duty, tariff)，税率集中在20%-100%。　你需要了解的是，看到Duty Free的字样，说明这是个免税店；而看到Tax Free Shopping标志时，说明这家商店是可以购物退税的。　机上买免税品更划算　有些免税店名不是Duty Free而是Tax Free，却与退税标志Tax Free Shopping明显不同。　一般情况下，免税店只适用于出境者。所以你必须在安检之后购买免税品。你买的免税品都会用透明且可盖章的密封塑料袋包装，千万注意别在到达目的地之前开封，否则这些免税品就不属于你了。　免税品也有数量限制，超过免税限额也须交税，各国规定不同。　如果你需要中转，建议免税品还是谨慎购买为好。　其实，飞机上也可以买到免税品，机上买免税品更划算。但品牌及货品可能不如免税店多，如能事前拿到机上免税品目录，可先比较再作决定。 不是所有购物都可以退税。许多国家有“可享受退税的最低金额”的规定，就是说你在同一天、同一个商店购物的金额必须超过这个限度才有资格退税。所以你最好集中到一家店，和同伴一起买东西比较合适。　境外购物一般有三种退税方法： 第一退现金(在境外或回国)， 第二退支票(邮寄回国)， 第三退到信用卡中。在新加坡等国家，你可以享受银联卡退税。　如果你选择现金退税，要记得退税支票是有期限的，要保证在有效期内办理手续。　机场商店并非全是免税店　一般情况下，免税商品不能再享受退税。但也有例外，比如在新加坡的DFS免税店，买够一定金额是可以退税的。　去欧洲旅游前，可能有人会告诉你：“欧洲的免税店可以退税。”这种说法其实并不准确。这里说的免税店，其实是有退税标志的商店，可以办理购物退税。　不是所有机场的商店都是免税店。机场内的免税店几乎都出现在“国际出发”和“国际到达”旅客的必经之路上。多数机场在安检前也有诸多店铺聚集，但都不是免税店。　记住，安检之后的商店才是免税店，认准“Duty Free”标志。 ","date":"2022-05-16","objectID":"/overseas-shopping-tax-refund-and-tax-exemption/:1:1","series":null,"tags":["退税"],"title":"海外购物退税和免税","uri":"/overseas-shopping-tax-refund-and-tax-exemption/#退税免税有何不同-1"},{"categories":["生活随笔"],"content":"\r并非所有购物都可退税\r信用卡退税最方便境外购物的乐趣不可阻挡，早已心仪的名牌包、国内买不到的限量版彩妆、足够炫耀的异域饰品，都可乘出国之机一网打尽。在你拿着长长的购物单，准备伺机出手之前，一定不要忘了行使你国际游客的权利——绕税而行。　“退税”“免税”有何不同？　“免税”是买商品时免去税费，“退税”则是买完商品之后再退税。但是此税非彼税。专家告诉我们，退税指的是退税购物(tax free shopping)，退的是增值税和消费税，税率集中在5%-20%；而免税免的是进口关税(duty, tariff)，税率集中在20%-100%。　你需要了解的是，看到Duty Free的字样，说明这是个免税店；而看到Tax Free Shopping标志时，说明这家商店是可以购物退税的。　机上买免税品更划算　有些免税店名不是Duty Free而是Tax Free，却与退税标志Tax Free Shopping明显不同。　一般情况下，免税店只适用于出境者。所以你必须在安检之后购买免税品。你买的免税品都会用透明且可盖章的密封塑料袋包装，千万注意别在到达目的地之前开封，否则这些免税品就不属于你了。　免税品也有数量限制，超过免税限额也须交税，各国规定不同。　如果你需要中转，建议免税品还是谨慎购买为好。　其实，飞机上也可以买到免税品，机上买免税品更划算。但品牌及货品可能不如免税店多，如能事前拿到机上免税品目录，可先比较再作决定。 不是所有购物都可以退税。许多国家有“可享受退税的最低金额”的规定，就是说你在同一天、同一个商店购物的金额必须超过这个限度才有资格退税。所以你最好集中到一家店，和同伴一起买东西比较合适。　境外购物一般有三种退税方法： 第一退现金(在境外或回国)， 第二退支票(邮寄回国)， 第三退到信用卡中。在新加坡等国家，你可以享受银联卡退税。　如果你选择现金退税，要记得退税支票是有期限的，要保证在有效期内办理手续。　机场商店并非全是免税店　一般情况下，免税商品不能再享受退税。但也有例外，比如在新加坡的DFS免税店，买够一定金额是可以退税的。　去欧洲旅游前，可能有人会告诉你：“欧洲的免税店可以退税。”这种说法其实并不准确。这里说的免税店，其实是有退税标志的商店，可以办理购物退税。　不是所有机场的商店都是免税店。机场内的免税店几乎都出现在“国际出发”和“国际到达”旅客的必经之路上。多数机场在安检前也有诸多店铺聚集，但都不是免税店。　记住，安检之后的商店才是免税店，认准“Duty Free”标志。 ","date":"2022-05-16","objectID":"/overseas-shopping-tax-refund-and-tax-exemption/:1:1","series":null,"tags":["退税"],"title":"海外购物退税和免税","uri":"/overseas-shopping-tax-refund-and-tax-exemption/#机上买免税品更划算"},{"categories":["生活随笔"],"content":"\r并非所有购物都可退税\r信用卡退税最方便境外购物的乐趣不可阻挡，早已心仪的名牌包、国内买不到的限量版彩妆、足够炫耀的异域饰品，都可乘出国之机一网打尽。在你拿着长长的购物单，准备伺机出手之前，一定不要忘了行使你国际游客的权利——绕税而行。　“退税”“免税”有何不同？　“免税”是买商品时免去税费，“退税”则是买完商品之后再退税。但是此税非彼税。专家告诉我们，退税指的是退税购物(tax free shopping)，退的是增值税和消费税，税率集中在5%-20%；而免税免的是进口关税(duty, tariff)，税率集中在20%-100%。　你需要了解的是，看到Duty Free的字样，说明这是个免税店；而看到Tax Free Shopping标志时，说明这家商店是可以购物退税的。　机上买免税品更划算　有些免税店名不是Duty Free而是Tax Free，却与退税标志Tax Free Shopping明显不同。　一般情况下，免税店只适用于出境者。所以你必须在安检之后购买免税品。你买的免税品都会用透明且可盖章的密封塑料袋包装，千万注意别在到达目的地之前开封，否则这些免税品就不属于你了。　免税品也有数量限制，超过免税限额也须交税，各国规定不同。　如果你需要中转，建议免税品还是谨慎购买为好。　其实，飞机上也可以买到免税品，机上买免税品更划算。但品牌及货品可能不如免税店多，如能事前拿到机上免税品目录，可先比较再作决定。 不是所有购物都可以退税。许多国家有“可享受退税的最低金额”的规定，就是说你在同一天、同一个商店购物的金额必须超过这个限度才有资格退税。所以你最好集中到一家店，和同伴一起买东西比较合适。　境外购物一般有三种退税方法： 第一退现金(在境外或回国)， 第二退支票(邮寄回国)， 第三退到信用卡中。在新加坡等国家，你可以享受银联卡退税。　如果你选择现金退税，要记得退税支票是有期限的，要保证在有效期内办理手续。　机场商店并非全是免税店　一般情况下，免税商品不能再享受退税。但也有例外，比如在新加坡的DFS免税店，买够一定金额是可以退税的。　去欧洲旅游前，可能有人会告诉你：“欧洲的免税店可以退税。”这种说法其实并不准确。这里说的免税店，其实是有退税标志的商店，可以办理购物退税。　不是所有机场的商店都是免税店。机场内的免税店几乎都出现在“国际出发”和“国际到达”旅客的必经之路上。多数机场在安检前也有诸多店铺聚集，但都不是免税店。　记住，安检之后的商店才是免税店，认准“Duty Free”标志。 ","date":"2022-05-16","objectID":"/overseas-shopping-tax-refund-and-tax-exemption/:1:1","series":null,"tags":["退税"],"title":"海外购物退税和免税","uri":"/overseas-shopping-tax-refund-and-tax-exemption/#机场商店并非全是免税店"},{"categories":["生活随笔"],"content":"\r办理退税工作人员一般会让游客在现金、支票、信用卡中选择退税方法。选择哪种比较方便？　现金：退税的金额一般都比较零星，有时计算不方便零头就省掉了(当然损失不大，但毕竟也有损失)，有时找了满手的零钱，携带非常不便。　支票：最麻烦的是退支票，要回国后才能拿到，耗时还费事，一定得本人办理托收，原本税金就不高，加上手续费等，拿到手的恐怕所剩不多。　信用卡：这是最简单的方法，不仅立即生效，更省去了携带零钱的麻烦，只需填写卡号，就可完成退税。 ","date":"2022-05-16","objectID":"/overseas-shopping-tax-refund-and-tax-exemption/:1:2","series":null,"tags":["退税"],"title":"海外购物退税和免税","uri":"/overseas-shopping-tax-refund-and-tax-exemption/#办理退税"},{"categories":["IT备忘"],"content":"nginx全局变量对照表","date":"2022-05-16","objectID":"/nginx-global-variable-control-table/","series":null,"tags":["nginx"],"title":"nginx全局变量对照表","uri":"/nginx-global-variable-control-table/"},{"categories":["IT备忘"],"content":"\rnginx全局变量对照表 变量 含义 remote_addr 客户端ip,如：192.168.4.2 binary_remote_addr 客户端ip（二进制) remote_port 客户端port，如：50472 remote_user 已经经过Auth Basic Module验证的用户名 host 请求主机头字段，否则为服务器名称，如:dwz.stamhe.com request 用户请求信息，如：GET /?_a=index\u0026_m=show\u0026count=10 HTTP/1.1 request_filename 当前请求的文件的路径名，由root或alias和URI request组合而成，如：/webserver/htdocs/dwz/index.php status 请求的响应状态码,如:200 body_bytes_sent 响应时送出的body字节数数量。即使连接中断，这个数据也是精确的,如：40 content_length 请求头中的Content-length字段 content_type 请求头中的Content-Type字段 http_referer 引用地址 http_user_agent 客户端agent信息,如：Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.57 Safari/536.11 args 如：_a=index\u0026_m=show\u0026count=10 document_uri 与$uri相同,如：/index.php document_root 针对当前请求的根路径设置值,如：/webserver/htdocs/dwz hostname 如：centos53.localdomain http_cookie 客户端cookie信息 cookie_COOKIE cookie COOKIE变量的值 is_args 如果有$args参数，这个变量等于”?”，否则等于”\"，空值，如? limit_rate 这个变量可以限制连接速率，0表示不限速 query_string 与$args相同,如：_a=index\u0026_m=show\u0026count=10 realpath_root 如：/webserver/htdocs/dwz request_body 记录POST过来的数据信息 request_body_file 客户端请求主体信息的临时文件名 request_method 客户端请求的动作，通常为GET或POST,如：GET request_uri 包含请求参数的原始URI，不包含主机名，如：”/foo/bar.php?arg=baz”。不能修改。如：/index.php?_a=index\u0026_m=show\u0026count=10 scheme HTTP方法（如http，https）,如：http uri 如：/index.php request_completion 如果请求结束，设置为OK. 当请求未结束或如果该请求不是请求链串的最后一个时，为空(Empty)，如：OK server_protocol 请求使用的协议，通常是HTTP/1.0或HTTP/1.1，如：HTTP/1.1 server_addr 服务器地址，在完成一次系统调用后可以确定这个值，如：192.168.4.129 server_name 服务器名称，如：dwz.stamhe.com server_port 请求到达服务器的端口号,如：80 ","date":"2022-05-16","objectID":"/nginx-global-variable-control-table/:0:0","series":null,"tags":["nginx"],"title":"nginx全局变量对照表","uri":"/nginx-global-variable-control-table/#nginx全局变量对照表"},{"categories":["IT备忘"],"content":"硬盘分区类型标志","date":"2022-05-13","objectID":"/hard-disk-partition-type-logo/","series":null,"tags":["分区"],"title":"硬盘分区类型标志","uri":"/hard-disk-partition-type-logo/"},{"categories":["IT备忘"],"content":"\r硬盘分区类型标志 ","date":"2022-05-13","objectID":"/hard-disk-partition-type-logo/:0:0","series":null,"tags":["分区"],"title":"硬盘分区类型标志","uri":"/hard-disk-partition-type-logo/#硬盘分区类型标志"},{"categories":["软件开发"],"content":"Omnis经验备忘","date":"2022-05-13","objectID":"/omnis-experience-memo/","series":null,"tags":["Omnis"],"title":"Omnis经验备忘","uri":"/omnis-experience-memo/"},{"categories":["软件开发"],"content":"\rOmnis经验备忘","date":"2022-05-13","objectID":"/omnis-experience-memo/:0:0","series":null,"tags":["Omnis"],"title":"Omnis经验备忘","uri":"/omnis-experience-memo/#omnis经验备忘"},{"categories":["软件开发"],"content":"\r语言基础","date":"2022-05-13","objectID":"/omnis-experience-memo/:1:0","series":null,"tags":["Omnis"],"title":"Omnis经验备忘","uri":"/omnis-experience-memo/#语言基础"},{"categories":["软件开发"],"content":"\r#F只能存0,1,kTrue,kFalse这四种值，可以与数值直接相加","date":"2022-05-13","objectID":"/omnis-experience-memo/:1:1","series":null,"tags":["Omnis"],"title":"Omnis经验备忘","uri":"/omnis-experience-memo/#f只能存01ktruekfalse这四种值可以与数值直接相加"},{"categories":["软件开发"],"content":"\r几种CRUD返回值：. 原生的$update, $insert, $delete返回0,1（可存入integar或boolean） . SNF.t_Oracle.$update返回kTrue, kFalse . list.$fetch(n)返回kFetchXXX（只能存入integar类型中，如#1） . statement.$fetch(list)返回0,1 . list.$dowork(), list.$doupdates(), list.$dodeletes(), list.$doinserts(), list.$select()返回kTrue, kFalse ","date":"2022-05-13","objectID":"/omnis-experience-memo/:1:2","series":null,"tags":["Omnis"],"title":"Omnis经验备忘","uri":"/omnis-experience-memo/#几种crud返回值"},{"categories":["软件开发"],"content":"\r各数据类型之间的等值比较. kFetchFinished (0x1) ---\u003e \"kFetchFinished\" === kFetchFinished . kTrue ---\u003e \"true\" === kTrue . 1 ---\u003e \"1\" !== kTrue ","date":"2022-05-13","objectID":"/omnis-experience-memo/:1:3","series":null,"tags":["Omnis"],"title":"Omnis经验备忘","uri":"/omnis-experience-memo/#各数据类型之间的等值比较"},{"categories":["软件开发"],"content":"\rCtrl+Break可中止循环运行","date":"2022-05-13","objectID":"/omnis-experience-memo/:1:4","series":null,"tags":["Omnis"],"title":"Omnis经验备忘","uri":"/omnis-experience-memo/#ctrlbreak可中止循环运行"},{"categories":["软件开发"],"content":"\r需要在Text:中使用\"[\"、\"]“字符使用 [[var] 即可 ","date":"2022-05-13","objectID":"/omnis-experience-memo/:1:5","series":null,"tags":["Omnis"],"title":"Omnis经验备忘","uri":"/omnis-experience-memo/#需要在text中使用字符"},{"categories":["软件开发"],"content":"\rcurrent task和active task active task —\u003e own topmost Window / menu / toolbar current task —\u003e own current exceuting method $active() , $deactive(), $root.$activetask \u003c==\u003e 会引起active task更改 $suspend, $resume \u003c==\u003e 会引起current task更改 当调用code, method时，current task不会更改，所以在$sqlerror中可以用$cinst.$val来引用sql中绑定变量@[var]的var值。 ","date":"2022-05-13","objectID":"/omnis-experience-memo/:1:6","series":null,"tags":["Omnis"],"title":"Omnis经验备忘","uri":"/omnis-experience-memo/#current-task和active-task"},{"categories":["软件开发"],"content":"\r运行时entry的内容除了用绑定的变量获取外，还可以用$contents属性。注意不是$text。 ","date":"2022-05-13","objectID":"/omnis-experience-memo/:1:7","series":null,"tags":["Omnis"],"title":"Omnis经验备忘","uri":"/omnis-experience-memo/#运行时entry的内容"},{"categories":["软件开发"],"content":"\r$cinst与$cwind的区别 $cinst — The instance which contains the current exec method $cwind — The current open window instance 由于始终只会有一个$cinst，因此当运行的窗口有父类时，$cinst为当前的子类窗口，此时在父类窗口中使用$cinst便会出错。 ","date":"2022-05-13","objectID":"/omnis-experience-memo/:1:8","series":null,"tags":["Omnis"],"title":"Omnis经验备忘","uri":"/omnis-experience-memo/#cinst与cwind的区别"},{"categories":["软件开发"],"content":"\r$merge和$assignrow$merge结合selected可以一次性赋值多行给一个列表，但只能是完整的行；$assignrow可以给一个列表的部分列一次性赋值。 ","date":"2022-05-13","objectID":"/omnis-experience-memo/:1:9","series":null,"tags":["Omnis"],"title":"Omnis经验备忘","uri":"/omnis-experience-memo/#merge和assignrow"},{"categories":["软件开发"],"content":"\r列表相关","date":"2022-05-13","objectID":"/omnis-experience-memo/:2:0","series":null,"tags":["Omnis"],"title":"Omnis经验备忘","uri":"/omnis-experience-memo/#列表相关"},{"categories":["软件开发"],"content":"\rList.$filter()List.$filter()是保留match filter的行，而且List要是smart list。 ","date":"2022-05-13","objectID":"/omnis-experience-memo/:2:1","series":null,"tags":["Omnis"],"title":"Omnis经验备忘","uri":"/omnis-experience-memo/#listfilter"},{"categories":["软件开发"],"content":"\rList.$unfilter()List.$unfilter()不带参数是清除最后一次filter，unfilter(1)是清除所有除了第一个filter，unfilter(0)是清除所有。 ","date":"2022-05-13","objectID":"/omnis-experience-memo/:2:2","series":null,"tags":["Omnis"],"title":"Omnis经验备忘","uri":"/omnis-experience-memo/#listunfilter"},{"categories":["软件开发"],"content":"\r统计选中的行数lList.COL1.$count(kTrue)是不符合语法的，要用lList.$cols.COL1.$count(kTrue) ","date":"2022-05-13","objectID":"/omnis-experience-memo/:2:3","series":null,"tags":["Omnis"],"title":"Omnis经验备忘","uri":"/omnis-experience-memo/#统计选中的行数"},{"categories":["软件开发"],"content":"\rlList.$search($ref.COL1=lList.COL1)这是不符合语法的，只能先将本行的lList.COL1暂存起来： ```Calculate lCOL1 AS lList.COL1 lList.$search($ref.COL1=lCOL1) ``` ","date":"2022-05-13","objectID":"/omnis-experience-memo/:2:4","series":null,"tags":["Omnis"],"title":"Omnis经验备忘","uri":"/omnis-experience-memo/#llistsearchrefcol1llistcol1"},{"categories":["软件开发"],"content":"\rList和Row的$fetch()比较. row.$fetch()不出错时，若查询结果不为空，则只能返回kFetchOK（不管fetch有没有后续结果，也不管fetch(n)中的n为多少）；若查询结果为空，才会返回kFetchFinished. .list.$fetch()不出错时，fetch(1)只能返回kFetchOK（不管fetch有没有后续结果）；fetch(n) （当n\u003e1时）才可能能返回kFetchFinished。为什么要在$selectToList中返回status是因为如果需要分页，那么kFetchOK状态必不可少。 **综合来讲，对row，kFetchFinished意味着找不到记录；kFetchOK意味着可以找到，但可能是多条之一。因此用$rowfetched来判断是否找到更准确，语义也更清晰，另外用$rowsfetched而不用$linecount是因为前者才能体现从数据库中fetched的行数，后者只是总行数。** ","date":"2022-05-13","objectID":"/omnis-experience-memo/:2:5","series":null,"tags":["Omnis"],"title":"Omnis经验备忘","uri":"/omnis-experience-memo/#list和row的fetch比较"},{"categories":["软件开发"],"content":"\rGrid（data或string）只有当$dataname为手动declare的list（通过$define）而非查询得到的list（通过$definefromclass）时，$extendable才会有效。","date":"2022-05-13","objectID":"/omnis-experience-memo/:2:6","series":null,"tags":["Omnis"],"title":"Omnis经验备忘","uri":"/omnis-experience-memo/#griddata或string只有当dataname为手动declare的list通过define而非查询得到的list通过definefromclass时extendable才会有效"},{"categories":["软件开发"],"content":"\rPopup List的多选特性. 当不开启multiplselect时，由current line来决定在哪一行上显示选中标志，已选中的将无法再次响应evClick。 . 当开启multiplselect时，由selected line来决定在哪一行上显示选中标志，已选中的仍然可以再次响应evClick，current line为当前点击的那一行。 ","date":"2022-05-13","objectID":"/omnis-experience-memo/:2:7","series":null,"tags":["Omnis"],"title":"Omnis经验备忘","uri":"/omnis-experience-memo/#popup-list的多选特性"},{"categories":["软件开发"],"content":"\r遍历效率两个列表keepList和oldList，keepList有50000行，oldList有200000行 遍历oldList每行去$search keepList 耗时 72m 遍历keepList每行去$search oldList 耗时 63m 结论$search比遍历略快 ","date":"2022-05-13","objectID":"/omnis-experience-memo/:2:8","series":null,"tags":["Omnis"],"title":"Omnis经验备忘","uri":"/omnis-experience-memo/#遍历效率"},{"categories":["软件开发"],"content":"\r$filter()和$search()的效率当Omnis中的list的数量达到几千条时，$filter的效率会很低，如果是在循环中不断$filter、$unfilter可能效率比连到数据库查询还要慢。但$search的效率很高，因此如果仅仅是判断是否存在，尽量应该用$search，如果还需要一些只有$filter才能完成的功能，比如看满足条件的记录数量，如$linecount，可以先用$search来select记录，然后将标记为selected的记录merge到另一个新的list中，在那个list中再做filter，效率会提高很多。 *（2019年11月25日补充）见27条，可以先$search，然后用$count。* ","date":"2022-05-13","objectID":"/omnis-experience-memo/:2:9","series":null,"tags":["Omnis"],"title":"Omnis经验备忘","uri":"/omnis-experience-memo/#filter和search的效率"},{"categories":["软件开发"],"content":"\rSQL相关","date":"2022-05-13","objectID":"/omnis-experience-memo/:3:0","series":null,"tags":["Omnis"],"title":"Omnis经验备忘","uri":"/omnis-experience-memo/#sql相关"},{"categories":["软件开发"],"content":"\rsql变量绑定在Sta:sql中使用变量绑定时（@[var]）要注意，字符型var的subtype不能使用默认的100000000（1E8），否则Omnis会自动使用CBLOB类型来绑定，而CBLOB在WHERE条件中是不支持的，从而导致prepare()正常，execute()出错。 ","date":"2022-05-13","objectID":"/omnis-experience-memo/:3:1","series":null,"tags":["Omnis"],"title":"Omnis经验备忘","uri":"/omnis-experience-memo/#sql变量绑定"},{"categories":["软件开发"],"content":"\rsql变量绑定LIKEOmnis中Sta:sql中的变量绑定不支持LIKE @[con(var,’%’)]，因此需要使用Oracle的字符连接操作：LIKE @[var] || ‘%’ 。 ","date":"2022-05-13","objectID":"/omnis-experience-memo/:3:2","series":null,"tags":["Omnis"],"title":"Omnis经验备忘","uri":"/omnis-experience-memo/#sql变量绑定like"},{"categories":["软件开发"],"content":"\r其它","date":"2022-05-13","objectID":"/omnis-experience-memo/:4:0","series":null,"tags":["Omnis"],"title":"Omnis经验备忘","uri":"/omnis-experience-memo/#其它"},{"categories":["软件开发"],"content":"\rOmnis中的Event流向field —\u003e $cwind.$control —\u003e $ctask.$control ","date":"2022-05-13","objectID":"/omnis-experience-memo/:4:1","series":null,"tags":["Omnis"],"title":"Omnis经验备忘","uri":"/omnis-experience-memo/#omnis中的event流向"},{"categories":["软件开发"],"content":"\rClock Control是阻塞的Clock Control是阻塞的，比如evSecondChange，当事件触发时，如果上一个事件没有执行完，那么本次事件将被丢弃。 ","date":"2022-05-13","objectID":"/omnis-experience-memo/:4:2","series":null,"tags":["Omnis"],"title":"Omnis经验备忘","uri":"/omnis-experience-memo/#clock-control是阻塞的"},{"categories":["软件开发"],"content":"\rOmnis生成PDF似乎是异步的因此会导致如果立即发送PDF，PDF可能是不完整的，可以用sleep来等待。 ","date":"2022-05-13","objectID":"/omnis-experience-memo/:4:3","series":null,"tags":["Omnis"],"title":"Omnis经验备忘","uri":"/omnis-experience-memo/#omnis生成pdf似乎是异步的"},{"categories":["软件开发"],"content":"\r常量kAutoxl…要避免使用此类COM常量，因为当Excel COM未初始化时，kAutoxl... 全部为0。 ","date":"2022-05-13","objectID":"/omnis-experience-memo/:4:4","series":null,"tags":["Omnis"],"title":"Omnis经验备忘","uri":"/omnis-experience-memo/#常量kautoxl"},{"categories":["软件开发"],"content":"\rExcel Interactive属性如果处于交互模式，则该属性值为True；如果设置该属性为False，则Excel将禁止所有的键盘输入和鼠标输入（由代码显示的对话框的输入除外）。说明：禁止用户输入将使用户不能干预宏移动或者激活Excel对象。**如果正使用DDE或者OLE自动化从其他应用程序和Excel进行通信，则该属性很有用。**如果将该属性设为False记注要将它设回True。如果在代码的运行过程中不想用户干预的话，把该属性设置为False非常不错的选择，但切记在代码结束前恢复为True。 ","date":"2022-05-13","objectID":"/omnis-experience-memo/:4:5","series":null,"tags":["Omnis"],"title":"Omnis经验备忘","uri":"/omnis-experience-memo/#excel-interactive属性"},{"categories":["软件开发"],"content":"\rTCP接收消息时TCP接收消息时，在server端接收client的消息是非阻塞的，而在client端接收server端的消息是阻塞的。 ","date":"2022-05-13","objectID":"/omnis-experience-memo/:4:6","series":null,"tags":["Omnis"],"title":"Omnis经验备忘","uri":"/omnis-experience-memo/#tcp接收消息时"},{"categories":["软件开发"],"content":"\r对于Excel的OLE调用Excel作为OLE服务被调用时，会可能因此各种原因阻塞，从而抛出0x800AC472错误，对支持异常的语言，可以不断循环测试此异常，直到阻塞解除。对Omnis不行，只能尽量将对excel的同仁操作尽量延后，将其它功能性操作提前。 ","date":"2022-05-13","objectID":"/omnis-experience-memo/:4:7","series":null,"tags":["Omnis"],"title":"Omnis经验备忘","uri":"/omnis-experience-memo/#对于excel的ole调用"},{"categories":["软件开发"],"content":"\r重命名Class要重命名Class，需要先copy，paste，然后将新Class check in到VCS，然后Check out新Class，这样可以保留一份最新备份，以备回滚。 ","date":"2022-05-13","objectID":"/omnis-experience-memo/:4:8","series":null,"tags":["Omnis"],"title":"Omnis经验备忘","uri":"/omnis-experience-memo/#重命名class"},{"categories":["软件开发"],"content":"\r大量数据遍历如果使用引用来遍历$cols信息会变很慢（w_Delayed_Orders中的export），此时不如空间换时间，不用引用，直接遍历原数据。 ","date":"2022-05-13","objectID":"/omnis-experience-memo/:4:9","series":null,"tags":["Omnis"],"title":"Omnis经验备忘","uri":"/omnis-experience-memo/#大量数据遍历"},{"categories":["软件开发"],"content":"AX基础知识备忘","date":"2022-05-13","objectID":"/ax-basic-knowledge-memorandum/","series":null,"tags":["AX"],"title":"AX基础知识备忘","uri":"/ax-basic-knowledge-memorandum/"},{"categories":["软件开发"],"content":"\rAX基础知识备忘","date":"2022-05-13","objectID":"/ax-basic-knowledge-memorandum/:0:0","series":null,"tags":["AX"],"title":"AX基础知识备忘","uri":"/ax-basic-knowledge-memorandum/#ax基础知识备忘"},{"categories":["软件开发"],"content":"\rX++数据类型 ","date":"2022-05-13","objectID":"/ax-basic-knowledge-memorandum/:1:0","series":null,"tags":["AX"],"title":"AX基础知识备忘","uri":"/ax-basic-knowledge-memorandum/#x数据类型"},{"categories":["IT备忘"],"content":"手动安装tmux","date":"2022-04-22","objectID":"/manually-install-tmux/","series":null,"tags":["Linux","tmux"],"title":"手动安装tmux","uri":"/manually-install-tmux/"},{"categories":["IT备忘"],"content":"\r手动安装tmux","date":"2022-04-22","objectID":"/manually-install-tmux/:0:0","series":null,"tags":["Linux","tmux"],"title":"手动安装tmux","uri":"/manually-install-tmux/#手动安装tmux"},{"categories":["IT备忘"],"content":"\r手动更（4声）新centos 7 下yum安装的版本才到2.3，debain 10下才到2.8，而官方目前已经到了3.2 ","date":"2022-04-22","objectID":"/manually-install-tmux/:1:0","series":null,"tags":["Linux","tmux"],"title":"手动安装tmux","uri":"/manually-install-tmux/#手动更4声新"},{"categories":["IT备忘"],"content":"\r步骤 LIBENV_VER=2.1.11 cd ~ wget https://github.com/libevent/libevent/releases/download/release-${LIBENV_VER}-stable/libevent-${LIBENV_VER}-stable.tar.gz \u0026\u0026 \\ x libevent-${LIBENV_VER}-stable.tar.gz \u0026\u0026 \\ cd libevent-${LIBENV_VER}-stable \u0026\u0026 \\ ./configure --prefix=$HOME/tmux_depend --disable-shared \u0026\u0026 \\ make \u0026\u0026 make install NCURSES_VER=6.3 cd ~ wget https://ftp.gnu.org/gnu/ncurses/ncurses-${NCURSES_VER}.tar.gz \u0026\u0026 \\ x ncurses-${NCURSES_VER}.tar.gz \u0026\u0026 \\ cd ncurses-${NCURSES_VER} \u0026\u0026 \\ ./configure --prefix=$HOME/tmux_depend \u0026\u0026 \\ make \u0026\u0026 make install TMUX_VER=3.2 cd ~ wget https://github.com/tmux/tmux/releases/download/${TMUX_VER}/tmux-${TMUX_VER}.tar.gz \u0026\u0026 \\ x tmux-${TMUX_VER} \u0026\u0026 \\ cd tmux-${TMUX_VER} \u0026\u0026 \\ ./configure CFLAGS=\"-I$HOME/tmux_depend/include -I/$HOME/tmux_depend/include/ncurses\" LDFLAGS=\"-L/$HOME/tmux_depend/lib -L/$HOME/tmux_depend/include/ncurses -L/$HOME/tmux_depend/include\" \u0026\u0026 \\ make \u0026\u0026 sudo make install ","date":"2022-04-22","objectID":"/manually-install-tmux/:2:0","series":null,"tags":["Linux","tmux"],"title":"手动安装tmux","uri":"/manually-install-tmux/#步骤"},{"categories":["IT备忘"],"content":"\r发现写完后发现之前已经写了更好的安装方法： Debian最小化安装新系统配置 中的安装tmux小节。 ","date":"2022-04-22","objectID":"/manually-install-tmux/:3:0","series":null,"tags":["Linux","tmux"],"title":"手动安装tmux","uri":"/manually-install-tmux/#发现"},{"categories":["软件开发"],"content":"导出网站的cookie给requests和scrapy","date":"2022-04-21","objectID":"/export-the-cookie-of-the-website-to-requests-and-scrapy/","series":null,"tags":["Python","爬虫"],"title":"导出网站的cookie给requests和scrapy","uri":"/export-the-cookie-of-the-website-to-requests-and-scrapy/"},{"categories":["软件开发"],"content":"\r导出网站的cookie给requests和scrapy","date":"2022-04-21","objectID":"/export-the-cookie-of-the-website-to-requests-and-scrapy/:0:0","series":null,"tags":["Python","爬虫"],"title":"导出网站的cookie给requests和scrapy","uri":"/export-the-cookie-of-the-website-to-requests-and-scrapy/#导出网站的cookie给requests和scrapy"},{"categories":["软件开发"],"content":"\r安装Chrome插件Edit This Cookie ","date":"2022-04-21","objectID":"/export-the-cookie-of-the-website-to-requests-and-scrapy/:1:0","series":null,"tags":["Python","爬虫"],"title":"导出网站的cookie给requests和scrapy","uri":"/export-the-cookie-of-the-website-to-requests-and-scrapy/#安装chrome插件"},{"categories":["软件开发"],"content":"\r设置插件在设置中将导出格式设置为： Netscape HTTP Cookie File 保存到 cookie_file = 'c:/temp/cookie.txt' 注意：带#的行也要复制进去。示例： # Netscape HTTP Cookie File # http://curl.haxx.se/rfc/cookie_spec.html # This file was generated by EditThisCookie .cpquery.cnipa.gov.cn TRUE / FALSE 0 _gscbrs_930750436 1 .cpquery.cnipa.gov.cn TRUE / FALSE 1650520120 _gscs_930750436 t50518320twgbh649|pv:1 .cpquery.cnipa.gov.cn TRUE / FALSE 1713590320 _gscu_930750436 50424030muza0119 cpquery.cnipa.gov.cn FALSE / FALSE 1650550396 bg6 62|BH0/r cpquery.cnipa.gov.cn FALSE / FALSE 0 JSESSIONID a8aedc2b8c96e02a9741d4f5be1a cpquery.cnipa.gov.cn FALSE / FALSE 1965784029 UR3ZMlLdcLIE80S 1qJmCEYVmJ5c3GH7XC9LsGT_JQj5eDIKafIPtVAL6BSABt6X5bS2TAtZpNrKiONw cpquery.cnipa.gov.cn FALSE / FALSE 1965878349 UR3ZMlLdcLIE80T 4qsUUCBYuiRY4_R_kewfMI9XrpjPbw_.uKTBLsGermqGUuJCBcBGCTe1x_ub_3C7UkeWNJYlvPk1BvpvayLaMHyWbfbLaXQ4t.VTI2RGXUNeIv_sPhGWC5XclgAFOZ_M.5fnneoDv6PfCZK_j.VGkI2p50s0lbqbuWIfMQ3Mx6a1DsCHSszk2lK3XbHpRedYB4kfq6vUNljvpFGPC.iFktGjxG4YXW4UTCa2_QdnIsQA6eOaccC8.ZSnyEDcyJkGEKclsdLVV9_wJq.cPfVdM.HI.q5moAKSvI_ZneMYEOjw9eljC4LlOjZl4q6CggAwx21epwBrBzgH.YheHtcmVYl4wIjjUxywTvn0q3oYcrN07pZ9A2zWZ2ed6DTEqJGi_LiL ","date":"2022-04-21","objectID":"/export-the-cookie-of-the-website-to-requests-and-scrapy/:2:0","series":null,"tags":["Python","爬虫"],"title":"导出网站的cookie给requests和scrapy","uri":"/export-the-cookie-of-the-website-to-requests-and-scrapy/#设置插件"},{"categories":["软件开发"],"content":"\rCookiejar读取 from http.cookiejar import MozillaCookieJar cookie = MozillaCookieJar() cookie.load(cookie_file) ","date":"2022-04-21","objectID":"/export-the-cookie-of-the-website-to-requests-and-scrapy/:3:0","series":null,"tags":["Python","爬虫"],"title":"导出网站的cookie给requests和scrapy","uri":"/export-the-cookie-of-the-website-to-requests-and-scrapy/#cookiejar读取"},{"categories":["软件开发"],"content":"\rrequests读取 import requests session = requests.session() session.cookies = MozillaCookieJar(filename=cookie_file) session.cookies.load() url = 'https://www.morningstar.cn/fundcompare/compare.aspx' res = session.get(url) ","date":"2022-04-21","objectID":"/export-the-cookie-of-the-website-to-requests-and-scrapy/:4:0","series":null,"tags":["Python","爬虫"],"title":"导出网站的cookie给requests和scrapy","uri":"/export-the-cookie-of-the-website-to-requests-and-scrapy/#requests读取"},{"categories":["软件开发"],"content":"\rscrapy读取 # session接上面 cookie_dict = requests.utils.dict_from_cookiejar(session.cookies) fetch(url, cookies=cookie_dict) # scrapy shell yield scrapy.Request( url, callback=lambda r: print(r), cookies=cookie_dict, meta={ 'dont_redirect': True, 'handle_httpstatus_list': [302], 'dont_cache': True } ) ","date":"2022-04-21","objectID":"/export-the-cookie-of-the-website-to-requests-and-scrapy/:5:0","series":null,"tags":["Python","爬虫"],"title":"导出网站的cookie给requests和scrapy","uri":"/export-the-cookie-of-the-website-to-requests-and-scrapy/#scrapy读取"},{"categories":["IT备忘"],"content":"在WindowsServer2019安装WindowsStore","date":"2022-03-29","objectID":"/install-windows-store-in-windows-server-2019/","series":null,"tags":["Windows","Server2019"],"title":"在WindowsServer2019安装WindowsStore","uri":"/install-windows-store-in-windows-server-2019/"},{"categories":["IT备忘"],"content":"\r在Windows Server 2019安装Windows Store","date":"2022-03-29","objectID":"/install-windows-store-in-windows-server-2019/:0:0","series":null,"tags":["Windows","Server2019"],"title":"在WindowsServer2019安装WindowsStore","uri":"/install-windows-store-in-windows-server-2019/#在windows-server-2019安装windows-store"},{"categories":["IT备忘"],"content":"\rWhy其实只是为了安装 Snip \u0026 Sketch （截图和草图），在Windows下面目前还没有找到能取代它的工具： 能够在多屏幕不同缩放比例下都正常工作 能够给截图自动加轮廓线 能够用荧光笔加高亮标记 可以延迟截图 ","date":"2022-03-29","objectID":"/install-windows-store-in-windows-server-2019/:1:0","series":null,"tags":["Windows","Server2019"],"title":"在WindowsServer2019安装WindowsStore","uri":"/install-windows-store-in-windows-server-2019/#why"},{"categories":["IT备忘"],"content":"\rHow","date":"2022-03-29","objectID":"/install-windows-store-in-windows-server-2019/:2:0","series":null,"tags":["Windows","Server2019"],"title":"在WindowsServer2019安装WindowsStore","uri":"/install-windows-store-in-windows-server-2019/#how"},{"categories":["IT备忘"],"content":"\r下载文件 网站，在这个网站可以生成Store应用及其依赖的下载链接 以 PackageFamilyName 方式搜索 Microsoft.WindowsStore_8wekyb3d8bbwe 下载对应的包，具体为 Microsoft.NET.Native.Framework.2.2_2.2.29512.0_x64__8wekyb3d8bbwe.Appx Microsoft.NET.Native.Runtime.2.2_2.2.28604.0_x64__8wekyb3d8bbwe.Appx Microsoft.UI.Xaml.2.4_2.42007.9001.0_x64__8wekyb3d8bbwe.Appx （注意这里不能下载2.7） Microsoft.VCLibs.140.00_14.0.30704.0_x64__8wekyb3d8bbwe.Appx Microsoft.WindowsStore_12107.1001.15.0_neutral___8wekyb3d8bbwe.AppxBundle 本来下载这些就够了，剩下的Snip \u0026 Sketch可以在WindowsStore中安装，但WindowsStore需要登录，速度很慢，干脆将Snip \u0026 Sketch也一起下载： Microsoft.ScreenSketch_2020.814.2355.0_neutral___8wekyb3d8bbwe.AppxBundle 将所有文件复制到Server 2019的某个appx目录下 以管理员身份打开 PowerShell，cd appx，然后Add-AppxPackage * 相关的APP将全部安装上。 ","date":"2022-03-29","objectID":"/install-windows-store-in-windows-server-2019/:2:1","series":null,"tags":["Windows","Server2019"],"title":"在WindowsServer2019安装WindowsStore","uri":"/install-windows-store-in-windows-server-2019/#下载文件"},{"categories":["IT备忘"],"content":"通过zerotier转发dns解析到openwrt","date":"2022-03-27","objectID":"/forward-dns-to-openwrt-through-zerotier/","series":null,"tags":["zerotier","openwrt"],"title":"通过zerotier转发dns解析到openwrt","uri":"/forward-dns-to-openwrt-through-zerotier/"},{"categories":["IT备忘"],"content":"\r通过zerotier转发dns解析到openwrt","date":"2022-03-27","objectID":"/forward-dns-to-openwrt-through-zerotier/:0:0","series":null,"tags":["zerotier","openwrt"],"title":"通过zerotier转发dns解析到openwrt","uri":"/forward-dns-to-openwrt-through-zerotier/#通过zerotier转发dns解析到openwrt"},{"categories":["IT备忘"],"content":"\r原因家里的dhcp中已经有了各个设备的静态地址和名称，但在公司没法使用，都要用IP地址。 因此想着能不能将这些设备的解析转发到openwrt的dns。 ","date":"2022-03-27","objectID":"/forward-dns-to-openwrt-through-zerotier/:1:0","series":null,"tags":["zerotier","openwrt"],"title":"通过zerotier转发dns解析到openwrt","uri":"/forward-dns-to-openwrt-through-zerotier/#原因"},{"categories":["IT备忘"],"content":"\r方案正好最近因为要将公司dns和openwrt的dns分开（否则Windows下会默认从公司dns解析，但对墙外的网站都会污染解析），找到了coredns这个工具， ","date":"2022-03-27","objectID":"/forward-dns-to-openwrt-through-zerotier/:2:0","series":null,"tags":["zerotier","openwrt"],"title":"通过zerotier转发dns解析到openwrt","uri":"/forward-dns-to-openwrt-through-zerotier/#方案"},{"categories":["IT备忘"],"content":"\r配置经过几番摸索，找出方案如下 确保zerotier能够工作，即可以透明访问内网所有地址和端口 在coredns的配置中加入如下 th { forward . 10.8.9.1 { force_tcp } import snip } tq { forward . 10.88.9.1 { force_tcp } import snip } 其中最重要的就是force_tcp，我估计可能是运营商对udp的包做了限制。 为了对不同区域的私有域名区别转发，需要在openwrt的dhcp中设置本地域名，以便针对不同域名转发到不同的openwrt。这里我设置家里为th，另一处为tq。 ","date":"2022-03-27","objectID":"/forward-dns-to-openwrt-through-zerotier/:2:1","series":null,"tags":["zerotier","openwrt"],"title":"通过zerotier转发dns解析到openwrt","uri":"/forward-dns-to-openwrt-through-zerotier/#配置"},{"categories":["IT备忘"],"content":"\rPS实践证明coredns不好用，经常解析出错。现在用AdGuardHome。 ","date":"2022-03-27","objectID":"/forward-dns-to-openwrt-through-zerotier/:2:2","series":null,"tags":["zerotier","openwrt"],"title":"通过zerotier转发dns解析到openwrt","uri":"/forward-dns-to-openwrt-through-zerotier/#ps"},{"categories":["IT备忘"],"content":"神州网信政府版WIN10设置","date":"2022-03-23","objectID":"/shenzhou-netcom-government-edition-win10-settings/","series":null,"tags":["Windows"],"title":"神州网信政府版WIN10设置","uri":"/shenzhou-netcom-government-edition-win10-settings/"},{"categories":["IT备忘"],"content":"\r神州网信政府版WIN10设置","date":"2022-03-23","objectID":"/shenzhou-netcom-government-edition-win10-settings/:0:0","series":null,"tags":["Windows"],"title":"神州网信政府版WIN10设置","uri":"/shenzhou-netcom-government-edition-win10-settings/#神州网信政府版win10设置"},{"categories":["IT备忘"],"content":"\r不错的系统精简掉了很多平时用不到的服务，我是安装在PVE中用迅雷的，在闲置状态下CPU仅仅占用2%左右，内存仅仅用了1.5GB。 相比之下WIN10 LTSC在闲置状态下CPU占用要50%左右，内存要用3GB，主要是Software Protection服务在运行，又关不掉。 而且相比国外的Tiny10系统，核心功能很完善。Tiny10我死活无法使用远程桌面。 结论：很适合安装在PVE这类资源有限的主机上长期运行。（PS: 后来找到了Debian系的迅雷，有些资源Transmission没速度，只能靠迅雷；但不能用会员） ","date":"2022-03-23","objectID":"/shenzhou-netcom-government-edition-win10-settings/:1:0","series":null,"tags":["Windows"],"title":"神州网信政府版WIN10设置","uri":"/shenzhou-netcom-government-edition-win10-settings/#不错的系统"},{"categories":["IT备忘"],"content":"\r安装中的问题 KVM配置（ID: 6028） 内存 - 4G CPU - Host BIOS - UEFI (不添加EFI硬盘) 硬盘 - SCSI 网卡 - virtio (半虚拟化)， 光驱1 - CMGE iso 光驱2 - virtio iso 在安装时倒是可以选择光驱中的驱动（virtio scsi），安装之后居然没有光驱，又没有网卡 临时方案 没什么好办法，只能先找了个备用的WINDOWS 9028，新建一块硬盘挂载上去（默认32G） 将virtio iso的内容复制进去 分离硬盘，在zfs下zfs rename rpool/data/vm-9028-disk-3 rpool/data/vm-6028-disk-3 nano /etc/pve/qemu-server/6028.conf 找到scsi1: local-zfs:vm-6028-disk-0,cache=writeback,size=80G 在下面加上scsi2: local-zfs:vm-6028-disk-3,cache=writeback,size=32G 问题解决 后来发现在PVE -\u003e Options -\u003e Boot Order 中必须要勾选光驱 ","date":"2022-03-23","objectID":"/shenzhou-netcom-government-edition-win10-settings/:2:0","series":null,"tags":["Windows"],"title":"神州网信政府版WIN10设置","uri":"/shenzhou-netcom-government-edition-win10-settings/#安装中的问题"},{"categories":["IT备忘"],"content":"\r激活 # Under administrator mode # Make sure KMS server in openwrt is running slmgr /upk slmgr /ipk YYYY-NNNNN-66666-99999-44444 # 见 dsm/share/win10act.txt slmgr /skms 10.8.6.1 slmgr /ato slmgr /xpr slmgr /dlv ","date":"2022-03-23","objectID":"/shenzhou-netcom-government-edition-win10-settings/:3:0","series":null,"tags":["Windows"],"title":"神州网信政府版WIN10设置","uri":"/shenzhou-netcom-government-edition-win10-settings/#激活"},{"categories":["IT备忘"],"content":"\r取消Ctrl+Alt+Del打开启动屏幕组策略： 计算机配置 -\u003e Windows设置 -\u003e 安全设置 -\u003e 本地策略 -\u003e 安全选项 \u003e 交互式登录：无须按ctrl+alt+dle 【已启用】 ","date":"2022-03-23","objectID":"/shenzhou-netcom-government-edition-win10-settings/:4:0","series":null,"tags":["Windows"],"title":"神州网信政府版WIN10设置","uri":"/shenzhou-netcom-government-edition-win10-settings/#取消ctrlaltdel打开启动屏幕"},{"categories":["IT备忘"],"content":"\r密码不过期组策略： 计算机配置 -\u003e Windows设置 -\u003e 安全设置 -\u003e 账户策略 -\u003e 密码策略 \u003e 密码最长使用期限 0 ","date":"2022-03-23","objectID":"/shenzhou-netcom-government-edition-win10-settings/:5:0","series":null,"tags":["Windows"],"title":"神州网信政府版WIN10设置","uri":"/shenzhou-netcom-government-edition-win10-settings/#密码不过期"},{"categories":["IT备忘"],"content":"\r解除屏幕保护程序限制组策略： 用户配置 -\u003e 管理模板 -\u003e 控制面板 -\u003e 个性化 \u003e 启用屏幕保护程序 【已禁用】 ... \u003e 屏幕保护程序超时 【已禁用】 ... \u003e 强制使用特定的屏幕保护程序 【已禁用】 ","date":"2022-03-23","objectID":"/shenzhou-netcom-government-edition-win10-settings/:6:0","series":null,"tags":["Windows"],"title":"神州网信政府版WIN10设置","uri":"/shenzhou-netcom-government-edition-win10-settings/#解除屏幕保护程序限制"},{"categories":["IT备忘"],"content":"\r休眠后直接进入桌面组策略： 计算机配置 -\u003e 管理模板 -\u003e 控制面板 -\u003e 个性化 \u003e 不显示锁屏 【已启用】 ","date":"2022-03-23","objectID":"/shenzhou-netcom-government-edition-win10-settings/:7:0","series":null,"tags":["Windows"],"title":"神州网信政府版WIN10设置","uri":"/shenzhou-netcom-government-edition-win10-settings/#休眠后直接进入桌面"},{"categories":["IT备忘"],"content":"\r开启远程桌面组策略： 计算机配置 -\u003e 管理模板 -\u003e Windows 组件 -\u003e 远程桌面服务 -\u003e 远程桌面会话主机 ... -\u003e 连接 \u003e 允许用户通过使用远程桌面服务进行远程连接 【未配置】 ... -\u003e 设备和资源重定向 -\u003e 不允许剪贴板重定向 【未配置】 计算机配置： 此电脑 -\u003e 属性 -\u003e 远程桌面 \u003e 允许远程连接到此计算机 【打勾】 ... \u003e 仅允许运行使用网络级别。。。 【不勾】 ... \u003e 选择用户... 【添加当前用户】 组策略： 计算机配置 -\u003e Windows 设置 -\u003e 安全设置 -\u003e 本地策略 -\u003e 用户权限分配 \u003e 从网络访问此计算机 【添加当前用户】 ... \u003e 允许通过远程桌面服务登录 【添加当前用户】 组策略： 计算机配置 -\u003e Windows 设置 -\u003e 安全设置 -\u003e 本地策略 -\u003e 安全选项 \u003e 网络访问：本地账户的共享和安全模式 【经典】 ","date":"2022-03-23","objectID":"/shenzhou-netcom-government-edition-win10-settings/:8:0","series":null,"tags":["Windows"],"title":"神州网信政府版WIN10设置","uri":"/shenzhou-netcom-government-edition-win10-settings/#开启远程桌面"},{"categories":["IT备忘","Linux"],"content":"openwrt-x86-compile","date":"2022-03-17","objectID":"/openwrt-compile/","series":null,"tags":["openwrt"],"title":"openwrt-x86-compile","uri":"/openwrt-compile/"},{"categories":["IT备忘","Linux"],"content":"\ropenwrt-compile #!/bin/bash proj=immortalwrt home=/home/henry ver=openwrt-23.05 nasdir=henry@10.8.0.2:/volume1/pve/images system=x86 target=64 profile=generic bindir=$home/$proj/bin/targets/$system/$target combined=$proj-$system-$target-$profile-squashfs-combined-efi timestamp=$(date +\"%Y%m%d\") ## For the first time compile #git clone -b $ver --single-branch --filter=blob:none https://github.com/immortalwrt/immortalwrt cd $home/$proj \u0026\u0026 \\ cp .config $home/compile/openwrt-$(date +%u).config \u0026\u0026 \\ git pull \u0026\u0026 \\ ##### For the first time compile #echo \"src-git passwall_packages https://github.com/xiaorouji/openwrt-passwall-packages.git;main\" \u003e\u003e feeds.conf.default \u0026\u0026 \\ #echo \"src-git passwall https://github.com/xiaorouji/openwrt-passwall.git;main\" \u003e\u003e feeds.conf.default \u0026\u0026 \\ #echo \"src-git helloworld https://github.com/fw876/helloworld;main\" \u003e\u003e feeds.conf.default \u0026\u0026 \\ #git clone https://github.com/jerrykuku/luci-theme-argon.git package/luci-theme-argon.git \u0026\u0026 \\ #git clone https://github.com/jerrykuku/luci-app-argon-config.git package/luci-app-argon-config \u0026\u0026 \\ #git clone https://github.com/nixonli/ddns-scripts_dnspod.git package/ddns-scripts_dnspod \u0026\u0026 \\ #git clone https://github.com/zzsj0928/luci-app-pushbot package/luci-app-pushbot \u0026\u0026 \\ ## If select passwall #git clone https://github.com/Microsoft/GSL build_dir/target-x86_64_musl/trojan-plus-10.0.3/external/GSL \u0026\u0026 \\ sed -i 's/192.168.1.1/10.8.9.1/g' package/base-files/files/bin/config_generate \u0026\u0026 \\ ./scripts/feeds update -a \u0026\u0026 ./scripts/feeds install -a \u0026\u0026 \\ make clean \u0026\u0026 make -j1 V=s \u0026\u0026 \\ scp -i $home/.ssh/id_ed25519 $bindir/$combined.qcow2 $nasdir/$combined-$timestamp.qcow2 \u0026\u0026 \\ scp -i $home/.ssh/id_ed25519 $bindir/$combined.img.gz $nasdir/$combined-$timestamp.img.gz if [ $? -eq 0 ]; then result=\"成功\" else result=\"失败\" fi dingding=\"https://oapi.dingtalk.com/robot/send?access_token=dingdingtoken\" msg=\"'{\\\"msgtype\\\": \\\"text\\\", \\\"text\\\":{\\\"content\\\":\\\"[Builder] Built $ver for $system-$target $result\\\"}}'\" CURL=\"curl $dingding -H 'Content-Type: application/json' -X POST --data $msg\" eval $CURL #echo \" 编译OpenWrt报告：结果为 $? \" | mailx -s \" 编译OpenWrt $ver$result \" root ","date":"2022-03-17","objectID":"/openwrt-compile/:0:0","series":null,"tags":["openwrt"],"title":"openwrt-x86-compile","uri":"/openwrt-compile/#openwrt-compile"},{"categories":["IT备忘"],"content":"openwrt-x86-menuconfig","date":"2022-03-17","objectID":"/openwrt-menuconfig-x86/","series":null,"tags":["openwrt"],"title":"openwrt-x86-menuconfig","uri":"/openwrt-menuconfig-x86/"},{"categories":["IT备忘"],"content":"\ropenwrt-menuconfig Target system - x84 Subtarget - x86_64 Target profile - x86/64 Target images - tar.gz - squashfs - grub-efi - console terminal - 3 sec to wait boot - kvm / qcow2 - kernal 512 MB - root 1024 MB Kernal modules - USB Support - kmod-usb-net - kmod-usb-net-cdc-ether - kmod-usb-net-rndis #手机热点usb共享Modem拨号 - virtualization - iommu - kvm intel - vhost* LUCI - application - accesscontrol 访问时间控制 - autoreboot - ahcp：自动配置IPv6，IPv4v6双栈；用于路由探测与地址分配 - argon config - attendedsysupgrade 系统更新 - banip - commands - #cshark：Cloud Shark，数据流抓取工具套件 - ddns - #diag-core：诊断工具套件，执行ping，扫描等，视安装的工具套件而定 - #DNSCrypt-Proxy：将特定于 DNSCrypt-Proxy 的设置应用到 Dnsmasq 配置 - frpc - nut (network ups tool) - keepalived - # passwall （trojan-plus如果有gsl编译错误一般是因为git clone出错，多试几次即可） - privoxy - pushbot - smartdns - socat - ssr-plus (加kcpun / trojan) - timecontrol ? - timewol - tiny proxy - ttyd - #transmission - turbo acc - udp2raw - upnp - vlmcsd (KMS) - watchcat - wol - wrtbwmon (Realtime monitor traffic) - zerotier - themes - argon Utilities - Editors - nano-full - usbutils - virtualization - qemu-efi - qemu-ga - qemu-img Extra packages - ipv6helper Base system - dnsmasq-full Networt - Ip addresses and names - ddns-scripts-dnspod - Web Servers/Proxies (? 会导致包较大) - nginx-full - nginx-ssl ","date":"2022-03-17","objectID":"/openwrt-menuconfig-x86/:0:0","series":null,"tags":["openwrt"],"title":"openwrt-x86-menuconfig","uri":"/openwrt-menuconfig-x86/#openwrt-menuconfig"},{"categories":["IT备忘"],"content":"zfs-mirror更换损坏的硬盘","date":"2022-03-13","objectID":"/zfs-mirror-replace-damaged-hard-drive/","series":null,"tags":["Linux","zfs"],"title":"zfs-mirror更换损坏的硬盘","uri":"/zfs-mirror-replace-damaged-hard-drive/"},{"categories":["IT备忘"],"content":"\rzfs-mirror更换损坏的硬盘","date":"2022-03-13","objectID":"/zfs-mirror-replace-damaged-hard-drive/:0:0","series":null,"tags":["Linux","zfs"],"title":"zfs-mirror更换损坏的硬盘","uri":"/zfs-mirror-replace-damaged-hard-drive/#zfs-mirror更换损坏的硬盘"},{"categories":["IT备忘"],"content":"\r救命的参考文章","date":"2022-03-13","objectID":"/zfs-mirror-replace-damaged-hard-drive/:1:0","series":null,"tags":["Linux","zfs"],"title":"zfs-mirror更换损坏的硬盘","uri":"/zfs-mirror-replace-damaged-hard-drive/#救命的参考文章httpsr00tdkpost20220502proxmox-ve-7-replace-zfs-boot-disk"},{"categories":["IT备忘"],"content":"\r终于打算要换了自从用上zfs之后就开始关心硬盘坏掉之后如何更换，今天终止有机会了。 我在zfs上安装的pve，用的mirror。有段时间一直报有一块硬盘有READ EROR，我也一直没当回事。都是用zpool clear清除掉，反正都是READ错误，没有WRITE错误，而且也就在10左右。 直到今天，一下子冒出这么多的错误，我知道这块盘是保不住了，本来这两块盘就是人家淘汰下来的（穷哭） root@pve:~# zpool status pool: rpool state: DEGRADED status: One or more devices has experienced an unrecoverable error. An attempt was made to correct the error. Applications are unaffected. action: Determine if the device needs to be replaced, and clear the errors using 'zpool clear' or replace the device with 'zpool replace'. see: https://openzfs.github.io/openzfs-docs/msg/ZFS-8000-9P scan: scrub repaired 6.81M in 02:41:15 with 0 errors on Sun Mar 13 03:05:17 2022 config: NAME STATE READ WRITE CKSUM rpool DEGRADED 0 0 0 mirror-0 DEGRADED 0 0 0 ata-WDC_WD5000BPKT-75PK4T0_WD-WX11A43M7165-part3 DEGRADED 857 0 367 too many errors ata-WDC_WD5000BPKT-75PK4T0_WD-WX11A43M7336-part3 ONLINE 0 0 0 errors: No known data errors ","date":"2022-03-13","objectID":"/zfs-mirror-replace-damaged-hard-drive/:2:0","series":null,"tags":["Linux","zfs"],"title":"zfs-mirror更换损坏的硬盘","uri":"/zfs-mirror-replace-damaged-hard-drive/#终于打算要换了"},{"categories":["IT备忘"],"content":"\r关机，换硬盘虽然SATA可以热插拔，保险起见我还是关机了。不过忘了在关机前将坏的硬盘offline，这也没什么问题。 将旧硬盘拆下，新硬盘装上后开机。 ","date":"2022-03-13","objectID":"/zfs-mirror-replace-damaged-hard-drive/:3:0","series":null,"tags":["Linux","zfs"],"title":"zfs-mirror更换损坏的硬盘","uri":"/zfs-mirror-replace-damaged-hard-drive/#关机换硬盘"},{"categories":["IT备忘"],"content":"\r硬盘offline此时zfs已经识别到旧硬盘UNAVAILABLE了，这时将它OFFLINE: zpool offline rpool 10409275789507660143 root@pve:~# zpool status pool: rpool state: DEGRADED status: One or more devices has been taken offline by the administrator. Sufficient replicas exist for the pool to continue functioning in a degraded state. action: Online the device using 'zpool online' or replace the device with 'zpool replace'. scan: scrub repaired 6.81M in 02:41:15 with 0 errors on Sun Mar 13 03:05:17 2022 config: NAME STATE READ WRITE CKSUM rpool DEGRADED 0 0 0 mirror-0 DEGRADED 0 0 0 10409275789507660143 OFFLINE 0 0 0 was /dev/disk/by-id/ata-WDC_WD5000BPKT-75PK4T0_WD-WX11A43M7165-part3 ata-WDC_WD5000BPKT-75PK4T0_WD-WX11A43M7336-part3 ONLINE 0 0 0 errors: No known data errors ","date":"2022-03-13","objectID":"/zfs-mirror-replace-damaged-hard-drive/:4:0","series":null,"tags":["Linux","zfs"],"title":"zfs-mirror更换损坏的硬盘","uri":"/zfs-mirror-replace-damaged-hard-drive/#硬盘offline"},{"categories":["IT备忘"],"content":"\r硬盘擦除由于用过的硬盘，需要先擦除。 在pve管理界面，选择pve -\u003e disks，找到新硬盘，选择Wipe Disk: 更好的方法是从好的硬盘复制分区表： sgdisk /dev/sdb -R /dev/sdc ## sdb的分区表复制到sdc sgdisk -G /dev/sdc ## 重新生成UUID ","date":"2022-03-13","objectID":"/zfs-mirror-replace-damaged-hard-drive/:5:0","series":null,"tags":["Linux","zfs"],"title":"zfs-mirror更换损坏的硬盘","uri":"/zfs-mirror-replace-damaged-hard-drive/#硬盘擦除"},{"categories":["IT备忘"],"content":"\r硬盘replace用/dev/sda这样的方式不太安全，因为更换线缆位置后可能会出现变化，最好用id更保险。 进入pve的shell，ls /dev/disk/by-id，找到新硬盘的id。 root@pve:/dev/disk/by-id# ls ata-ST500LX012-1LM162-SSHD_W3N179MS ata-WDC_WD5000BPKT-75PK4T0_WD-WX11A43M7336 wwn-0x50014ee00410d1af wwn-0x50014ee658bf9463-part1 ata-WDC_WD30PURX-64P6ZY0_WD-WMC4N0L041D9 ata-WDC_WD5000BPKT-75PK4T0_WD-WX11A43M7336-part1 wwn-0x50014ee00410d1af-part1 wwn-0x50014ee658bf9463-part2 ata-WDC_WD30PURX-64P6ZY0_WD-WMC4N0L041D9-part1 ata-WDC_WD5000BPKT-75PK4T0_WD-WX11A43M7336-part2 wwn-0x50014ee00410d1af-part2 wwn-0x50014ee658bf9463-part3 ata-WDC_WD30PURX-64P6ZY0_WD-WMC4N0L041D9-part2 ata-WDC_WD5000BPKT-75PK4T0_WD-WX11A43M7336-part3 wwn-0x50014ee00410d1af-part3 ata-WDC_WD30PURX-64P6ZY0_WD-WMC4N0L041D9-part3 wwn-0x5000c50082b85d27 wwn-0x50014ee658bf9463 zpool replace -f rpool ata-WDC_WD5000BPKT-75PK4T0_WD-WX11A43M7336-part3 ata-HGST_HUS726T4TALE6L4_V1G7DWXC-part3 ## 注意这里是第三分区，如果是新增硬盘则将replace换成attach，后接pool的剩下的分区和新分区 -f – 强制 ","date":"2022-03-13","objectID":"/zfs-mirror-replace-damaged-hard-drive/:6:0","series":null,"tags":["Linux","zfs"],"title":"zfs-mirror更换损坏的硬盘","uri":"/zfs-mirror-replace-damaged-hard-drive/#硬盘replace"},{"categories":["IT备忘"],"content":"\r硬盘resilvering上面的命令没有输出，需要再次查看： root@pve:/dev/disk/by-id# zpool status pool: rpool state: DEGRADED status: One or more devices is currently being resilvered. The pool will continue to function, possibly in a degraded state. action: Wait for the resilver to complete. scan: resilver in progress since Sun Mar 13 23:33:50 2022 88.1G scanned at 534M/s, 2.38G issued at 14.4M/s, 187G total 2.45G resilvered, 1.28% done, 03:37:59 to go config: NAME STATE READ WRITE CKSUM rpool DEGRADED 0 0 0 mirror-0 DEGRADED 0 0 0 replacing-0 DEGRADED 0 0 0 10409275789507660143 OFFLINE 0 0 0 was /dev/disk/by-id/ata-WDC_WD5000BPKT-75PK4T0_WD-WX11A43M7165-part3 ata-ST500LX012-1LM162-SSHD_W3N179MS ONLINE 0 0 0 (resilvering) ata-WDC_WD5000BPKT-75PK4T0_WD-WX11A43M7336-part3 ONLINE 0 0 0 errors: No known data errors 此时已经在重建mirror，大概需要几个小时吧，看硬盘大小。 ","date":"2022-03-13","objectID":"/zfs-mirror-replace-damaged-hard-drive/:7:0","series":null,"tags":["Linux","zfs"],"title":"zfs-mirror更换损坏的硬盘","uri":"/zfs-mirror-replace-damaged-hard-drive/#硬盘resilvering"},{"categories":["IT备忘"],"content":"\r硬盘online重建结束后可能会自动online，否则就手动online一下。 root@pve:~# zpool status pool: rpool state: ONLINE status: Some supported and requested features are not enabled on the pool. The pool can still be used, but some features are unavailable. action: Enable all features using 'zpool upgrade'. Once this is done, the pool may no longer be accessible by software that does not support the features. See zpool-features(7) for details. scan: resilvered 190G in 02:59:24 with 0 errors on Mon Mar 14 02:33:14 2022 config: NAME STATE READ WRITE CKSUM rpool ONLINE 0 0 0 mirror-0 ONLINE 0 0 0 ata-ST500LX012-1LM162-SSHD_W3N179MS ONLINE 0 0 0 ata-WDC_WD5000BPKT-75PK4T0_WD-WX11A43M7336-part3 ONLINE 0 0 0 errors: No known data errors 在新磁盘重建好之前，这段时间不能重启。 ","date":"2022-03-13","objectID":"/zfs-mirror-replace-damaged-hard-drive/:8:0","series":null,"tags":["Linux","zfs"],"title":"zfs-mirror更换损坏的硬盘","uri":"/zfs-mirror-replace-damaged-hard-drive/#硬盘online"},{"categories":["IT备忘"],"content":"\r创建EFI启动分区 proxmox-boot-tool format /dev/sdc2 proxmox-boot-tool init /dev/sdc2 ## 如果失败，则apt install systemd-boot proxmox-boot-tool refresh ","date":"2022-03-13","objectID":"/zfs-mirror-replace-damaged-hard-drive/:9:0","series":null,"tags":["Linux","zfs"],"title":"zfs-mirror更换损坏的硬盘","uri":"/zfs-mirror-replace-damaged-hard-drive/#创建efi启动分区"},{"categories":["IT备忘"],"content":"\r调整硬盘大小如果是换的更大的硬盘，则需要调整大小 # resize partition 3 of sdc to use 50% of the available space (partition 3 is the ZFS partition) parted /dev/sdb resizepart 3 50% # expand zfs on sdc to use the entire expanded partition zpool online -e rpool ata-HGST_HUS726T4TALE6L4_V1G7DWXC-part3 # resize partition 3 of sdd to use 50% of the available space (partition 3 is the ZFS partition) parted /dev/sdc resizepart 3 50% # expand zfs on sdd to use the entire expanded partition zpool online -e rpool ata-ST4000NM0115-1YZ107_ZC123Y73-part3 -e – 扩容 ","date":"2022-03-13","objectID":"/zfs-mirror-replace-damaged-hard-drive/:10:0","series":null,"tags":["Linux","zfs"],"title":"zfs-mirror更换损坏的硬盘","uri":"/zfs-mirror-replace-damaged-hard-drive/#调整硬盘大小"},{"categories":["IT备忘"],"content":"\r查看硬盘有没有错误smartctl -a /dev/sda ","date":"2022-03-13","objectID":"/zfs-mirror-replace-damaged-hard-drive/:11:0","series":null,"tags":["Linux","zfs"],"title":"zfs-mirror更换损坏的硬盘","uri":"/zfs-mirror-replace-damaged-hard-drive/#查看硬盘有没有错误"},{"categories":["软件开发"],"content":"Oracle-XMLQuery-使用教程与实例","date":"2022-03-04","objectID":"/oracle-xmlquery-tutorial-and-instance/","series":null,"tags":["Database"],"title":"Oracle-XMLQuery-使用教程与实例","uri":"/oracle-xmlquery-tutorial-and-instance/"},{"categories":["软件开发"],"content":"\rOracle-XMLQuery-使用教程与实例","date":"2022-03-04","objectID":"/oracle-xmlquery-tutorial-and-instance/:0:0","series":null,"tags":["Database"],"title":"Oracle-XMLQuery-使用教程与实例","uri":"/oracle-xmlquery-tutorial-and-instance/#oracle-xmlquery-使用教程与实例"},{"categories":["软件开发"],"content":"\r2023-6-1更新","date":"2022-03-04","objectID":"/oracle-xmlquery-tutorial-and-instance/:1:0","series":null,"tags":["Database"],"title":"Oracle-XMLQuery-使用教程与实例","uri":"/oracle-xmlquery-tutorial-and-instance/#2023-6-1更新"},{"categories":["软件开发"],"content":"\r更全面的文档可以看 Oracle XMLDB","date":"2022-03-04","objectID":"/oracle-xmlquery-tutorial-and-instance/:1:1","series":null,"tags":["Database"],"title":"Oracle-XMLQuery-使用教程与实例","uri":"/oracle-xmlquery-tutorial-and-instance/#更全面的文档可以看-oracle-xmldbhttpsxy2401comlocal-doc-oracle-19czhcontentadxdbquery-and-update-xmlhtmlguid-6ae99020-c3c8-44eb-8e54-40188e1103f2-xmldb"},{"categories":["软件开发"],"content":"\rQuery综合示例 SELECT XMLQUERY(' for $v at $k in /Employees/Employee let $r := $v/email, $e := /Employees/Employee[@emplid\u003e1111] where $v/@emplid \u003e= 2222 order by $v/firstname descending return \u003cemp agv=\"{xs:integer(fn:avg($e/age))}\"\u003e{ $v/firstname, \u003ctype\u003e{if ($v/age\u003e40) then \"old\" else \"young\"} \u003c/type\u003e} \u003c/emp\u003e ' PASSING BY VALUE xv RETURNING CONTENT) AS val --AS val很重要，否则会因为col名太长无法显示，开始还以为是xmlquery语法有问题 FROM (SELECT xmltype ('\u003cEmployees\u003e \u003cEmployee emplid=\"1111\" type=\"admin\"\u003e \u003cfirstname\u003eJohn\u003c/firstname\u003e \u003clastname\u003eWatson\u003c/lastname\u003e \u003cage\u003e30\u003c/age\u003e \u003cemail\u003ejohnwatson@sh.com\u003c/email\u003e \u003c/Employee\u003e \u003cEmployee emplid=\"2222\" type=\"admin\"\u003e \u003cfirstname\u003eSherlock\u003c/firstname\u003e \u003clastname\u003eHomes\u003c/lastname\u003e \u003cage\u003e32\u003c/age\u003e \u003cemail\u003esherlock@sh.com\u003c/email\u003e \u003c/Employee\u003e \u003cEmployee emplid=\"3333\" type=\"user\"\u003e \u003cfirstname\u003eJim\u003c/firstname\u003e \u003clastname\u003eMoriarty\u003c/lastname\u003e \u003cage\u003e52\u003c/age\u003e \u003cemail\u003ejim@sh.com\u003c/email\u003e \u003c/Employee\u003e \u003cEmployee emplid=\"4444\" type=\"user\"\u003e \u003cfirstname\u003eMycroft\u003c/firstname\u003e \u003clastname\u003eHolmes\u003c/lastname\u003e \u003cage\u003e41\u003c/age\u003e \u003cemail\u003emycroft@sh.com\u003c/email\u003e \u003c/Employee\u003e \u003c/Employees\u003e') AS xv FROM dual) --RESULT \u003cemp agv=\"41\"\u003e \u003cfirstname\u003eSherlock\u003c/firstname\u003e \u003ctype\u003eyoung\u003c/type\u003e \u003c/emp\u003e \u003cemp agv=\"41\"\u003e \u003cfirstname\u003eMycroft\u003c/firstname\u003e \u003ctype\u003eold\u003c/type\u003e \u003c/emp\u003e \u003cemp agv=\"41\"\u003e \u003cfirstname\u003eJim\u003c/firstname\u003e \u003ctype\u003eold\u003c/type\u003e \u003c/emp\u003e ","date":"2022-03-04","objectID":"/oracle-xmlquery-tutorial-and-instance/:2:0","series":null,"tags":["Database"],"title":"Oracle-XMLQuery-使用教程与实例","uri":"/oracle-xmlquery-tutorial-and-instance/#query综合示例"},{"categories":["软件开发"],"content":"\rUpdate示例","date":"2022-03-04","objectID":"/oracle-xmlquery-tutorial-and-instance/:3:0","series":null,"tags":["Database"],"title":"Oracle-XMLQuery-使用教程与实例","uri":"/oracle-xmlquery-tutorial-and-instance/#update示例"},{"categories":["软件开发"],"content":"\rUpdate-node示例 UPDATE purchaseorder po SET po.OBJECT_VALUE = XMLType(bfilename('XMLDIR','NEW-DAUSTIN-20021009123335811PDT.xml'), nls_charset_id('AL32UTF8')) WHERE XMLExists('$p/PurchaseOrder[Reference=\"DAUSTIN-20021009123335811PDT\"]' PASSING po.OBJECT_VALUE AS \"p\"); --RESULT: REFERENCE LINENO DESCRIPTION -------------------------------- ------- -------------------------------- DAUSTIN-20021009123335811PDT 1 Dead Ringers DAUSTIN-20021009123335811PDT 2 Getrud DAUSTIN-20021009123335811PDT 3 Branded to Kill ","date":"2022-03-04","objectID":"/oracle-xmlquery-tutorial-and-instance/:3:1","series":null,"tags":["Database"],"title":"Oracle-XMLQuery-使用教程与实例","uri":"/oracle-xmlquery-tutorial-and-instance/#update-node示例"},{"categories":["软件开发"],"content":"\rReplace-childnode示例 UPDATE purchaseorder po SET po.OBJECT_VALUE = XMLQuery('copy $i := $p1 modify (for $j in $i/PurchaseOrder/Actions/Action[1]/User return replace value of node $j with $p2) return $i' PASSING po.OBJECT_VALUE AS \"p1\", 'SKING' AS \"p2\" RETURNING CONTENT) WHERE XMLExists('$p/PurchaseOrder[Reference=\"SBELL-2002100912333601PDT\"]' PASSING po.OBJECT_VALUE AS \"p\"); --RESULT: --------------------------------- \u003cAction\u003e \u003cUser\u003eSKING\u003c/User\u003e \u003c/Action\u003e ","date":"2022-03-04","objectID":"/oracle-xmlquery-tutorial-and-instance/:3:2","series":null,"tags":["Database"],"title":"Oracle-XMLQuery-使用教程与实例","uri":"/oracle-xmlquery-tutorial-and-instance/#replace-childnode示例"},{"categories":["软件开发"],"content":"\rUpdate-replace示例 UPDATE purchaseorder SET OBJECT_VALUE = XMLQuery( 'copy $i := $p1 modify ((for $j in $i/PurchaseOrder/Requestor return replace value of node $j with $p2), (for $j in $i/PurchaseOrder/LineItems/LineItem/Part[@Id=\"715515009058\"]/@Quantity return replace value of node $j with $p3), (for $j in $i/PurchaseOrder/LineItems/LineItem [Description/text()=\"The Unbearable Lightness Of Being\"] return replace node $j with $p4)) return $i' PASSING OBJECT_VALUE AS \"p1\", 'Stephen G. King' AS \"p2\", 25 AS \"p3\", XMLType('\u003cLineItem ItemNumber=\"99\"\u003e \u003cPart Id=\"786936150421\" Quantity=\"5\" UnitPrice=\"29.95\"/\u003e \u003cDescription\u003eThe Rock\u003c/Description\u003e \u003c/LineItem\u003e') AS \"p4\" RETURNING CONTENT) WHERE XMLExists('$p/PurchaseOrder[Reference=\"SBELL-2002100912333601PDT\"]' PASSING OBJECT_VALUE AS \"p\"); --RESULT: NAME LINEITEMS ---------------- ------------------------------------------------------------------ Stephen G. King \u003cLineItems\u003e \u003cLineItem ItemNumber=\"1\"\u003e \u003cDescription\u003eThe Rock\u003c/Description\u003e \u003cPart Id=\"786936150421\" UnitPrice=\"39.95\" Quantity=\"2\"/\u003e \u003c/LineItem\u003e \u003cLineItem ItemNumber=\"2\"\u003e \u003cDescription\u003eThe Unbearable Lightness Of Being\u003c/Description\u003e \u003cPart Id=\"37429140222\" UnitPrice=\"29.95\" Quantity=\"2\"/\u003e \u003c/LineItem\u003e \u003cLineItem ItemNumber=\"99\"\u003e \u003cDescription\u003eDead Ringers\u003c/Description\u003e \u003cPart Id=\"715515009249\" UnitPrice=\"39.95\" Quantity=\"2\"/\u003e \u003c/LineItem\u003e \u003c/LineItems\u003e ","date":"2022-03-04","objectID":"/oracle-xmlquery-tutorial-and-instance/:3:3","series":null,"tags":["Database"],"title":"Oracle-XMLQuery-使用教程与实例","uri":"/oracle-xmlquery-tutorial-and-instance/#update-replace示例"},{"categories":["软件开发"],"content":"\rUpdate-null示例 UPDATE purchaseorder SET OBJECT_VALUE = XMLQuery( 'copy $i := $p1 modify ((for $j in $i/PurchaseOrder/LineItems/LineItem[Part/@Id=\"715515009058\"]/Description return replace value of node $j with ()) , (for $j in $i/PurchaseOrder/LineItems/LineItem/Part[@Id=\"715515009058\"]/@Quantity return replace value of node $j with ()) , (for $j in $i/PurchaseOrder/LineItems/LineItem [Description/text()= \"The Unbearable Lightness Of Being\"] return replace node $j with $p2)) return $i' PASSING OBJECT_VALUE AS \"p1\", NULL AS \"p2\" RETURNING CONTENT) WHERE XMLExists('$p/PurchaseOrder[Reference=\"SBELL-2002100912333601PDT\"]' PASSING OBJECT_VALUE AS \"p\"); --RESULT: NAME LINEITEMS ---------------- ---------------------------------------------------------------- Sarah J. Bell \u003cLineItems\u003e \u003cLineItem ItemNumber=\"1\"\u003e \u003cDescription/\u003e \u003cPart Id=\"715515009058\" UnitPrice=\"39.95\" Quantity=\"\"/\u003e \u003c/LineItem\u003e \u003cLineItem/\u003e \u003cLineItem ItemNumber=\"3\"\u003e \u003cDescription\u003eSisters\u003c/Description\u003e \u003cPart Id=\"715515011020\" UnitPrice=\"29.95\" Quantity=\"4\"/\u003e \u003c/LineItem\u003e \u003c/LineItems\u003e ","date":"2022-03-04","objectID":"/oracle-xmlquery-tutorial-and-instance/:3:4","series":null,"tags":["Database"],"title":"Oracle-XMLQuery-使用教程与实例","uri":"/oracle-xmlquery-tutorial-and-instance/#update-null示例"},{"categories":["软件开发"],"content":"\rUpdate-insert-child示例 UPDATE purchaseorder SET OBJECT_VALUE = XMLQuery('copy $i := $p1 modify (for $j in $i/PurchaseOrder/LineItems return (# ora:child-element-name LineItem #) {insert node $p2 into $j}) return $i' PASSING OBJECT_VALUE AS \"p1\", XMLType('\u003cLineItem ItemNumber=\"222\"\u003e \u003cDescription\u003eThe Harder They Come\u003c/Description\u003e \u003cPart Id=\"953562951413\" UnitPrice=\"22.95\" Quantity=\"1\"/\u003e \u003c/LineItem\u003e') AS \"p2\" RETURNING CONTENT) WHERE XMLExists('$p/PurchaseOrder[Reference=\"AMCEWEN-20021009123336171PDT\"]' PASSING OBJECT_VALUE AS \"p\"); --RESULT: XMLQUERY('$P/PURCHASEORDER/LINEITEMS/LINEITEM[@ITEMNUMBER=222]' --------------------------------------------------------------- \u003cLineItem ItemNumber=\"222\"\u003e \u003cDescription\u003eThe Harder They Come\u003c/Description\u003e \u003cPart Id=\"953562951413\" UnitPrice=\"22.95\" Quantity=\"1\"/\u003e \u003c/LineItem\u003e ","date":"2022-03-04","objectID":"/oracle-xmlquery-tutorial-and-instance/:3:5","series":null,"tags":["Database"],"title":"Oracle-XMLQuery-使用教程与实例","uri":"/oracle-xmlquery-tutorial-and-instance/#update-insert-child示例"},{"categories":["软件开发"],"content":"\rUpdate-delete示例 UPDATE purchaseorder SET OBJECT_VALUE = XMLQuery('copy $i := $p modify delete nodes $i/PurchaseOrder/LineItems/LineItem[@ItemNumber=\"222\"] return $i' PASSING OBJECT_VALUE AS \"p\" RETURNING CONTENT) WHERE XMLExists('$p/PurchaseOrder[Reference=\"AMCEWEN-20021009123336171PDT\"]' PASSING OBJECT_VALUE AS \"p\"); ","date":"2022-03-04","objectID":"/oracle-xmlquery-tutorial-and-instance/:3:6","series":null,"tags":["Database"],"title":"Oracle-XMLQuery-使用教程与实例","uri":"/oracle-xmlquery-tutorial-and-instance/#update-delete示例"},{"categories":["软件开发"],"content":"\rxml-view示例 CREATE OR REPLACE VIEW purchaseorder_summary OF XMLType AS SELECT XMLQuery('copy $i := $p1 modify ((for $j in $i/PurchaseOrder/Actions return replace value of node $j with ()), (for $j in $i/PurchaseOrder/ShippingInstructions return replace value of node $j with ()), (for $j in $i/PurchaseOrder/LineItems return replace value of node $j with ())) return $i' PASSING OBJECT_VALUE AS \"p1\" RETURNING CONTENT) FROM purchaseorder p; --RESULT: --------------------------------------------------------------------------- \u003cPurchaseOrder xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation= \"http://localhost:8080/source/schemas/poSource/xsd/purchaseOrder.xsd\"\u003e \u003cReference\u003eDAUSTIN-20021009123335811PDT\u003c/Reference\u003e \u003cActions/\u003e \u003cReject/\u003e \u003cRequestor\u003eDavid L. Austin\u003c/Requestor\u003e \u003cUser\u003eDAUSTIN\u003c/User\u003e \u003cCostCenter\u003eS30\u003c/CostCenter\u003e \u003cShippingInstructions/\u003e \u003cSpecialInstructions\u003eCourier\u003c/SpecialInstructions\u003e \u003cLineItems/\u003e \u003c/PurchaseOrder\u003e ","date":"2022-03-04","objectID":"/oracle-xmlquery-tutorial-and-instance/:3:7","series":null,"tags":["Database"],"title":"Oracle-XMLQuery-使用教程与实例","uri":"/oracle-xmlquery-tutorial-and-instance/#xml-view示例"},{"categories":["软件开发"],"content":"\rSNF example --old ID = 12 --new ID = 13 --if new ID exists, just delete old ID --else replace old ID with new ID UPDATE /*+ no_xml_query_rewrite */ customer SET cocontacts= XMLQuery('copy $tmp := .modify( let $cont := $tmp/customer/contacts/contact return if(exists($cont[id=13])) then delete nodes $cont[id=12] else replace value of node $cont[id=12]/id with 13) return $tmp' passing cocontacts returning content) WHERE coid=100711 ","date":"2022-03-04","objectID":"/oracle-xmlquery-tutorial-and-instance/:3:8","series":null,"tags":["Database"],"title":"Oracle-XMLQuery-使用教程与实例","uri":"/oracle-xmlquery-tutorial-and-instance/#snf-example"},{"categories":["软件开发"],"content":"\rXML文档Oracle XML DB ","date":"2022-03-04","objectID":"/oracle-xmlquery-tutorial-and-instance/:4:0","series":null,"tags":["Database"],"title":"Oracle-XMLQuery-使用教程与实例","uri":"/oracle-xmlquery-tutorial-and-instance/#xml文档"},{"categories":["软件开发"],"content":"\r更新XML文档小节Query and Update of XML Data ","date":"2022-03-04","objectID":"/oracle-xmlquery-tutorial-and-instance/:4:1","series":null,"tags":["Database"],"title":"Oracle-XMLQuery-使用教程与实例","uri":"/oracle-xmlquery-tutorial-and-instance/#更新xml文档小节"},{"categories":["IT备忘"],"content":"unixbench成绩比较","date":"2022-03-02","objectID":"/unixbench-comparison-of-results/","series":null,"tags":["Linux"],"title":"unixbench成绩比较","uri":"/unixbench-comparison-of-results/"},{"categories":["IT备忘"],"content":"\runixbench成绩比较","date":"2022-03-02","objectID":"/unixbench-comparison-of-results/:0:0","series":null,"tags":["Linux"],"title":"unixbench成绩比较","uri":"/unixbench-comparison-of-results/#unixbench成绩比较"},{"categories":["IT备忘"],"content":"\r之前的sysbench之前搞了个sysbench，但这次的unixbench更权威。 ","date":"2022-03-02","objectID":"/unixbench-comparison-of-results/:1:0","series":null,"tags":["Linux"],"title":"unixbench成绩比较","uri":"/unixbench-comparison-of-results/#之前的sysbench"},{"categories":["IT备忘"],"content":"\r安装 wget --no-check-certificate https://github.com/teddysun/across/raw/master/unixbench.sh \u0026\u0026 \\ chmod +x unixbench.sh \u0026\u0026 \\ ./unixbench.sh ","date":"2022-03-02","objectID":"/unixbench-comparison-of-results/:2:0","series":null,"tags":["Linux"],"title":"unixbench成绩比较","uri":"/unixbench-comparison-of-results/#安装"},{"categories":["IT备忘"],"content":"\r成绩","date":"2022-03-02","objectID":"/unixbench-comparison-of-results/:3:0","series":null,"tags":["Linux"],"title":"unixbench成绩比较","uri":"/unixbench-comparison-of-results/#成绩"},{"categories":["IT备忘"],"content":"\rDedipath VPS ======================================================================== BYTE UNIX Benchmarks (Version 5.1.3) System: vps.thy.pub: GNU/Linux OS: GNU/Linux -- 4.18.0 -- #1 SMP Thu Sep 23 18:26:47 MSK 2021 Machine: x86_64 (x86_64) Language: en_US.utf8 (charmap=\"UTF-8\", collate=\"UTF-8\") CPU 0: Intel(R) Xeon(R) CPU E5-2690 0 @ 2.90GHz (5799.8 bogomips) Hyper-Threading, x86-64, MMX, Physical Address Ext, SYSENTER/SYSEXIT, SYSCALL/SYSRET, Intel virtualization 14:10:56 up 20 days, 20:23, 1 user, load average: 1.32, 0.38, 0.16; runlevel 5 ------------------------------------------------------------------------ Benchmark Run: Wed Mar 02 2022 14:10:56 - 14:39:07 1 CPU in system; running 1 parallel copy of tests Dhrystone 2 using register variables 25457490.5 lps (10.0 s, 7 samples) Double-Precision Whetstone 4476.9 MWIPS (9.4 s, 7 samples) Execl Throughput 2155.3 lps (29.5 s, 2 samples) File Copy 1024 bufsize 2000 maxblocks 311398.6 KBps (30.0 s, 2 samples) File Copy 256 bufsize 500 maxblocks 75549.5 KBps (30.0 s, 2 samples) File Copy 4096 bufsize 8000 maxblocks 792098.7 KBps (30.0 s, 2 samples) Pipe Throughput 479444.2 lps (10.0 s, 7 samples) Pipe-based Context Switching 101346.2 lps (10.0 s, 7 samples) Process Creation 5109.6 lps (30.0 s, 2 samples) Shell Scripts (1 concurrent) 2770.4 lpm (60.0 s, 2 samples) Shell Scripts (8 concurrent) 405.2 lpm (60.1 s, 2 samples) System Call Overhead 323153.8 lps (10.0 s, 7 samples) System Benchmarks Index Values BASELINE RESULT INDEX Dhrystone 2 using register variables 116700.0 25457490.5 2181.4 Double-Precision Whetstone 55.0 4476.9 814.0 Execl Throughput 43.0 2155.3 501.2 File Copy 1024 bufsize 2000 maxblocks 3960.0 311398.6 786.4 File Copy 256 bufsize 500 maxblocks 1655.0 75549.5 456.5 File Copy 4096 bufsize 8000 maxblocks 5800.0 792098.7 1365.7 Pipe Throughput 12440.0 479444.2 385.4 Pipe-based Context Switching 4000.0 101346.2 253.4 Process Creation 126.0 5109.6 405.5 Shell Scripts (1 concurrent) 42.4 2770.4 653.4 Shell Scripts (8 concurrent) 6.0 405.2 675.3 System Call Overhead 15000.0 323153.8 215.4 ======== System Benchmarks Index Score 586.1 ","date":"2022-03-02","objectID":"/unixbench-comparison-of-results/:3:1","series":null,"tags":["Linux"],"title":"unixbench成绩比较","uri":"/unixbench-comparison-of-results/#dedipath-vps"},{"categories":["IT备忘"],"content":"\rHome PVE ======================================================================== BYTE UNIX Benchmarks (Version 5.1.3) System: builder: GNU/Linux OS: GNU/Linux -- 4.19.0-18-amd64 -- #1 SMP Debian 4.19.208-1 (2021-09-29) Machine: x86_64 (unknown) Language: en_US.utf8 (charmap=\"ANSI_X3.4-1968\", collate=\"ANSI_X3.4-1968\") CPU 0: Intel(R) Xeon(R) CPU E3-1220L V2 @ 2.30GHz (4589.6 bogomips) Hyper-Threading, x86-64, MMX, Physical Address Ext, SYSENTER/SYSEXIT, SYSCALL/SYSRET, Intel virtualization CPU 1: Intel(R) Xeon(R) CPU E3-1220L V2 @ 2.30GHz (4589.6 bogomips) Hyper-Threading, x86-64, MMX, Physical Address Ext, SYSENTER/SYSEXIT, SYSCALL/SYSRET, Intel virtualization CPU 2: Intel(R) Xeon(R) CPU E3-1220L V2 @ 2.30GHz (4589.6 bogomips) Hyper-Threading, x86-64, MMX, Physical Address Ext, SYSENTER/SYSEXIT, SYSCALL/SYSRET, Intel virtualization 15:00:01 up 6 days, 17:05, 1 user, load average: 0.42, 0.11, 0.03; runlevel 5 ------------------------------------------------------------------------ Benchmark Run: 三 3月 02 2022 15:00:01 - 15:28:13 3 CPUs in system; running 1 parallel copy of tests Dhrystone 2 using register variables 34230248.6 lps (10.0 s, 7 samples) Double-Precision Whetstone 5407.5 MWIPS (9.3 s, 7 samples) Execl Throughput 2828.1 lps (29.9 s, 2 samples) File Copy 1024 bufsize 2000 maxblocks 381785.8 KBps (30.0 s, 2 samples) File Copy 256 bufsize 500 maxblocks 110672.5 KBps (30.0 s, 2 samples) File Copy 4096 bufsize 8000 maxblocks 1149703.1 KBps (30.0 s, 2 samples) Pipe Throughput 622884.6 lps (10.0 s, 7 samples) Pipe-based Context Switching 116208.5 lps (10.0 s, 7 samples) Process Creation 4934.0 lps (30.0 s, 2 samples) Shell Scripts (1 concurrent) 6292.5 lpm (60.0 s, 2 samples) Shell Scripts (8 concurrent) 1164.1 lpm (60.0 s, 2 samples) System Call Overhead 417007.3 lps (10.0 s, 7 samples) System Benchmarks Index Values BASELINE RESULT INDEX Dhrystone 2 using register variables 116700.0 34230248.6 2933.2 Double-Precision Whetstone 55.0 5407.5 983.2 Execl Throughput 43.0 2828.1 657.7 File Copy 1024 bufsize 2000 maxblocks 3960.0 381785.8 964.1 File Copy 256 bufsize 500 maxblocks 1655.0 110672.5 668.7 File Copy 4096 bufsize 8000 maxblocks 5800.0 1149703.1 1982.2 Pipe Throughput 12440.0 622884.6 500.7 Pipe-based Context Switching 4000.0 116208.5 290.5 Process Creation 126.0 4934.0 391.6 Shell Scripts (1 concurrent) 42.4 6292.5 1484.1 Shell Scripts (8 concurrent) 6.0 1164.1 1940.2 System Call Overhead 15000.0 417007.3 278.0 ======== System Benchmarks Index Score 832.3 ","date":"2022-03-02","objectID":"/unixbench-comparison-of-results/:3:2","series":null,"tags":["Linux"],"title":"unixbench成绩比较","uri":"/unixbench-comparison-of-results/#home-pve"},{"categories":["IT备忘"],"content":"\r淘权阿里云 ======================================================================== BYTE UNIX Benchmarks (Version 5.1.3) System: iZ23tmdyjmaZ: GNU/Linux OS: GNU/Linux -- 3.10.0-327.4.4.el7.x86_64 -- #1 SMP Tue Jan 5 16:07:00 UTC 2016 Machine: x86_64 (x86_64) Language: en_US.utf8 (charmap=\"UTF-8\", collate=\"UTF-8\") CPU 0: Intel(R) Xeon(R) CPU E5-2680 v3 @ 2.50GHz (4988.4 bogomips) Hyper-Threading, x86-64, MMX, Physical Address Ext, SYSENTER/SYSEXIT, SYSCALL/SYSRET CPU 1: Intel(R) Xeon(R) CPU E5-2680 v3 @ 2.50GHz (4988.4 bogomips) Hyper-Threading, x86-64, MMX, Physical Address Ext, SYSENTER/SYSEXIT, SYSCALL/SYSRET 15:11:08 up 156 days, 16:15, 1 user, load average: 0.81, 0.30, 0.20; runlevel 3 ------------------------------------------------------------------------ Benchmark Run: Wed Mar 02 2022 15:11:08 - 15:39:27 2 CPUs in system; running 1 parallel copy of tests Dhrystone 2 using register variables 28240014.3 lps (10.0 s, 7 samples) Double-Precision Whetstone 3613.6 MWIPS (9.8 s, 7 samples) Execl Throughput 2543.7 lps (29.9 s, 2 samples) File Copy 1024 bufsize 2000 maxblocks 833842.9 KBps (30.0 s, 2 samples) File Copy 256 bufsize 500 maxblocks 235774.5 KBps (30.0 s, 2 samples) File Copy 4096 bufsize 8000 maxblocks 1771595.4 KBps (30.0 s, 2 samples) Pipe Throughput 1610291.4 lps (10.0 s, 7 samples) Pipe-based Context Switching 52808.8 lps (10.0 s, 7 samples) Process Creation 6655.8 lps (30.0 s, 2 samples) Shell Scripts (1 concurrent) 5114.3 lpm (60.0 s, 2 samples) Shell Scripts (8 concurrent) 1130.4 lpm (60.0 s, 2 samples) System Call Overhead 3044233.4 lps (10.0 s, 7 samples) System Benchmarks Index Values BASELINE RESULT INDEX Dhrystone 2 using register variables 116700.0 28240014.3 2419.9 Double-Precision Whetstone 55.0 3613.6 657.0 Execl Throughput 43.0 2543.7 591.6 File Copy 1024 bufsize 2000 maxblocks 3960.0 833842.9 2105.7 File Copy 256 bufsize 500 maxblocks 1655.0 235774.5 1424.6 File Copy 4096 bufsize 8000 maxblocks 5800.0 1771595.4 3054.5 Pipe Throughput 12440.0 1610291.4 1294.4 Pipe-based Context Switching 4000.0 52808.8 132.0 Process Creation 126.0 6655.8 528.2 Shell Scripts (1 concurrent) 42.4 5114.3 1206.2 Shell Scripts (8 concurrent) 6.0 1130.4 1884.0 System Call Overhead 15000.0 3044233.4 2029.5 ======== System Benchmarks Index Score 1112.3 ","date":"2022-03-02","objectID":"/unixbench-comparison-of-results/:3:3","series":null,"tags":["Linux"],"title":"unixbench成绩比较","uri":"/unixbench-comparison-of-results/#淘权阿里云"},{"categories":["IT备忘"],"content":"\r淘权测试机 ======================================================================== BYTE UNIX Benchmarks (Version 5.1.3) System: iZ23tmdyjmaZ: GNU/Linux OS: GNU/Linux -- 3.10.0-327.4.4.el7.x86_64 -- #1 SMP Tue Jan 5 16:07:00 UTC 2016 Machine: x86_64 (x86_64) Language: en_US.utf8 (charmap=\"UTF-8\", collate=\"UTF-8\") CPU 0: Intel(R) Xeon(R) CPU E5-2680 v3 @ 2.50GHz (4988.4 bogomips) Hyper-Threading, x86-64, MMX, Physical Address Ext, SYSENTER/SYSEXIT, SYSCALL/SYSRET CPU 1: Intel(R) Xeon(R) CPU E5-2680 v3 @ 2.50GHz (4988.4 bogomips) Hyper-Threading, x86-64, MMX, Physical Address Ext, SYSENTER/SYSEXIT, SYSCALL/SYSRET 15:11:08 up 156 days, 16:15, 1 user, load average: 0.81, 0.30, 0.20; runlevel 3 ------------------------------------------------------------------------ Benchmark Run: Wed Mar 02 2022 15:11:08 - 15:39:27 2 CPUs in system; running 1 parallel copy of tests Dhrystone 2 using register variables 28240014.3 lps (10.0 s, 7 samples) Double-Precision Whetstone 3613.6 MWIPS (9.8 s, 7 samples) Execl Throughput 2543.7 lps (29.9 s, 2 samples) File Copy 1024 bufsize 2000 maxblocks 833842.9 KBps (30.0 s, 2 samples) File Copy 256 bufsize 500 maxblocks 235774.5 KBps (30.0 s, 2 samples) File Copy 4096 bufsize 8000 maxblocks 1771595.4 KBps (30.0 s, 2 samples) Pipe Throughput 1610291.4 lps (10.0 s, 7 samples) Pipe-based Context Switching 52808.8 lps (10.0 s, 7 samples) Process Creation 6655.8 lps (30.0 s, 2 samples) Shell Scripts (1 concurrent) 5114.3 lpm (60.0 s, 2 samples) Shell Scripts (8 concurrent) 1130.4 lpm (60.0 s, 2 samples) System Call Overhead 3044233.4 lps (10.0 s, 7 samples) System Benchmarks Index Values BASELINE RESULT INDEX Dhrystone 2 using register variables 116700.0 28240014.3 2419.9 Double-Precision Whetstone 55.0 3613.6 657.0 Execl Throughput 43.0 2543.7 591.6 File Copy 1024 bufsize 2000 maxblocks 3960.0 833842.9 2105.7 File Copy 256 bufsize 500 maxblocks 1655.0 235774.5 1424.6 File Copy 4096 bufsize 8000 maxblocks 5800.0 1771595.4 3054.5 Pipe Throughput 12440.0 1610291.4 1294.4 Pipe-based Context Switching 4000.0 52808.8 132.0 Process Creation 126.0 6655.8 528.2 Shell Scripts (1 concurrent) 42.4 5114.3 1206.2 Shell Scripts (8 concurrent) 6.0 1130.4 1884.0 System Call Overhead 15000.0 3044233.4 2029.5 ======== System Benchmarks Index Score 1112.3 ","date":"2022-03-02","objectID":"/unixbench-comparison-of-results/:3:4","series":null,"tags":["Linux"],"title":"unixbench成绩比较","uri":"/unixbench-comparison-of-results/#淘权测试机"},{"categories":["IT备忘"],"content":"\rSNF WSL ======================================================================== BYTE UNIX Benchmarks (Version 5.1.3) System: Platform6Table: GNU/Linux OS: GNU/Linux -- 4.4.0-17763-Microsoft -- #2268-Microsoft Thu Oct 07 16:36:00 PST 2021 Machine: x86_64 (x86_64) Language: en_US.utf8 (charmap=\"UTF-8\", collate=\"UTF-8\") CPU 0: Intel(R) Xeon(R) CPU E5-2670 v3 @ 2.30GHz (4600.0 bogomips) x86-64, MMX, Physical Address Ext, SYSENTER/SYSEXIT, SYSCALL/SYSRET CPU 1: Intel(R) Xeon(R) CPU E5-2670 v3 @ 2.30GHz (4600.0 bogomips) x86-64, MMX, Physical Address Ext, SYSENTER/SYSEXIT, SYSCALL/SYSRET CPU 2: Intel(R) Xeon(R) CPU E5-2670 v3 @ 2.30GHz (4600.0 bogomips) x86-64, MMX, Physical Address Ext, SYSENTER/SYSEXIT, SYSCALL/SYSRET CPU 3: Intel(R) Xeon(R) CPU E5-2670 v3 @ 2.30GHz (4600.0 bogomips) x86-64, MMX, Physical Address Ext, SYSENTER/SYSEXIT, SYSCALL/SYSRET 15:37:09 up 20 min, 0 users, load average: 0.52, 0.58, 0.59; runlevel unknown ------------------------------------------------------------------------ Benchmark Run: Wed Mar 02 2022 15:37:09 - 16:05:24 4 CPUs in system; running 1 parallel copy of tests Dhrystone 2 using register variables 31052445.8 lps (10.0 s, 7 samples) Double-Precision Whetstone 4885.2 MWIPS (10.0 s, 7 samples) Execl Throughput 63.2 lps (29.8 s, 2 samples) File Copy 1024 bufsize 2000 maxblocks 75958.7 KBps (30.0 s, 2 samples) File Copy 256 bufsize 500 maxblocks 19633.3 KBps (30.0 s, 2 samples) File Copy 4096 bufsize 8000 maxblocks 238206.6 KBps (30.0 s, 2 samples) Pipe Throughput 204263.4 lps (10.0 s, 7 samples) Pipe-based Context Switching 30872.5 lps (10.0 s, 7 samples) Process Creation 469.0 lps (30.0 s, 2 samples) Shell Scripts (1 concurrent) 466.8 lpm (60.1 s, 2 samples) Shell Scripts (8 concurrent) 109.9 lpm (60.3 s, 2 samples) System Call Overhead 218817.0 lps (10.0 s, 7 samples) System Benchmarks Index Values BASELINE RESULT INDEX Dhrystone 2 using register variables 116700.0 31052445.8 2660.9 Double-Precision Whetstone 55.0 4885.2 888.2 Execl Throughput 43.0 63.2 14.7 File Copy 1024 bufsize 2000 maxblocks 3960.0 75958.7 191.8 File Copy 256 bufsize 500 maxblocks 1655.0 19633.3 118.6 File Copy 4096 bufsize 8000 maxblocks 5800.0 238206.6 410.7 Pipe Throughput 12440.0 204263.4 164.2 Pipe-based Context Switching 4000.0 30872.5 77.2 Process Creation 126.0 469.0 37.2 Shell Scripts (1 concurrent) 42.4 466.8 110.1 Shell Scripts (8 concurrent) 6.0 109.9 183.2 System Call Overhead 15000.0 218817.0 145.9 ======== System Benchmarks Index Score 166.4 ","date":"2022-03-02","objectID":"/unixbench-comparison-of-results/:3:5","series":null,"tags":["Linux"],"title":"unixbench成绩比较","uri":"/unixbench-comparison-of-results/#snf-wsl"},{"categories":["IT备忘"],"content":"ubuntu改变触摸板滚动方向","date":"2022-02-24","objectID":"/ubuntu-change-the-scroll-direction-of-the-touchpad/","series":null,"tags":["Linux"],"title":"ubuntu改变触摸板滚动方向","uri":"/ubuntu-change-the-scroll-direction-of-the-touchpad/"},{"categories":["IT备忘"],"content":"\rubuntu改变触摸板滚动方向","date":"2022-02-24","objectID":"/ubuntu-change-the-scroll-direction-of-the-touchpad/:0:0","series":null,"tags":["Linux"],"title":"ubuntu改变触摸板滚动方向","uri":"/ubuntu-change-the-scroll-direction-of-the-touchpad/#ubuntu改变触摸板滚动方向"},{"categories":["IT备忘"],"content":"\r这是在优麒麟中的经验，ubuntu一样","date":"2022-02-24","objectID":"/ubuntu-change-the-scroll-direction-of-the-touchpad/:1:0","series":null,"tags":["Linux"],"title":"ubuntu改变触摸板滚动方向","uri":"/ubuntu-change-the-scroll-direction-of-the-touchpad/#这是在优麒麟中的经验ubuntu一样"},{"categories":["IT备忘"],"content":"\r优麒麟安装完之后，改变触摸板双指的滚动方向和Windows是相反的","date":"2022-02-24","objectID":"/ubuntu-change-the-scroll-direction-of-the-touchpad/:2:0","series":null,"tags":["Linux"],"title":"ubuntu改变触摸板滚动方向","uri":"/ubuntu-change-the-scroll-direction-of-the-touchpad/#优麒麟安装完之后改变触摸板双指的滚动方向和windows是相反的"},{"categories":["IT备忘"],"content":"\r用dconf-editor修改","date":"2022-02-24","objectID":"/ubuntu-change-the-scroll-direction-of-the-touchpad/:3:0","series":null,"tags":["Linux"],"title":"ubuntu改变触摸板滚动方向","uri":"/ubuntu-change-the-scroll-direction-of-the-touchpad/#用dconf-editor修改"},{"categories":["IT备忘"],"content":"\r安装 sudo apt install dconf-editor ","date":"2022-02-24","objectID":"/ubuntu-change-the-scroll-direction-of-the-touchpad/:3:1","series":null,"tags":["Linux"],"title":"ubuntu改变触摸板滚动方向","uri":"/ubuntu-change-the-scroll-direction-of-the-touchpad/#安装"},{"categories":["IT备忘"],"content":"\r设置搜索 natual scroll，然后修改ukui下的对应项为True。 ","date":"2022-02-24","objectID":"/ubuntu-change-the-scroll-direction-of-the-touchpad/:3:2","series":null,"tags":["Linux"],"title":"ubuntu改变触摸板滚动方向","uri":"/ubuntu-change-the-scroll-direction-of-the-touchpad/#设置"},{"categories":["IT备忘"],"content":"Vagrant使用samba共享文件夹","date":"2022-02-17","objectID":"/vagrant-use-samba-share-folder/","series":null,"tags":["Windows","vagrant"],"title":"Vagrant使用samba共享文件夹","uri":"/vagrant-use-samba-share-folder/"},{"categories":["IT备忘"],"content":"\rVagrant使用samba共享文件夹","date":"2022-02-17","objectID":"/vagrant-use-samba-share-folder/:0:0","series":null,"tags":["Windows","vagrant"],"title":"Vagrant使用samba共享文件夹","uri":"/vagrant-use-samba-share-folder/#vagrant使用samba共享文件夹"},{"categories":["IT备忘"],"content":"\r在windows下使用Vagrant时可以使用samba方式共享文件夹。配置如下： config.vm.synced_folder \"./\", \"/path/to/web/root\", type: \"smb\", smb_username: \"user\", smb_password: \"pass\", owner: \"www\", group: \"www\", mount_options: [\"dmode=775,fmode=664\"] ","date":"2022-02-17","objectID":"/vagrant-use-samba-share-folder/:1:0","series":null,"tags":["Windows","vagrant"],"title":"Vagrant使用samba共享文件夹","uri":"/vagrant-use-samba-share-folder/#在windows下使用vagrant时可以使用samba方式共享文件夹"},{"categories":["IT备忘"],"content":"\r解决长时间没有操作时虚拟机内的共享文件夹不能访问： 打开“本地组策略编辑器”，找到 计算机配置-\u003e安全设置-\u003e本地策略-\u003e安全选项 然后在右侧找到“Microsoft 网络服务器: 暂停会话前所需的空闲时间量”，将时间改为99999分钟。 ","date":"2022-02-17","objectID":"/vagrant-use-samba-share-folder/:2:0","series":null,"tags":["Windows","vagrant"],"title":"Vagrant使用samba共享文件夹","uri":"/vagrant-use-samba-share-folder/#解决长时间没有操作时虚拟机内的共享文件夹不能访问"},{"categories":["IT备忘"],"content":"hugo和vscode结合写博客","date":"2022-02-15","objectID":"/combine-hugo-with-vscode/","series":null,"tags":["hugo","git"],"title":"hugo和vscode结合写博客","uri":"/combine-hugo-with-vscode/"},{"categories":["IT备忘"],"content":"\rhugo和vscode结合写博客","date":"2022-02-15","objectID":"/combine-hugo-with-vscode/:0:0","series":null,"tags":["hugo","git"],"title":"hugo和vscode结合写博客","uri":"/combine-hugo-with-vscode/#hugo和vscode结合写博客"},{"categories":["IT备忘"],"content":"\r博客的事情说来话长","date":"2022-02-15","objectID":"/combine-hugo-with-vscode/:1:0","series":null,"tags":["hugo","git"],"title":"hugo和vscode结合写博客","uri":"/combine-hugo-with-vscode/#博客的事情说来话长"},{"categories":["IT备忘"],"content":"\r其实我挺懒的，可活久了总有些东西要记下来，大致经历了这些过程 Everest，用了挺久的时间，挺好用的，尤其是Web Clip插件好用，唯一的缺陷就是app太臃肿。不过后来它收费了，我就不用了。 有道，之后盯上了免费的有道，都忘了当时怎么迁移文章的了，当文章迁移结束后才发现有道的导出就是个坑，于是打算整个基于文件的记录系统，博客不博客无所谓，首选markdown vscode，选了很多写markdown之后发现vscode自带的就挺好用，支持预览，我又用gitea自建了一个git系统，支持markdown在网页直接当预览效果。不用github是因为图片等资源有时候会被挡住。 hugo，程序员最能折腾了，在gitea中访问博客太土了，于是找这个表态网站生成器，希望一直这么用下去 ","date":"2022-02-15","objectID":"/combine-hugo-with-vscode/:1:1","series":null,"tags":["hugo","git"],"title":"hugo和vscode结合写博客","uri":"/combine-hugo-with-vscode/#其实我挺懒的可活久了总有些东西要记下来大致经历了这些过程"},{"categories":["IT备忘"],"content":"\r世事难两全，hugo \u003c-\u003e vscode参考链接： render hook ","date":"2022-02-15","objectID":"/combine-hugo-with-vscode/:2:0","series":null,"tags":["hugo","git"],"title":"hugo和vscode结合写博客","uri":"/combine-hugo-with-vscode/#世事难两全hugo---vscode"},{"categories":["IT备忘"],"content":"\rhugo的图片url地址 我在vscode中写markdown时喜欢在当前目录下建一个目录img，然后将文件放在其中 project │ sample.md └───img │ │ sample.png 然后我就可以在文章中加入 ![sample](img/sample.png) ，这样就可以在预览中实时看到图片。 但是hugo生成的图片url却是这样的 \u003cimg src=\"img/sample.png\"\u003e, 这就导致绝对url为 https://\u003cdomain\u003e/sample/img/sample.png，而这是无法访问的 解决办法 好在hugo提供了一些hook来支持自定义生成方式，但还是要稍微写点脚本。 ","date":"2022-02-15","objectID":"/combine-hugo-with-vscode/:2:1","series":null,"tags":["hugo","git"],"title":"hugo和vscode结合写博客","uri":"/combine-hugo-with-vscode/#hugo的图片url地址"},{"categories":["IT备忘"],"content":"\rhugo的render hook render-image 在 \u003cproject\u003e\\layouts\\_default\\_markup目录中新建render-image.html，在其中加上 \u003cp class=\"md__image\"\u003e \u003cimg src='{{ replace .Destination \"img/\" \"/images/\" | safeURL }}' alt=\"{{ .Text }}\" {{ with .Title}} title=\"{{ . }}\"{{ end }} /\u003e \u003c/p\u003e 意思就是将生成的img的url中的 img/ 替换成 /images/，后面我们会将图片放到这里。 批处理 因为穷，所以用了公司的笔记本写东西，因此这里是windows的批处理，其它系统的自行搞一个吧，其实bash更简单 @ECHO OFF set proj= cd %proj% # 删除上次生成的public文件 rd public /s /q # 重新生成 hugo -D=false # 复制img下的图片到images下 cd content for /R %%x in (img\\*) do copy \"%%x\" \"..\\public\\images\\\" ","date":"2022-02-15","objectID":"/combine-hugo-with-vscode/:2:2","series":null,"tags":["hugo","git"],"title":"hugo和vscode结合写博客","uri":"/combine-hugo-with-vscode/#hugo的render-hook"},{"categories":["IT备忘"],"content":"\r更新2024-09-15，现在已经改成在linux下定时任务，从gitee拉取，如果有更新就用hugo编译html，并发布到github pages。 部署，完成 ","date":"2022-02-15","objectID":"/combine-hugo-with-vscode/:2:3","series":null,"tags":["hugo","git"],"title":"hugo和vscode结合写博客","uri":"/combine-hugo-with-vscode/#更新2024-09-15现在已经改成在linux下定时任务从gitee拉取如果有更新就用hugo编译html并发布到github-pages"},{"categories":["IT备忘"],"content":"\rhugo的引用链接地址 render-link 文章之间难免有相互引用，之前我的文章名都是用中文名来命名的，比如我在ref.md文章中引用了 [示例](示例.md)，这样在vscode中点击就能跳转到相应文章，gitea也支持这种格式。 但到了hugo中生成的url就成了\u003ca href=\"示例.md\"\u003e示例\u003c/a\u003e，这根本没法跳转了。因为实际上是https://\u003cdomain\u003e/ref/示例.md 而且由于要对url友好，我将链接修改成了 :slug 而不是 :file ，这样hugo就更找不到地址了。 方法还是用hugo的hook，解决方案是在markdown的link之后加上引用文章的slug作为title ：[示例](示例.md \"sample\") 在 \u003cproject\u003e\\layouts\\_default\\_markup目录中新建render-link.html，在其中加上 \u003ca href='{{ if strings.HasSuffix .Destination \".md\" }} /{{ .Title | safeURL }} {{ else }} {{ .Destination | safeURL }} {{ end }}' {{ if strings.HasPrefix .Destination \"https\" }} target=\"_blank\" rel=\"noopener\"{{ end }}\u003e{{ .Text | safeHTML }}\u003c/a\u003e 意思就是 - 如果是md结尾的目的文件，则用记录在Title中的slug生成相对链接 - 否则直接用链接 这样hugo中生成的url就成了\u003ca href=\"/sample\"\u003e示例\u003c/a\u003e，绝对url是https://\u003cdomain\u003e/sample ","date":"2022-02-15","objectID":"/combine-hugo-with-vscode/:2:4","series":null,"tags":["hugo","git"],"title":"hugo和vscode结合写博客","uri":"/combine-hugo-with-vscode/#hugo的引用链接地址"},{"categories":["IT备忘"],"content":"\r不够完美之处这样会带来两个小小的麻烦 部署之前要运行刚才的脚本，不过我整个部署都是写在一个脚本中，所以这不是问题 引用链接中要加上slug作为Title，这个嘛习惯就好。 ","date":"2022-02-15","objectID":"/combine-hugo-with-vscode/:3:0","series":null,"tags":["hugo","git"],"title":"hugo和vscode结合写博客","uri":"/combine-hugo-with-vscode/#不够完美之处"},{"categories":["IT备忘"],"content":"\rvscode的snippet尽管hugo new可以用预设的模板生成front matter，但还是习惯用vscode，何况还有那么多的旧文件，于是自建了一个片段： { \"Blog post frontmatter\": { \"prefix\": \"fmc\", \"description\": \"Creates frontmatter for Hugo articles\", \"body\": [ \"---\", \"title: ${TM_FILENAME_BASE}\", \"description: ${TM_FILENAME_BASE}\", \"author: chariothy\", \"draft: false\", \"date: ${2:${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE}T${CURRENT_HOUR}:${CURRENT_MINUTE}:${CURRENT_SECOND}+0800}\", \"categories:\", \"- ${3:${TM_DIRECTORY/^.+\\\\\\\\(.*)\\\\\\\\(.*)$/$1-$2/}}\", \"tags:\", \"- ${4}\", \"keywords:\", \"- ${5}\", \"slug: ${6}\", \"---\", \"# ${TM_FILENAME_BASE}\", \"$0\" ] } } 对本文就会生成： --- title: hugo和vscode结合写博客 description: hugo和vscode结合写博客 author: chariothy draft: false date: 2022-02-15T18:45:16+0800 categories: - IT备忘 tags: - hugo - git keywords: - blog - hugo - vscode - markdown slug: combine-hugo-with-vscode --- # hugo和vscode结合写博客 这样hugo和vscode就相安无事了，用vscode来写作，用hugo来生成。 您要是有更好的想法请一定要留言哦！ ","date":"2022-02-15","objectID":"/combine-hugo-with-vscode/:4:0","series":null,"tags":["hugo","git"],"title":"hugo和vscode结合写博客","uri":"/combine-hugo-with-vscode/#vscode的snippet"},{"categories":["IT备忘"],"content":"Debian最小化安装新系统配置","date":"2022-01-15","objectID":"/config-debain-from-minimal/","series":null,"tags":["Linux","debian"],"title":"Debian最小化安装新系统配置","uri":"/config-debain-from-minimal/"},{"categories":["IT备忘"],"content":"\rDebian最小化安装新系统配置","date":"2022-01-15","objectID":"/config-debain-from-minimal/:0:0","series":null,"tags":["Linux","debian"],"title":"Debian最小化安装新系统配置","uri":"/config-debain-from-minimal/#debian最小化安装新系统配置"},{"categories":["IT备忘"],"content":"\r（以debian 12为例）su root ","date":"2022-01-15","objectID":"/config-debain-from-minimal/:1:0","series":null,"tags":["Linux","debian"],"title":"Debian最小化安装新系统配置","uri":"/config-debain-from-minimal/#以debian-12为例"},{"categories":["IT备忘"],"content":"\r替换源 cd /etc/apt mv sources.list sources.list.bak cat \u003e sources.list \u003c\u003cEOF deb https://mirrors.ustc.edu.cn/debian/ bookworm main contrib non-free non-free-firmware deb-src https://mirrors.ustc.edu.cn/debian/ bookworm main contrib non-free non-free-firmware deb https://mirrors.ustc.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware deb-src https://mirrors.ustc.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware deb https://mirrors.ustc.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware deb-src https://mirrors.ustc.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware deb https://mirrors.ustc.edu.cn/debian-security/ bookworm-security main contrib non-free non-free-firmware deb-src https://mirrors.ustc.edu.cn/debian-security/ bookworm-security main contrib non-free non-free-firmware EOF apt update apt upgrade ","date":"2022-01-15","objectID":"/config-debain-from-minimal/:2:0","series":null,"tags":["Linux","debian"],"title":"Debian最小化安装新系统配置","uri":"/config-debain-from-minimal/#替换源"},{"categories":["IT备忘"],"content":"\r安装sudo，新增用户、权限 apt install sudo adduser henry nano /etc/sudoers # henry ALL=(ALL:ALL) ALL passwd password su henry ","date":"2022-01-15","objectID":"/config-debain-from-minimal/:3:0","series":null,"tags":["Linux","debian"],"title":"Debian最小化安装新系统配置","uri":"/config-debain-from-minimal/#安装sudo新增用户权限"},{"categories":["IT备忘"],"content":"\rtty支持中文（可选） sudo apt-get install zhcon sudo adduser $(whoami) video echo \"alias zh='zhcon --utf8'\" \u003e\u003e ~/.bashrc touch .bash_profile ","date":"2022-01-15","objectID":"/config-debain-from-minimal/:4:0","series":null,"tags":["Linux","debian"],"title":"Debian最小化安装新系统配置","uri":"/config-debain-from-minimal/#tty支持中文可选"},{"categories":["IT备忘"],"content":"\r安装tmux git clone https://github.com/tmux/tmux.git cd tmux sh autogen.sh ./configure \u0026\u0026 make sudo make install ","date":"2022-01-15","objectID":"/config-debain-from-minimal/:5:0","series":null,"tags":["Linux","debian"],"title":"Debian最小化安装新系统配置","uri":"/config-debain-from-minimal/#安装tmux"},{"categories":["IT备忘"],"content":"\rtmux设置见《tmux配置》touch ~/.tmux.conf source ~/.tmux.conf ","date":"2022-01-15","objectID":"/config-debain-from-minimal/:5:1","series":null,"tags":["Linux","debian"],"title":"Debian最小化安装新系统配置","uri":"/config-debain-from-minimal/#tmux设置见tmux配置tmux配置md-tmux-config-remark"},{"categories":["IT备忘"],"content":"\r安装zsh sudo apt-get install qemu-guest-agent git curl zsh automake autoconf pkg-config gcc libevent-dev ncurses-dev make byacc bsd-mailx libnss3-tools -y sh -c \"$(wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)\" ","date":"2022-01-15","objectID":"/config-debain-from-minimal/:6:0","series":null,"tags":["Linux","debian"],"title":"Debian最小化安装新系统配置","uri":"/config-debain-from-minimal/#安装zsh"},{"categories":["IT备忘"],"content":"\rzsh设置见《zsh配置》source ~/.zshrc ","date":"2022-01-15","objectID":"/config-debain-from-minimal/:6:1","series":null,"tags":["Linux","debian"],"title":"Debian最小化安装新系统配置","uri":"/config-debain-from-minimal/#zsh设置见zsh配置zsh配置md-zsh-config-remark"},{"categories":["IT备忘"],"content":"\rrsync sudo apt install rsync sudo cp /usr/share/doc/rsync/examples/rsyncd.conf /etc/ sudo nano /etc/rsyncd.conf # 修改以下： # [website] # path = /www/website # read only = no # uid = henry # gid = henry # 添加以下：（否则从windows同步过去权限会变为000） # incoming chmod = Du=rwx,Dog=rx,Fu=rwx,Fgo=rx sudo systemctl start rsync ","date":"2022-01-15","objectID":"/config-debain-from-minimal/:7:0","series":null,"tags":["Linux","debian"],"title":"Debian最小化安装新系统配置","uri":"/config-debain-from-minimal/#rsync"},{"categories":["IT备忘"],"content":"\rPVE中xterm.js","date":"2022-01-15","objectID":"/config-debain-from-minimal/:8:0","series":null,"tags":["Linux","debian"],"title":"Debian最小化安装新系统配置","uri":"/config-debain-from-minimal/#pve中xtermjs"},{"categories":["IT备忘"],"content":"\r在硬件中添加串口0 in /etc/default/grub change the GRUB_CMDLINE_LINUX parameter to GRUB_CMDLINE_LINUX=“quiet console=tty0 console=ttyS0,115200” ","date":"2022-01-15","objectID":"/config-debain-from-minimal/:8:1","series":null,"tags":["Linux","debian"],"title":"Debian最小化安装新系统配置","uri":"/config-debain-from-minimal/#在硬件中添加串口0"},{"categories":["IT备忘"],"content":"\r然后运行update-grub ","date":"2022-01-15","objectID":"/config-debain-from-minimal/:8:2","series":null,"tags":["Linux","debian"],"title":"Debian最小化安装新系统配置","uri":"/config-debain-from-minimal/#然后运行"},{"categories":["IT备忘"],"content":"\rPVE reboot这台虚拟机","date":"2022-01-15","objectID":"/config-debain-from-minimal/:8:3","series":null,"tags":["Linux","debian"],"title":"Debian最小化安装新系统配置","uri":"/config-debain-from-minimal/#pve-reboot这台虚拟机"},{"categories":["IT备忘"],"content":"\r配置exim smtpdpkg-reconfigure exim4-config 选择\"mail sent by smarthost; received via SMTP or fetchmail\"选项； 将\"System mail name:“设置为“localhost”； 设置\"IP-addresses to listen on for incoming SMTP connections\"为\"127.0.0.1\"来拒绝外部的连接； 不要填写\"Other destinations for which mail is accepted:“选项，值留空； 也不要\"Machines to relay mail for:“选项，值留空； 设置\"IP address or host name of the outgoing smarthost:“的值为\"smtp.163.com:25”； 设置\"Hide local mail name in outgoing mail?“的值为“NO\"选项； 设置\"Keep number of DNS-queries minimal (Dial-on-Demand)?“的值为”NO“选项； 设置\"Delivery method for local mail\"的值为\"mbox format in /var/mail/“选项； 设置\"Split configuration into small files?“的值为\"YES\"选项； 设置”Root and postmaster mail recipient:“的值为空，不需要填写； ","date":"2022-01-15","objectID":"/config-debain-from-minimal/:9:0","series":null,"tags":["Linux","debian"],"title":"Debian最小化安装新系统配置","uri":"/config-debain-from-minimal/#配置exim-smtp"},{"categories":["IT备忘"],"content":"\r修改/etc/exim4/passwd.client smtp.163.com:email.163.com:password # 它的结构为\u003c163的SMTP服务器地址\u003e:\u003c发件人邮箱地址\u003e:\u003c邮箱授权码\u003e ","date":"2022-01-15","objectID":"/config-debain-from-minimal/:9:1","series":null,"tags":["Linux","debian"],"title":"Debian最小化安装新系统配置","uri":"/config-debain-from-minimal/#修改etcexim4passwdclient"},{"categories":["IT备忘"],"content":"\r配置/etc/email-addresses root: email.163.com # 否则系统会告诉你发件人帐号与发件人不符合 henry: email.163.com systemctl restart exim4.service ","date":"2022-01-15","objectID":"/config-debain-from-minimal/:9:2","series":null,"tags":["Linux","debian"],"title":"Debian最小化安装新系统配置","uri":"/config-debain-from-minimal/#配置etcemail-addresses"},{"categories":["IT备忘"],"content":"\r测试echo \"Email test body\" | mail -s \"Email test subject\" email.163.com ","date":"2022-01-15","objectID":"/config-debain-from-minimal/:9:3","series":null,"tags":["Linux","debian"],"title":"Debian最小化安装新系统配置","uri":"/config-debain-from-minimal/#测试"},{"categories":["IT备忘"],"content":"\r如果需要发送给用户，如root\r配置/etc/aliasroot: email.163.com 运行newaliases echo \"Email test body\" | mail -s \"Email test subject\" root ","date":"2022-01-15","objectID":"/config-debain-from-minimal/:9:4","series":null,"tags":["Linux","debian"],"title":"Debian最小化安装新系统配置","uri":"/config-debain-from-minimal/#如果需要发送给用户如root"},{"categories":["IT备忘"],"content":"\r如果需要发送给用户，如root\r配置/etc/aliasroot: email.163.com 运行newaliases echo \"Email test body\" | mail -s \"Email test subject\" root ","date":"2022-01-15","objectID":"/config-debain-from-minimal/:9:4","series":null,"tags":["Linux","debian"],"title":"Debian最小化安装新系统配置","uri":"/config-debain-from-minimal/#配置etcalias"},{"categories":["IT备忘"],"content":"\r如果需要发送给用户，如root\r配置/etc/aliasroot: email.163.com 运行newaliases echo \"Email test body\" | mail -s \"Email test subject\" root ","date":"2022-01-15","objectID":"/config-debain-from-minimal/:9:4","series":null,"tags":["Linux","debian"],"title":"Debian最小化安装新系统配置","uri":"/config-debain-from-minimal/#运行"},{"categories":["IT备忘"],"content":"\r配置mailx smtp 465 （未成功） su root mkdir -p /etc/pki/nssdb echo -n | openssl s_client -connect smtp.163.com:465 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' \u003e /etc/pki/nssdb/163.crt certutil -A -n \"GeoTrust SSL CA\" -t \"C,,\" -d /etc/pki/nssdb/ -i /etc/pki/nssdb/163.crt certutil -A -n \"GeoTrust Global CA\" -t \"C,,\" -d /etc/pki/nssdb/ -i /etc/pki/nssdb/163.crt certutil -A -n \"GeoTrust SSL CA - G3\" -t \"Pu,Pu,Pu\" -d /etc/pki/nssdb/ -i /etc/pki/nssdb/163.crt certutil -L -d /etc/pki/nssdb/ cat \u003e\u003e /etc/mail.rc \u003c\u003cEOF set from=email.163.com set smtp=smtps://smtp.163.com:465 set smtp-auth-user=email.163.com set smtp-auth-password=password set smtp-auth=login set ssl-verify=ignore set nss-config-dir=/etc/pki/nssdb EOF nano /etc/exim4/update-exim4.conf.conf # dc_eximconfig_configtype='internet' /etc/init.d/exim4 restart echo \" 邮件正文内容 \" | mail -v -s \" 邮件主题 \" email.163.com ","date":"2022-01-15","objectID":"/config-debain-from-minimal/:10:0","series":null,"tags":["Linux","debian"],"title":"Debian最小化安装新系统配置","uri":"/config-debain-from-minimal/#配置mailx-smtp-465-未成功"},{"categories":["IT备忘"],"content":"debian10升级debian11","date":"2022-01-10","objectID":"/update-debian10-to-debian11/","series":null,"tags":["Linux","debian"],"title":"debian10升级debian11","uri":"/update-debian10-to-debian11/"},{"categories":["IT备忘"],"content":"\rdebian10升级debian11","date":"2022-01-10","objectID":"/update-debian10-to-debian11/:0:0","series":null,"tags":["Linux","debian"],"title":"debian10升级debian11","uri":"/update-debian10-to-debian11/#debian10升级debian11"},{"categories":["IT备忘"],"content":"\r更新现有软件包apt update \u0026\u0026 apt upgrade -y ","date":"2022-01-10","objectID":"/update-debian10-to-debian11/:1:0","series":null,"tags":["Linux","debian"],"title":"debian10升级debian11","uri":"/update-debian10-to-debian11/#更新现有软件包"},{"categories":["IT备忘"],"content":"\r删除未使用的依赖项：apt --purge autoremove ","date":"2022-01-10","objectID":"/update-debian10-to-debian11/:2:0","series":null,"tags":["Linux","debian"],"title":"debian10升级debian11","uri":"/update-debian10-to-debian11/#删除未使用的依赖项"},{"categories":["IT备忘"],"content":"\r检查安装的包的一致性（正常情况下无输出）dpkg -C ","date":"2022-01-10","objectID":"/update-debian10-to-debian11/:3:0","series":null,"tags":["Linux","debian"],"title":"debian10升级debian11","uri":"/update-debian10-to-debian11/#检查安装的包的一致性正常情况下无输出"},{"categories":["IT备忘"],"content":"\r查看无法升级（on hold）的包（正常情况下无输出）apt-mark showhold ","date":"2022-01-10","objectID":"/update-debian10-to-debian11/:4:0","series":null,"tags":["Linux","debian"],"title":"debian10升级debian11","uri":"/update-debian10-to-debian11/#查看无法升级on-hold的包正常情况下无输出"},{"categories":["IT备忘"],"content":"\r更新源中的系统代码sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak \u0026\u0026 sudo sed -i 's/buster/bullseye/g' /etc/apt/sources.list ","date":"2022-01-10","objectID":"/update-debian10-to-debian11/:5:0","series":null,"tags":["Linux","debian"],"title":"debian10升级debian11","uri":"/update-debian10-to-debian11/#更新源中的系统代码"},{"categories":["IT备忘"],"content":"\r开始升级（遇到覆盖配置的提示时，按D看看差异）sudo apt update \u0026\u0026 sudo apt full-upgrade ","date":"2022-01-10","objectID":"/update-debian10-to-debian11/:6:0","series":null,"tags":["Linux","debian"],"title":"debian10升级debian11","uri":"/update-debian10-to-debian11/#开始升级遇到覆盖配置的提示时按d看看差异"},{"categories":["IT备忘"],"content":"\r查看更新是否成功cat /etc/os-release ","date":"2022-01-10","objectID":"/update-debian10-to-debian11/:7:0","series":null,"tags":["Linux","debian"],"title":"debian10升级debian11","uri":"/update-debian10-to-debian11/#查看更新是否成功"},{"categories":["IT备忘"],"content":"\r清理旧包 sudo apt --purge autoremove \u0026\u0026 sudo apt autoclean ","date":"2022-01-10","objectID":"/update-debian10-to-debian11/:8:0","series":null,"tags":["Linux","debian"],"title":"debian10升级debian11","uri":"/update-debian10-to-debian11/#清理旧包"},{"categories":["IT备忘"],"content":"\r移除旧内核","date":"2022-01-10","objectID":"/update-debian10-to-debian11/:9:0","series":null,"tags":["Linux","debian"],"title":"debian10升级debian11","uri":"/update-debian10-to-debian11/#移除旧内核"},{"categories":["IT备忘"],"content":"\r查看有哪些内核 dpkg -l | tail -n +6| grep -E 'linux-image-[0-9]+'| grep -Fv $(uname -r) ","date":"2022-01-10","objectID":"/update-debian10-to-debian11/:9:1","series":null,"tags":["Linux","debian"],"title":"debian10升级debian11","uri":"/update-debian10-to-debian11/#查看有哪些内核"},{"categories":["IT备忘"],"content":"\r输出的内容中包括了 Kernel 的三种状态： rc：表示已经被移除 ii：表示符合移除条件（可移除） iU：已进入 apt 安装队列，但还未被安装（不可移除）。 ","date":"2022-01-10","objectID":"/update-debian10-to-debian11/:9:2","series":null,"tags":["Linux","debian"],"title":"debian10升级debian11","uri":"/update-debian10-to-debian11/#输出的内容中包括了-kernel-的三种状态"},{"categories":["IT备忘"],"content":"\r选择需要删除的内核 sudo dpkg --purge linux-image-xxxx ","date":"2022-01-10","objectID":"/update-debian10-to-debian11/:9:3","series":null,"tags":["Linux","debian"],"title":"debian10升级debian11","uri":"/update-debian10-to-debian11/#选择需要删除的内核"},{"categories":["IT备忘"],"content":"\r解决包被升级的软件（基本都是自行编译的软件）","date":"2022-01-10","objectID":"/update-debian10-to-debian11/:10:0","series":null,"tags":["Linux","debian"],"title":"debian10升级debian11","uri":"/update-debian10-to-debian11/#解决包被升级的软件基本都是自行编译的软件"},{"categories":["IT备忘"],"content":"\rtmuxdebian编译安装tmux ","date":"2022-01-10","objectID":"/update-debian10-to-debian11/:10:1","series":null,"tags":["Linux","debian"],"title":"debian10升级debian11","uri":"/update-debian10-to-debian11/#tmux"},{"categories":["IT备忘"],"content":"openwrt配置迁移备忘","date":"2022-01-10","objectID":"/migrate-config-to-new-openwrt-image/","series":null,"tags":["openwrt"],"title":"openwrt配置迁移备忘","uri":"/migrate-config-to-new-openwrt-image/"},{"categories":["IT备忘"],"content":"\ropenwrt配置迁移备忘","date":"2022-01-10","objectID":"/migrate-config-to-new-openwrt-image/:0:0","series":null,"tags":["openwrt"],"title":"openwrt配置迁移备忘","uri":"/migrate-config-to-new-openwrt-image/#openwrt配置迁移备忘"},{"categories":["IT备忘"],"content":"\r优先使用恢复配置的方法，如果无法启动再尝试下面的方法","date":"2022-01-10","objectID":"/migrate-config-to-new-openwrt-image/:1:0","series":null,"tags":["openwrt"],"title":"openwrt配置迁移备忘","uri":"/migrate-config-to-new-openwrt-image/#优先使用恢复配置的方法如果无法启动再尝试下面的方法"},{"categories":["IT备忘"],"content":"\r具体步骤 将openwrt的配置文件下载 将openwrt的网络接口截图备用 找到编译后的openwrt.qcow2镜像文件，上传到pve的/root 导入硬盘, qm importdisk 9001 openwrt-x86-64-generic-squashfs-combined-efi.qcow2 local-zfs 在pve中将9001原来的硬盘detach，add新硬盘并attach 配置好新的openwrt 检查所有插件是否正常 ","date":"2022-01-10","objectID":"/migrate-config-to-new-openwrt-image/:1:1","series":null,"tags":["openwrt"],"title":"openwrt配置迁移备忘","uri":"/migrate-config-to-new-openwrt-image/#具体步骤"},{"categories":["IT备忘"],"content":"\r一般性设置 host - OW9 主题 - Argon 不走代理 - thy.pub 、 tothost.vn 全能推送 - 钉钉 fc7a158830b723db0cd 设备名称 OW9 ","date":"2022-01-10","objectID":"/migrate-config-to-new-openwrt-image/:1:2","series":null,"tags":["openwrt"],"title":"openwrt配置迁移备忘","uri":"/migrate-config-to-new-openwrt-image/#一般性设置"},{"categories":["IT备忘"],"content":"\r除了导入配置之外 zerotier moon zerotier-cli orbit $orbitid $orbitid ## taoquanw.com zerotier-cli orbit $orbitid $orbitid ## vps /etc/init.d/zerotier restart 防火墙zerotier转发子网 # 允许转发来自zerotier网卡，去往物理网卡的数据 iptables -A FORWARD -i ztc25asi3e -o eth3 -j ACCEPT # 允许转发来自物理网卡，去往zerotier网卡的数据 iptables -A FORWARD -i eth3 -o ztc25asi3e -j ACCEPT 如果ping网关不通，或者ping其它子网不通，在 网络—防火墙—常规设置 中的入站数据、出战数据、转发全部选接受。 ","date":"2022-01-10","objectID":"/migrate-config-to-new-openwrt-image/:1:3","series":null,"tags":["openwrt"],"title":"openwrt配置迁移备忘","uri":"/migrate-config-to-new-openwrt-image/#除了导入配置之外"},{"categories":["IT备忘"],"content":"\r下面的方法适合完全无法升级配置 -\u003e","date":"2022-01-10","objectID":"/migrate-config-to-new-openwrt-image/:2:0","series":null,"tags":["openwrt"],"title":"openwrt配置迁移备忘","uri":"/migrate-config-to-new-openwrt-image/#下面的方法适合完全无法升级配置--"},{"categories":["IT备忘"],"content":"\r有时直接在网页更新会导致恢复成出厂模式，再恢复配置又可能导致无法登陆网页","date":"2022-01-10","objectID":"/migrate-config-to-new-openwrt-image/:3:0","series":null,"tags":["openwrt"],"title":"openwrt配置迁移备忘","uri":"/migrate-config-to-new-openwrt-image/#有时直接在网页更新会导致恢复成出厂模式再恢复配置又可能导致无法登陆网页"},{"categories":["IT备忘"],"content":"\r准备工作（假定原openwrt ID为x001） 登录x001所在的pve（x为网段实际值如9） 设置环境变量，备份x001 VM及配置，然后关机 !!! 修改OWNET中的x为网段实际值（如9） (@pve) export OWNET=x \u0026\u0026 export OWID=\"$OWNET\"001 \u0026\u0026 export OWIP=10.8.$OWNET.1 \u0026\u0026 \\ vzdump $OWID --compress zstd --storage qnap \u0026\u0026 \\ scp -r root@$OWIP:/etc ~/openwrt/$OWID/etc/ \u0026\u0026 \\ scp -r root@$OWIP:/usr/share ~/openwrt/$OWID/share/ \u0026\u0026 \\ qm shutdown $OWID || qmkill $OWID x001分离硬盘（记下硬盘序号0，1，…） ","date":"2022-01-10","objectID":"/migrate-config-to-new-openwrt-image/:3:1","series":null,"tags":["openwrt"],"title":"openwrt配置迁移备忘","uri":"/migrate-config-to-new-openwrt-image/#准备工作假定原openwrt-id为x001"},{"categories":["IT备忘"],"content":"\r从备份的配置中恢复 从编译机复制镜像并导入： 登录x001所在的pve， (@pve) # 一般不需要scp，因为编译成功后会复制到pve的openwrt目录下 scp henry@10.8.9.22:/home/henry/lede/bin/targets/x86/64/openwrt-x86-64-generic-squashfs-combined.qcow2 ~/openwrt \u0026\u0026 \\ qm importdisk $OWID /mnt/pve/dsm/images/immortalwrt-x86-64-generic-squashfs-combined-efi-20240902.qcow2 local-zfs local-zfs x001添加新导入的disk 初始设置： x001开机 设置环境变量 !!! 修改OWNET中的x为网段实际值 修改br-lan的IP (@x001) export OWNET=x \u0026\u0026 export OWID=\"$OWNET\"001 \u0026\u0026 export OWIP=10.8.$OWNET.1 sed -i \"s/192.168.1.1/$OWIP/g\" /etc/config/network \u0026\u0026 \\ echo /etc/config/network \u0026\u0026 \\ /etc/init.d/network restart \u0026\u0026 \\ scp -r root@10.8.9.254:/root/openwrt/$OWID/etc ~/bak/ 如果是上传的配置备份文件，则运行： mkdir bak \u0026\u0026 tar -xzvf backup.tar.gz -C bak \u0026\u0026 cd bak 打开新的管理界面10.8.x.1 ==============恢复 网络 \u0026 DHCP \u0026 防火墙 (@x001) cp ~/bak/etc/config/network /etc/config/network \u0026\u0026 /etc/init.d/network restart \u0026\u0026 \\ cp ~/bak/etc/config/dhcp /etc/config/dhcp \u0026\u0026 /etc/init.d/dnsmasq restart \u0026\u0026 \\ cp ~/bak/etc/config/firewall /etc/config/firewall \u0026\u0026 /etc/init.d/firewall restart \u0026\u0026 \\ cp ~/bak/etc/config/system /etc/config/system \u0026\u0026 /etc/init.d/system restart \u0026\u0026 \\ cp etc/config/luci etc/config/luci \u0026\u0026 \\ cp etc/shadow /etc/shadow \u0026\u0026 \\ curl www.baidu.com ==============恢复 软件 （上网时间控制 - mia）(@x001) cp ~/bak/etc/config/shadowsocksr /etc/config/shadowsocksr \u0026\u0026 /etc/init.d/shadowsocksr restart \u0026\u0026 \\ cp ~/bak/etc/config/autoreboot /etc/config/autoreboot \u0026\u0026 /etc/init.d/autoreboot restart \u0026\u0026 \\ cp ~/bak/etc/config/ddns /etc/config/ddns \u0026\u0026 /etc/init.d/ddns restart \u0026\u0026 \\ cp ~/bak/etc/config/mia /etc/config/mia \u0026\u0026 /etc/init.d/mia restart \u0026\u0026 \\ cp ~/bak/etc/config/serverchan /etc/config/serverchan \u0026\u0026 /etc/init.d/serverchan restart \u0026\u0026 \\ cp ~/bak/etc/config/tinyproxy /etc/config/tinyproxy \u0026\u0026 /etc/init.d/tinyproxy restart \u0026\u0026 \\ cp ~/bak/etc/config/watchcat /etc/config/watchcat \u0026\u0026 /etc/init.d/watchcat restart \u0026\u0026 \\ cp ~/bak/etc/config/upnpd /etc/config/upnpd \u0026\u0026 /etc/init.d/miniupnpd restart \u0026\u0026 \\ cp ~/bak/etc/config/zerotier /etc/config/zerotier \u0026\u0026 /etc/init.d/zerotier restart \u0026\u0026 \\ zerotier-cli orbit 0f4504 0f4504 清除环境变量 (@pve) export OWNET= \u0026\u0026 export OWID= \u0026\u0026 export OWIP= x001删除旧硬盘（注意硬盘序号0，1，…） zerotier管理页面重新加入节点（因为zerotier生成了新的mac地址） ","date":"2022-01-10","objectID":"/migrate-config-to-new-openwrt-image/:3:2","series":null,"tags":["openwrt"],"title":"openwrt配置迁移备忘","uri":"/migrate-config-to-new-openwrt-image/#从备份的配置中恢复"},{"categories":["软件开发"],"content":"Omnis逗号分隔符及编码","date":"2021-12-22","objectID":"/omnis-comma-separator-and-encoding/","series":null,"tags":["Omnis"],"title":"Omnis逗号分隔符及编码","uri":"/omnis-comma-separator-and-encoding/"},{"categories":["软件开发"],"content":"\rOmnis逗号分隔符及编码 $clib.$prefs.$userexportdelimiter 只要显式设置$userexportdelimiter就不用担心在Omnis其它地方改写此设定值，需要担心的是Export和Import时不指定delimiter而依赖默认值的。 只要不使用Export data，而是用Transmit text to print file并在其中显式使用分隔符，则无需担心此值。 UTF-8和BOM（UTF-16LE自带BOM，但Excel无法识别） 如果csv文件没有BOM，则Excel默认使用GBK编码读取csv，会导致中文乱码。保险的方法是指定使用UTF-8编码及UTF-8的BOM，显式告诉Excel CSV的编码格式。 如果文件开始使用了sep=;则BOM会失效，中文仍然会是乱码。 要想使用;分隔并支持中文，只能将系统的分隔符设置为;同时使用UTF-8 + BOM并在csv中使用;。 是否需要转换为xlsx 如果只是本机读写，使用$userexportdelimiter导出csv问题不大。 如果需要发送给别人，则最好转化为xlsx，以免不同机器的分隔符不一致导致格式错乱及乱码。 小结： 导出列表一律使用c_SNF/GenerateCsvFromList（无需指定分隔符，会使用系统设置的分隔符），优先导出为xlsx以消除不同系统的分隔符设置的影响 导出非列表数据优先使用逗号分隔符（开头不能加sep=,），且使用UTF-8 + BOM 历史代码中已经使用分号的要去掉开头的sep=;并使用UTF-8 + BOM，然后用o_Excel.$convertCSV来转换为xlsx（参数指定分隔符为;） 实在不想修改分隔符又没有中文需求，则要保留开头的sep=;（使用UTF-8 + BOM也一样有乱码，且系统的分隔符不受控） 导入时需要指定分隔符和编码格式，但无需指定BOM，因为Omnis始终会按有BOM导入（UTF-16LE自带BOM，Omnis可以识别） ","date":"2021-12-22","objectID":"/omnis-comma-separator-and-encoding/:0:0","series":null,"tags":["Omnis"],"title":"Omnis逗号分隔符及编码","uri":"/omnis-comma-separator-and-encoding/#omnis逗号分隔符及编码"},{"categories":["IT备忘"],"content":"PVE黑群单盘扩容方案","date":"2021-12-19","objectID":"/pve-dsm-single-disk-dilatation/","series":null,"tags":["pve"],"title":"PVE黑群单盘扩容方案","uri":"/pve-dsm-single-disk-dilatation/"},{"categories":["IT备忘"],"content":"\rPVE黑群单盘扩容方案","date":"2021-12-19","objectID":"/pve-dsm-single-disk-dilatation/:0:0","series":null,"tags":["pve"],"title":"PVE黑群单盘扩容方案","uri":"/pve-dsm-single-disk-dilatation/#pve黑群单盘扩容方案"},{"categories":["IT备忘"],"content":"\r1. 老硬盘500GB， 新硬盘3TB","date":"2021-12-19","objectID":"/pve-dsm-single-disk-dilatation/:1:0","series":null,"tags":["pve"],"title":"PVE黑群单盘扩容方案","uri":"/pve-dsm-single-disk-dilatation/#1-老硬盘500gb-新硬盘3tb"},{"categories":["IT备忘"],"content":"\r2. 在SATA口和电源线充足的情况下，应该先上新硬盘，重建RAID 1，等数据复制完之后再下老硬盘。","date":"2021-12-19","objectID":"/pve-dsm-single-disk-dilatation/:2:0","series":null,"tags":["pve"],"title":"PVE黑群单盘扩容方案","uri":"/pve-dsm-single-disk-dilatation/#2-在sata口和电源线充足的情况下应该先上新硬盘重建raid-1等数据复制完之后再下老硬盘"},{"categories":["IT备忘"],"content":"\r3. 家里的PVE主机SATA电源不够用，只能用单盘的方案： 将老硬盘取下，用DiskGenius进行硬盘复制到新硬盘，然后将新硬盘装上 在PVE中将老硬盘sata2分离，假设黑群ID为9002 在PVE中 ls /dev/disk/by-id，找到ata-开头的硬盘ID ata-WDC_WD30PURX-64P6ZY0_WD-WMC4N0L041D9 直通硬盘 /sbin/qm set 9002 --sata5 /dev/disk/by-id/ata-WDC_WD30PURX-64P6ZY0_WD-WMC4N0L041D9 在PVE的Hardware中双击刚刚导入的sata5，将Backup的勾去掉 此时新硬盘只能识别出最后一个分区为460GB，需要resize分区 默认DSM分区表为MBR格式，最大只能支持2TB，需要转换为GPT格式 ssh admin@dsm sudo fdisk -l，找出新硬盘编号 /dev/sdf sudo gdisk /dev/sdf 将mbr转换为gpt，先按v确认，然后按w进行转换 分区增长 sudo parted /dev/sdf 然后 print 查看分区详情，需要resize的是分区3 parted /dev/sdf resizepart 3 100% DSM 扩容 存储空间管理员 =\u003e 存储池，找到新硬盘的存储池 动作 =\u003e 扩容 ","date":"2021-12-19","objectID":"/pve-dsm-single-disk-dilatation/:3:0","series":null,"tags":["pve"],"title":"PVE黑群单盘扩容方案","uri":"/pve-dsm-single-disk-dilatation/#3-家里的pve主机sata电源不够用只能用单盘的方案"},{"categories":["IT备忘"],"content":"\r4. (!!!) 直通硬盘后一定记得将硬盘排除在备份之外双击硬盘，取消勾选Backup ","date":"2021-12-19","objectID":"/pve-dsm-single-disk-dilatation/:4:0","series":null,"tags":["pve"],"title":"PVE黑群单盘扩容方案","uri":"/pve-dsm-single-disk-dilatation/#4--直通硬盘后一定记得将硬盘排除在备份之外"},{"categories":["投资理财"],"content":"估值定投法","date":"2021-12-15","objectID":"/auto-invest-by-assessment/","series":null,"tags":["投资理财"],"title":"估值定投法","uri":"/auto-invest-by-assessment/"},{"categories":["投资理财"],"content":"\r估计定投法","date":"2021-12-15","objectID":"/auto-invest-by-assessment/:0:0","series":null,"tags":["投资理财"],"title":"估值定投法","uri":"/auto-invest-by-assessment/#估计定投法"},{"categories":["投资理财"],"content":"\r乐估乐股","date":"2021-12-15","objectID":"/auto-invest-by-assessment/:1:0","series":null,"tags":["投资理财"],"title":"估值定投法","uri":"/auto-invest-by-assessment/#乐估乐股httpslegulegucomstockdataa-ttm-lyr"},{"categories":["投资理财"],"content":"\r乌龟量化 等权市盈率百分位低于30%，市场低估，果断买入。 等权市盈率百分位高于70%，市场高估，考虑离场。 等权市盈率百分位处于30%~70%之间，是正常状态，持股待涨就行。 ","date":"2021-12-15","objectID":"/auto-invest-by-assessment/:2:0","series":null,"tags":["投资理财"],"title":"估值定投法","uri":"/auto-invest-by-assessment/#乌龟量化httpswglhcomchinaindicespesh000985"},{"categories":["IT备忘"],"content":"机场使用心得","date":"2021-12-15","objectID":"/proxy-experience/","series":null,"tags":["机场"],"title":"机场使用心得","uri":"/proxy-experience/"},{"categories":["IT备忘"],"content":"\r机场使用心得","date":"2021-12-15","objectID":"/proxy-experience/:0:0","series":null,"tags":["机场"],"title":"机场使用心得","uri":"/proxy-experience/#机场使用心得"},{"categories":["IT备忘"],"content":"\r综合介绍及优惠券","date":"2021-12-15","objectID":"/proxy-experience/:1:0","series":null,"tags":["机场"],"title":"机场使用心得","uri":"/proxy-experience/#综合介绍及优惠券httpsclashxproairport-recommendation-desc"},{"categories":["IT备忘"],"content":"\r使用过的 妙速 技术一般，个别线路走IPLC，稳定性当时未测 速度一般，1080P有时也不流畅，4K不流畅 年210/100G/月，3台设备 均为1倍速 *Fastlink (官网不用FQ) 2019 ★★★★★ 技术可以，个别线路走IPLC，有时有的线路稳定性相当好，几乎无波动 速度可以，1080P流畅，4K不流畅 年190/100G/月，无限设备，5Gbps （190*0.64=121.6） 有福利节点0.1倍速，速度也很稳定 优惠码：年费8折：FASTLINK11 (折上折 6.4折) 使用体验，常规1x节点youtube速度在40mbps左右 *Gatern 贵 ★★★★ 技术不错，非常稳定，几乎一年都不需要切换节点 使用体验，测过4K，很流畅 年￥271/120G/月，10台设备 （HNZL6DY0JI 可在年付及其以上周期产品获得75折）（271*0.75=203.25）（~11.20） 有流量包，￥188元/282GB，10台设备 （使用 SDBV485GK9 可在年付以下和流量包产品获得85折） （188*0.85=159.8） *泡泡狗 (官网不用FQ) 2022 套餐灵活 ★★★★★ 年83/70G/月，不限设备，速度20Gbps （83*0.75=62.25/70G） 有￥118元/年/1688G流量包，不限设备 （118*0.75=88.5） 有￥100元/600G不限时流量包，不限设备 （100*0.75=75） 有￥260元/2000G不限时流量包，不限设备 （260*0.75=195） 优惠码：年费75折：1111 （~11.19） 使用体验，速度相当慢，youtube 速度在1mbps左右 *强哥 ★★★★★ 超级便宜 速度超快 年12/30G/月 ！！！，不限设备，不限速度 更新2024-09-15: 流量用完之后，泡泡狗是一点都用不了，强哥还能让你上谷歌查资料，赞！ 在lean openwrt无法使用(需要将adh的替换dnsmasq的53端口修改为作为dnsmasq的上游) （更新2024-09-15: 刷immortalwrt之后不存在此现象了） youtube速度在90mbps左右（默认打开即为4K） ","date":"2021-12-15","objectID":"/proxy-experience/:2:0","series":null,"tags":["机场"],"title":"机场使用心得","uri":"/proxy-experience/#使用过的"},{"categories":["IT备忘"],"content":"\r未用过的 *魔戒 只有一次性流量，1元2G，15元130G，不限时间，不限设备，不限速度 小南瓜 IPV6 6.9月/150G, 有设备限制 *Teacat 年176/100G/月，不限设备，不限速度 *灵魂云 年178/100G/月，不限设备，不限速度 *奈云 (官网不用FQ) 2021 官网很慢 ★★★★★ 年￥128/168G/月，5台设备，速度5Gbps （128*0.7=89.6/168G） ￥98/280G一次性流量 优惠码： 基础套餐（特惠）7折扣码： S117Z （~11/16） 优惠码： Pro-进阶套餐 (折后228) Max-专业套餐 6.8折扣码：S1168 *DuangCloud (官网需要FQ) 超级便宜 年200/50G/月，不限设备，速度20Gbps 飞鸟 (官网不用FQ) 全员海外 ★★★★★ 年144/100G/月，不限设备，不限速度（144*0.64=92.16/100G） 8折优惠码（6.4折）： 111180 （~11.21） 有流量补充包：￥8/50G，￥15/100G 龙猫云 (官网需要FQ) 全员海外 ★★★★★ 年144元/100G/月，不限设备 不限速度 8折优惠码： totoro1111 （144*0.8=115） Anyland (官网不用FQ) 2021 区分节点 贵 送ChatGPT ★★★★★ 有￥128/200G不限时，Normal节点，不限速度 有￥228/500G不限时，Normal节点，不限速度 9折优惠码： 231001 新购、续费 Mini年付特惠 （￥178/100G/Normal节点/无海外用户专用节点） 套餐可以发工单领取一个ChatGPT 3.5独享账号 新购、续费 、升级Basics（￥260/260G/Normal+VIP节点/海外用户专用节点）或更高赠送 Netflix、Disney+、ChatGPT 4.0高级账号 新购、续费、升级PLUS年套餐（￥500/500G/Normal+VIP节点/海外用户专用节点）或更高赠送 麻豆传媒、Pronhub、Netflix、Disney+、ChatGPT 4.0、Midjourney（无限出图 30美金/月）会员账号 新购、续费、升级PLUS年套餐或更高级可以联系网站客服获赠额外套餐时长（一年赠送30天，两年赠送60天。如此类推，上不封顶） 闪电猫 (官网需要FQ) 全员海外 贵 ★★★★★ 年192元/100G/月，不限设备，不限速度 （192*0.8=153.6/100G） 年￥260元/600G/年，不限设备，不限速度 8折优惠码：12345678 悠兔 (官网不用FQ)2022 贵 ★★★★★ 年￥200元/100G/月，不限设备?，不限速度？ （200*0.8=160/100G） 年￥100元/200G/年，不限设备?，不限速度？ 8折优惠码： 888 Just My Socks 著名BandwagonHost旗下 月5.88$/500G/月，5台设备，2.5Gbps 飞数 (官网不用FQ) 太贵 ★★★★ 年￥319/150G/月，7台设备，不限速度 流量包￥120/200G不限时，7台设备，不限速度 7折优惠码： SS1111 有流量补充包 速云梯 (官网不用FQ) 贵/区分节点/设备少 ★★★★★ 年￥239/100G/月，2台设备，不限速度，60Mbps 最便宜的只可用入门版节点 7折优惠码： SS1111 （~ 11.11 保价 12.31） GLaDos 不太适合openwrt 技术很牛，自建运营，节点自动选用最快的 速度，100M 200G/月，3台设备 400天149元 CloudSS 买的试用包，很差，经常连不上 速度很慢，很卡 年87/15G/月，无限设备，不限速 经常有秒杀，2-8点为0.1倍率 实际使用体验？ ","date":"2021-12-15","objectID":"/proxy-experience/:3:0","series":null,"tags":["机场"],"title":"机场使用心得","uri":"/proxy-experience/#未用过的"},{"categories":["IT备忘"],"content":"excelcnv参数备忘","date":"2021-10-11","objectID":"/excelcnv-parameters/","series":null,"tags":["excel"],"title":"excelcnv参数备忘","uri":"/excelcnv-parameters/"},{"categories":["IT备忘"],"content":"\rexcelcnv.exe参数备忘The command line arguments for excelcnv.exe are not documented well. Many examples online refer to “-oice” argument followed by the input and output file names. That’s it. And yeah, this actually works, so since I have already mentioned that input parameter can be an URL, the downloader invocation can be as follows: excelcnv.exe -oice Still, there is more to discover. For instance, what the heck is ‘oice’? After googling around I eventually discovered it stands for Office Isolated Conversion Environment. Other interesting stuff to look at are other, undocumented command line arguments used by excelcnv.exe – these I found so far are as follows: -oics – don’t know how it is being used at the moment -bcs – you can use it to convert INPUT file to .ods e.g. excelcnv.exe -bcs -repair -o – orientation (for PDF) -ps – paper size (for PDF) -dps – default paper size (for PDF) -scl – scaling option (for PDF) -wtp – what to print (for PDF) -preview – preview quality (for PDF) -pofo – automatic print on file open (for PDF) -nafap – use named action setting (for PDF) -pglim – page limit (for PDF) -rv – unknown (for PDF) There are probably more, but this is what I explored so far. The default OUTPUT file type is XLSX. The file format can be changed using a dedicated file extension accepted by the program: .xltx .xlam .xlsm .ods .xls* .pdf .xlsx .png .jpg but not sure yet how to use all of them as not all of them worked for me (good news is that all the .xl work well with “-oice” command). ","date":"2021-10-11","objectID":"/excelcnv-parameters/:0:0","series":null,"tags":["excel"],"title":"excelcnv参数备忘","uri":"/excelcnv-parameters/#excelcnvexe参数备忘"},{"categories":["生活随笔"],"content":"P1106手动双面打印","date":"2021-08-17","objectID":"/p1106-manually-dual-print/","series":null,"tags":["打印"],"title":"P1106手动双面打印","uri":"/p1106-manually-dual-print/"},{"categories":["生活随笔"],"content":"\rP1106手动双面打印","date":"2021-08-17","objectID":"/p1106-manually-dual-print/:0:0","series":null,"tags":["打印"],"title":"P1106手动双面打印","uri":"/p1106-manually-dual-print/#p1106手动双面打印"},{"categories":["生活随笔"],"content":"\r手动双面打印时 按长边翻页，将纸的正反不变，在平面内旋转180倒着放入打印机纸盒（页码在后，标题在前，空白面朝上） 按短边翻页，将纸的正反不变，在平面内不做旋转直接放入打印机纸盒（页码在前，标题在后，空白面朝上） ","date":"2021-08-17","objectID":"/p1106-manually-dual-print/:1:0","series":null,"tags":["打印"],"title":"P1106手动双面打印","uri":"/p1106-manually-dual-print/#手动双面打印时"},{"categories":["IT备忘"],"content":"pve灾难故障恢复","date":"2021-08-15","objectID":"/pve-recovery-from-disaster/","series":null,"tags":["pve"],"title":"pve灾难故障恢复","uri":"/pve-recovery-from-disaster/"},{"categories":["IT备忘"],"content":"\rpve灾难故障恢复（以恢复/usr为例）","date":"2021-08-15","objectID":"/pve-recovery-from-disaster/:0:0","series":null,"tags":["pve"],"title":"pve灾难故障恢复","uri":"/pve-recovery-from-disaster/#pve灾难故障恢复以恢复usr为例"},{"categories":["IT备忘"],"content":"\r(记录在一次pve中rm /usr -R之后)","date":"2021-08-15","objectID":"/pve-recovery-from-disaster/:1:0","series":null,"tags":["pve"],"title":"pve灾难故障恢复","uri":"/pve-recovery-from-disaster/#记录在一次pve中rm-usr--r之后"},{"categories":["IT备忘"],"content":"\r先脱离集群（集群内机器都需要脱群，否则单独工作时仍会出错） 集群机器都正常使用时（先替换NodeName值为需要的值） export NodeName=pve pvecm nodes pvecm delnode $NodeName ls -l /etc/pve/nodes/ 当集群host无法正常工作时，以上命令会无法正常工作，需要强制脱群 systemctl stop pve-cluster.service systemctl stop corosync.service pmxcfs -l [main] notice: forcing local mode (although corosync.conf exists) rm /etc/pve/corosync.conf rm -rf /etc/corosync/* killall pmxcfs systemctl start pve-cluster.service rm -rf /etc/pve/nodes/$NodeName ","date":"2021-08-15","objectID":"/pve-recovery-from-disaster/:1:1","series":null,"tags":["pve"],"title":"pve灾难故障恢复","uri":"/pve-recovery-from-disaster/#先脱离集群集群内机器都需要脱群否则单独工作时仍会出错"},{"categories":["IT备忘"],"content":"\r如果pve已经无法正常启动 将一个U盘（最好8G以上）以ext4格式安装同版本pve 如需从另一台pve复制系统文件 将U盘插入运行的正常机器 挂载U盘： mkdir /mnt/u \u0026 mount /dev/sdx1 /mnt/u 复制文件：mkdir /mnt/u/recover \u0026 rsync -av /usr /mnt/u/recover/usr 卸载U盘：umount /mnt/u 恢复文件 将U盘插入故障机器，从U盘启动 查看磁盘 ls /dev/disk/by-id \u0026\u0026 zpool list 创建挂载目录 mkdir /mnt/zfs 加载zfs：zpool import -d /dev/disk/by-id/ata-XXX-XXX-XXX-part3 -R /mnt/zfs rpool 若上一步要将rpool挂载为其它名称，需要在rpool后面使用新的pool 名称，如 … rpool npool 若从U盘恢复：rsync -av /recover/usr /usr 若从NAS恢复： 修改IP：nano /etc/network/interfaces 重启网络：/etc/init.d/networking restart 复制文件：rsync -av henry@10.8.9.3:/share/rsync/$NodeName/etc /usr 卸载zfs: umount /mnt/zfs 拔掉U盘，重启电脑 修复系统 apt --fix-broken install ","date":"2021-08-15","objectID":"/pve-recovery-from-disaster/:1:2","series":null,"tags":["pve"],"title":"pve灾难故障恢复","uri":"/pve-recovery-from-disaster/#如果pve已经无法正常启动"},{"categories":["IT备忘"],"content":"阿里云ECS配置mailx","date":"2021-07-15","objectID":"/ecs-centos-config-mailx/","series":null,"tags":["Linux","centos"],"title":"阿里云ECS配置mailx","uri":"/ecs-centos-config-mailx/"},{"categories":["IT备忘"],"content":"\r阿里云ECS配置mailx","date":"2021-07-15","objectID":"/ecs-centos-config-mailx/:0:0","series":null,"tags":["Linux","centos"],"title":"阿里云ECS配置mailx","uri":"/ecs-centos-config-mailx/#阿里云ecs配置mailx"},{"categories":["IT备忘"],"content":"\r由于阿里云已将25端口封了（改用465端口），所以在ECS上往外发邮件时要作相应的配置才行。","date":"2021-07-15","objectID":"/ecs-centos-config-mailx/:1:0","series":null,"tags":["Linux","centos"],"title":"阿里云ECS配置mailx","uri":"/ecs-centos-config-mailx/#由于阿里云已将25端口封了改用465端口所以在ecs上往外发邮件时要作相应的配置才行"},{"categories":["IT备忘"],"content":"\r使用的是阿里云的企业邮箱，测试可用。 在阿里云的“安全组”开放645端口通行。 安装相应软件包： systemctl stop sendmail systemctl stop postfix systemctl disable sendmail systemctl disable postfix yum -y install mailx 下载证书： 创建目录，用来存放证书 mkdir -p /root/.certs/ 向163请求证书 echo -n|openssl s_client -connect smtp.mxhichina.com:465|sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' \u003e ~/.certs/aliyun.crt 添加一个证书到证书数据库中 certutil -A -n \"GeoTrust SSL CA\" -t \"C,,\" -d ~/.certs -i ~/.certs/aliyun.crt certutil -A -n \"GeoTrust Global CA\" -t \"C,,\" -d ~/.certs -i ~/.certs/aliyun.crt 使证书得到认可，避免发邮件后报错：Error in certificate: Peer’s certificate issuer is not recognized cd /root/.certs # (一定要进入到证书所在目录才行) certutil -A -n \"GeoTrust SSL CA - G3\" -t \"Pu,Pu,Pu\" -d ./ -i ./aliyun.crt 列出目录下证书 certutil -L -d /root/.certs mail.rc末尾追加SMTP配置： vim /etc/mail.rc # 加密邮件 set from=noreply@taoquanw.com set smtp=smtps://smtp.mxhichina.com:465 set smtp-auth-user=noreply@taoquanw.com set smtp-auth-password=123456 set smtp-auth=login set ssl-verify=ignore set nss-config-dir=/root/.certs # 非加密邮件（可用于非阿里云） set from=noreply@taoquanw.com set smtp=smtp://smtp.mxhichina.com:25 set smtp-auth-user=noreply@taoquanw.com set smtp-auth-password=123456 set smtp-auth=login set ssl-verify=ignore 测试效果： echo 'hello'|mail -v -s \"test mail\" admin@taoquanw.com 设置root的别名邮箱 vim /etc/mail.rc alias root admin@taoquanw.com alias vagrant admin@taoquanw.com ","date":"2021-07-15","objectID":"/ecs-centos-config-mailx/:1:1","series":null,"tags":["Linux","centos"],"title":"阿里云ECS配置mailx","uri":"/ecs-centos-config-mailx/#使用的是阿里云的企业邮箱测试可用"},{"categories":["IT备忘"],"content":"pve中安装openwrt","date":"2021-07-12","objectID":"/install-openwrt-kvm-on-pve/","series":null,"tags":["pve","openwrt"],"title":"pve中安装openwrt","uri":"/install-openwrt-kvm-on-pve/"},{"categories":["IT备忘"],"content":"\r创建虚拟机要点 General中开机自启动要勾上 OS中 不使用任何介质 BIOS中使用默认SeaBIOS (如果要用UEFI启动需要导入EFI镜像) Qemo Agent 打勾 网卡使用VirtIO 创建完成后分离默认的硬盘 然后删除刚刚分离的硬盘，和CDROM 导入img，参考（在pve中向zfs中导入openwrt img） 如果有编译的qcow2镜像则可以跳过7，/sbin/qm importdisk 1253 /mnt/pve/dsm/images/immortalwrt-x86-64-generic-squashfs-combined-efi-20240902.qcow2 local-zfs ","date":"2021-07-12","objectID":"/install-openwrt-kvm-on-pve/:0:0","series":null,"tags":["pve","openwrt"],"title":"pve中安装openwrt","uri":"/install-openwrt-kvm-on-pve/#创建虚拟机要点"},{"categories":["IT备忘"],"content":"Word宏手动双面打印","date":"2021-07-11","objectID":"/word-vba-dual-print/","series":null,"tags":["vba"],"title":"Word宏手动双面打印","uri":"/word-vba-dual-print/"},{"categories":["IT备忘"],"content":"\rWord宏手动双面打印 Sub DualPrint() Dim answer As Integer Dim nPages As Integer nPages = Word.ActiveDocument.range.Information(wdNumberOfPagesInDocument) answer = MsgBox(\"当前文档共 \" \u0026 nPages \u0026 \" 页\" \u0026 vbCrLf \u0026 \"当前打印机为 \" \u0026 ActivePrinter \u0026 vbCrLf \u0026 \"是否使用此打印机进行打印？\", vbQuestion + vbYesNo + vbDefaultButton2, \"确认打印机\") If answer = vbNo Then Exit Sub End If Dim range As Integer Dim pages As String If nPages Mod 2 = 0 Then '偶数页的话打印全部页 range = wdPrintAllDocument pages = \"\" Else '奇数页的话不打印最后一页 range = wdPrintRangeOfPages pages = \"1-\" \u0026 (nPages - 1) End If '正序打印奇数页 Options.PrintReverse = False Application.PrintOut FileName:=\"\", range:=range, Item:= _ wdPrintDocumentWithMarkup, Copies:=1, pages:=pages, PageType:= _ wdPrintOddPagesOnly, Collate:=True, Background:=False, PrintToFile:=False, _ PrintZoomColumn:=0, PrintZoomRow:=0, PrintZoomPaperWidth:=0, _ PrintZoomPaperHeight:=0 answer = MsgBox(\"请将纸张旋转180放入托盘，注意不要正反翻转！\" \u0026 vbCrLf \u0026 \"页码在后，标题在前，空白面朝上，送入纸盘\" \u0026 vbCrLf \u0026 \"（纸面上如果有“甲”字旋转后应该看到“由”字）\", vbOKCancel, \"提示\") If answer = vbCancel Then Exit Sub End If '逆序打印偶数页 Options.PrintReverse = True Application.PrintOut FileName:=\"\", range:=range, Item:= _ wdPrintDocumentWithMarkup, Copies:=1, pages:=pages, PageType:= _ wdPrintEvenPagesOnly, Collate:=True, Background:=False, PrintToFile:=False, _ PrintZoomColumn:=0, PrintZoomRow:=0, PrintZoomPaperWidth:=0, _ PrintZoomPaperHeight:=0 '奇数页的话打印最后一页 '最后一页不可以先打印，否则双面顺序会错乱 If nPages Mod 2 \u003c\u003e 0 Then Application.PrintOut FileName:=\"\", range:=wdPrintRangeOfPages, Item:= _ wdPrintDocumentWithMarkup, Copies:=1, pages:=Str(nPages), PageType:= _ wdPrintOddPagesOnly, Collate:=True, Background:=False, PrintToFile:=False, _ PrintZoomColumn:=0, PrintZoomRow:=0, PrintZoomPaperWidth:=0, _ PrintZoomPaperHeight:=0 End If '逆序打印偶数页 Options.PrintReverse = True End Sub ","date":"2021-07-11","objectID":"/word-vba-dual-print/:0:0","series":null,"tags":["vba"],"title":"Word宏手动双面打印","uri":"/word-vba-dual-print/#word宏手动双面打印"},{"categories":["IT备忘"],"content":"openwrt安装tinyproxy","date":"2021-04-15","objectID":"/install-tinyproxy-on-openwrt/","series":null,"tags":["Linux","openwrt"],"title":"openwrt安装tinyproxy","uri":"/install-tinyproxy-on-openwrt/"},{"categories":["IT备忘"],"content":" opkg update opkg install tinyproxy luci-app-tinyproxy filtering allowed clients - add : 127.0.0.1 add : 10.8.9.0/24 allowed connect ports - filter port : 0 (这里不能填入0，否则则配置文件会增加ConnectPort = ‘0’， 实际上这里要留空) ","date":"2021-04-15","objectID":"/install-tinyproxy-on-openwrt/:0:0","series":null,"tags":["Linux","openwrt"],"title":"openwrt安装tinyproxy","uri":"/install-tinyproxy-on-openwrt/#"},{"categories":["IT备忘"],"content":"在pve中向zfs中导入openwrt-img","date":"2021-04-11","objectID":"/import-openwrt-kvm-image-pve-zfs/","series":null,"tags":["Linux","pve","openwrt"],"title":"在pve中向zfs中导入openwrt-img","uri":"/import-openwrt-kvm-image-pve-zfs/"},{"categories":["IT备忘"],"content":"\rpve zfs 先将编译好的raw img（不要选EFI的，实测UEFI无法启动。原始img+pve seabios成功启动）上传到local(pve)下的ISO image中，成功后在task找到路径： 但直接导入zfs会提示：zfs error: cannot create ‘rpool/data/vm-101-disk-0’: volume size must be a multiple of volume block size 这是因为zfs要求img是4K的整数倍。因此需要向末尾写入0凑齐64K整数倍： ls -al /var/lib/vz/template/iso/openwrt-x86-64-generic-squashfs-combined.img -rw-r--r-- 1 root root 185106452 Nov 30 12:40 /var/lib/vz/template/iso/openwrt-x86-64-generic-squashfs-combined.img 计算补齐字节数 假定img大小为185106452，先计算它除64K的整数 185106452/(64*1024)=2,824.5078125 然后用凑整的数计算比它大的最小的4K整数倍大小 2825*(64*1024)=185,139,200 最后用64K的整数倍送去原来大小，计算出要写入多少0： 185,139,200-185106452=32,748 可以用python: import math def pad_size(ori_size, block_size=64): return math.ceil(ori_size*1.0/block_size/1024)*block_size*1024-ori_size 写入空白补齐 dd if=/dev/zero bs=1 count=32748 \u003e\u003e ./openwrt-x86-64-generic-squashfs-combined.img 导入zfs（假设101为虚拟机id） ","date":"2021-04-11","objectID":"/import-openwrt-kvm-image-pve-zfs/:0:0","series":null,"tags":["Linux","pve","openwrt"],"title":"在pve中向zfs中导入openwrt-img","uri":"/import-openwrt-kvm-image-pve-zfs/#pve-zfs"},{"categories":["IT备忘"],"content":"\r如果直接导入/sbin/qm importdisk 101 /var/lib/vz/template/iso/openwrt-x86-64-generic-squashfs-combined-efi.img local-zfs ","date":"2021-04-11","objectID":"/import-openwrt-kvm-image-pve-zfs/:0:1","series":null,"tags":["Linux","pve","openwrt"],"title":"在pve中向zfs中导入openwrt-img","uri":"/import-openwrt-kvm-image-pve-zfs/#如果直接导入"},{"categories":["IT备忘"],"content":"\r转成qcow2格式再导入（raw img最好先转换为qcow2，qcow2格式是QEMU支持的一种主流磁盘映像格式，与raw格式相比，qcow2具有存储空间占用小、支持写时拷贝（COW, copy-on-write）、支持zlib压缩及支持AES加密等特性。） qemu-img convert -f raw -O qcow2 ./openwrt-x86-64-generic-squashfs-combined.img vm-101-disk-0.qcow2 ","date":"2021-04-11","objectID":"/import-openwrt-kvm-image-pve-zfs/:0:2","series":null,"tags":["Linux","pve","openwrt"],"title":"在pve中向zfs中导入openwrt-img","uri":"/import-openwrt-kvm-image-pve-zfs/#转成qcow2格式再导入"},{"categories":["IT备忘"],"content":"\r导入qcow2/sbin/qm importdisk 101 /mnt/pve/dsm/images/immortalwrt-x86-64-generic-squashfs-combined-efi-20240902.qcow2 local-zfs 使用磁盘 到Hardware中双击新硬盘vm-101-disk-0，点击Add ","date":"2021-04-11","objectID":"/import-openwrt-kvm-image-pve-zfs/:0:3","series":null,"tags":["Linux","pve","openwrt"],"title":"在pve中向zfs中导入openwrt-img","uri":"/import-openwrt-kvm-image-pve-zfs/#导入qcow2"},{"categories":["IT备忘"],"content":"alpine命令简介","date":"2021-04-11","objectID":"/alpine-command-remark/","series":null,"tags":["Linux","alpine"],"title":"alpine命令简介","uri":"/alpine-command-remark/"},{"categories":["IT备忘"],"content":"\ralpine命令简介","date":"2021-04-11","objectID":"/alpine-command-remark/:0:0","series":null,"tags":["Linux","alpine"],"title":"alpine命令简介","uri":"/alpine-command-remark/#alpine命令简介"},{"categories":["IT备忘"],"content":"\rAlpine Linux 包管理－apk包管理命令 apk –help apk update apk upgrade #升级软件 apk add openssh openntp vim apk add –no-cache mysql-client apk add docker –update-cache –repository http://mirrors.ustc.edu.cn/alpine/v3.8/main/ –allow-untrusted apk add asterisk=1.6.0.21-r0 apk add ‘asterisk\u003c1.6.1’ apk add ‘asterisk\u003e1.6.1’ apk del openssh openntp vim apk add –upgrade busybox #指定升级部分软件包 apk search #查找所以可用软件包 apk search -v #查找所以可用软件包及其描述内容 apk search -v ‘acf*’ #通过软件包名称查找软件包 apk search -v -d ‘docker’ #通过描述文件查找特定的软件包 apk info #列出所有已安装的软件包 apk info -a zlib #显示完整的软件包信息 apk info –who-owns /sbin/lbu #显示指定文件属于的包 ","date":"2021-04-11","objectID":"/alpine-command-remark/:1:0","series":null,"tags":["Linux","alpine"],"title":"alpine命令简介","uri":"/alpine-command-remark/#alpine-linux-包管理apk包管理命令"},{"categories":["IT备忘"],"content":"\r镜像源配置 官方镜像列表：http://dl-cdn.alpinelinux.org/alpine/MIRRORS.txt MIRRORS.txt中是当前Alpine官方提供的镜像源（Alpine安装的时候系统自动选择最佳镜像源） 国内镜像源 清华TUNA镜像源：https://mirror.tuna.tsinghua.edu.cn/alpine/ 中科大镜像源：http://mirrors.ustc.edu.cn/alpine/ 阿里云镜像源：http://mirrors.aliyun.com/alpine/ 如何配置软件源 以中科大源为例：在/etc/apk/repositories文件中加入对应源地址就行了，一行一个地址。 # /media/cdrom/apks` http://mirrors.ustc.edu.cn/alpine/v3.5/main http://mirrors.ustc.edu.cn/alpine/v3.5/community ","date":"2021-04-11","objectID":"/alpine-command-remark/:2:0","series":null,"tags":["Linux","alpine"],"title":"alpine命令简介","uri":"/alpine-command-remark/#镜像源配置"},{"categories":["IT备忘"],"content":"\rAlpine Linux init系统","date":"2021-04-11","objectID":"/alpine-command-remark/:3:0","series":null,"tags":["Linux","alpine"],"title":"alpine命令简介","uri":"/alpine-command-remark/#alpine-linux-init系统"},{"categories":["IT备忘"],"content":"\rAlpine Linux使用的是Gentoo一样的OpenRCinit系统。 rc-update rc-update主要用于不同运行级增加或者删除服务。 rc-update语法格式： Usage: rc-update [options] add \u003cservice\u003e [\u003crunlevel\u003e...] or: rc-update [options] del \u003cservice\u003e [\u003crunlevel\u003e...] or: rc-update [options] [show [\u003crunlevel\u003e...]] Options: [ asuChqVv ] -a, --all Process all runlevels -s, --stack Stack a runlevel instead of a service -u, --update Force an update of the dependency tree -h, --help Display this help output -C, --nocolor Disable color output -V, --version Display software version -v, --verbose Run verbosely -q, --quiet Run quietly (repeat to suppress errors) 使用实例： $ rc-update add docker boot #增加一个服务 $ rc-update del docker boot #删除一个服务 rc-status rc-status 主要用于运行级的状态管理。 rc-status语法格式： Usage: rc-status [options] \u003crunlevel\u003e... or: rc-status [options] [-a | -c | -l | -r | -s | -u] Options: [ aclrsuChqVv ] -a, --all Show services from all run levels -c, --crashed Show crashed services -l, --list Show list of run levels -r, --runlevel Show the name of the current runlevel -s, --servicelist Show service list -u, --unused Show services not assigned to any runlevel -h, --help Display this help output -C, --nocolor Disable color output -V, --version Display software version -v, --verbose Run verbosely -q, --quiet Run quietly (repeat to suppress errors) 使用实例： $ rc-status #检查默认运行级别的状态 $ rc-status -a #检查所有运行级别的状态 rc-service rc-service主用于管理服务的状态 rc-service语法格式： Usage: rc-service [options] [-i] \u003cservice\u003e \u003ccmd\u003e... or: rc-service [options] -e \u003cservice\u003e or: rc-service [options] -l or: rc-service [options] -r \u003cservice\u003e Options: [ e:ilr:INChqVv ] -e, --exists \u003carg\u003e tests if the service exists or not -i, --ifexists if the service exists then run the command -I, --ifinactive if the service is inactive then run the command -N, --ifnotstarted if the service is not started then run the command -l, --list list all available services -r, --resolve \u003carg\u003e resolve the service name to an init script -h, --help Display this help output -C, --nocolor Disable color output -V, --version Display software version -v, --verbose Run verbosely -q, --quiet Run quietly (repeat to suppress errors) 使用实例： $ rc-service sshd start #启动一个服务。 $ rc-service sshd stop #停止一个服务。 $ rc-service sshd restart #重启一个服务。 openrc openrc主要用于管理不同的运行级。 openrc语法格式： Usage: openrc [options] [\u003crunlevel\u003e] Options: [ a:no:s:SChqVv ] -n, --no-stop do not stop any services -o, --override \u003carg\u003e override the next runlevel to change into when leaving single user or boot runlevels -s, --service \u003carg\u003e runs the service specified with the rest of the arguments -S, --sys output the RC system type, if any -h, --help Display this help output -C, --nocolor Disable color output -V, --version Display software version -v, --verbose Run verbosely -q, --quiet Run quietly (repeat to suppress errors) Alpine Linux可用的运行级 default sysinit boot single reboot shutdown 使用实例 $ openrc single #更改为single运行级 ","date":"2021-04-11","objectID":"/alpine-command-remark/:3:1","series":null,"tags":["Linux","alpine"],"title":"alpine命令简介","uri":"/alpine-command-remark/#alpine-linux使用的是gentoo一样的openrcinit系统"},{"categories":["IT备忘"],"content":"\r其它指令$ reboot #重启系统，类似于shutdown -r now。 $ halt #关机，类似于shutdown -h now。 $ poweroff #关机 ","date":"2021-04-11","objectID":"/alpine-command-remark/:4:0","series":null,"tags":["Linux","alpine"],"title":"alpine命令简介","uri":"/alpine-command-remark/#其它指令"},{"categories":["IT备忘"],"content":"\ralpine安装配置nginx apk add nginx nginx -v rc-update add nginx /etc/init.d/nginx start ","date":"2021-04-11","objectID":"/alpine-command-remark/:5:0","series":null,"tags":["Linux","alpine"],"title":"alpine命令简介","uri":"/alpine-command-remark/#alpine安装配置nginx"},{"categories":["IT备忘"],"content":"frps docker command","date":"2021-03-18","objectID":"/docker-frps-command/","series":null,"tags":["docker"],"title":"frps docker command","uri":"/docker-frps-command/"},{"categories":["IT备忘"],"content":"\rfrps===============使用本机网络============== docker run -d -it \\ --restart unless-stopped \\ --name frps \\ -v /etc/frp/frps.toml:/etc/frp/frps.toml \\ --network=host \\ snowdreamtech/frps =============使用maclan虚拟网络============ sudo ip link set eth0 promisc on docker network create -d macvlan \\ --subnet=192.168.10.0/24 --gateway=192.168.10.1 \\ --ipv6 --subnet=fe80::/16 --gateway=fe80::1 \\ -o parent=eth0 openwrt docker run -itd \\ --restart unless-stopped \\ --name frps \\ --ip=192.168.1.99 \\ -v /etc/frp/frps.toml:/etc/frp/frps.toml \\ --network=openwrt \\ snowdreamtech/frps ===============jobs.sh=============== 用于将任务保持在前台，否则docker会退出 # start frps /app/frps -c /app/frps.toml 2\u003e\u00261 \u0026 # start ss-server /app/ss -s \"ss://AEAD_AES_256_GCM:$SS_PWD@:7788\" 2\u003e\u00261 \u0026 # just keep this script running while [[ true ]]; do sleep 1 done ===============jobs.sh=============== # docker docker run -itd \\ --restart unless-stopped \\ --name network \\ --ip=192.168.1.99 \\ -e SS_PWD=password \\ -v /volume2/docker:/app \\ --network=openwrt \\ alpine \\ /app/jobs.sh ","date":"2021-03-18","objectID":"/docker-frps-command/:0:0","series":null,"tags":["docker"],"title":"frps docker command","uri":"/docker-frps-command/#frps"},{"categories":["投资理财"],"content":"PE+PB四种组合","date":"2021-02-20","objectID":"/combine-of-pe-pb/","series":null,"tags":["投资理财"],"title":"PE+PB四种组合","uri":"/combine-of-pe-pb/"},{"categories":["投资理财"],"content":"\rPE PB四种组合 组合 含义 高PE、高PB 只有当一个公司预期将快速增长，并且在增长期间以及在增长发生以后享有异常高的ROE时，公司的PE和PB都是高的； 高PB、低PE 当一个公司也许在现有的投资上仍享有高的ROE，但不再快速增长时，它将具有高PB、低PE； 高PE、低PB 当一个复苏的公司预期将从暂时的低盈利水平上增长，但是竞争又阻碍它回复到异常高的ROE时，它将具有高PE和低PB； 低PE、低PB 当一个公司的盈利预期既没有增长也没有高ROE，它将具有低PE、低PB。 ","date":"2021-02-20","objectID":"/combine-of-pe-pb/:0:0","series":null,"tags":["投资理财"],"title":"PE+PB四种组合","uri":"/combine-of-pe-pb/#pe-pb四种组合"},{"categories":["IT备忘"],"content":"Docker安装OpenWRT","date":"2021-02-17","objectID":"/install-openwrt-in-docker/","series":null,"tags":["docker","openwrt"],"title":"Docker安装OpenWRT","uri":"/install-openwrt-in-docker/"},{"categories":["IT备忘"],"content":"\rDocker安装OpenWRT","date":"2021-02-17","objectID":"/install-openwrt-in-docker/:0:0","series":null,"tags":["docker","openwrt"],"title":"Docker安装OpenWRT","uri":"/install-openwrt-in-docker/#docker安装openwrt"},{"categories":["IT备忘"],"content":"\r打开网卡混杂模式sudo ip link set eth0 promisc on ","date":"2021-02-17","objectID":"/install-openwrt-in-docker/:1:0","series":null,"tags":["docker","openwrt"],"title":"Docker安装OpenWRT","uri":"/install-openwrt-in-docker/#打开网卡混杂模式"},{"categories":["IT备忘"],"content":"\r创建网络(须结合实际网络情况，不能照抄命令) 使Docker支持IPV6， sudo nano /etc/docker/daemon.json { \"ipv6\": true, \"fixed-cidr-v6\": \"2001:db8:1::/80\" } 然后 sudo systemctl restart docker (需要指定docker网卡做NAT: sudo ip6tables -t nat -A POSTROUTING -s 2001:db8:1::/80 ! -o docker0 -j MASQUERADE sudo ip6tables -t nat -L sudo ip6tables-save \u003e /etc/ip6tables.up.rules sudo echo \"ip6tables-restore \u003c /etc/ip6tables.up.rules\" \u003e\u003e /etc/rc.local ) docker network create -d macvlan \\ --subnet=192.168.10.0/24 --gateway=192.168.10.1 \\ --ipv6 --subnet=fe80::/16 --gateway=fe80::8edc:d4ff:fe21:437e \\ -o parent=eth0 -o macvlan_mode=bridge openwrt (fe80::728b:cdff:fece:7bf8为网卡ipv6地址) docker network create -d macvlan \\ --subnet=192.168.10.0/24 --gateway=192.168.10.1 \\ --ipv6 --subnet=2001:db8:1::/80 --gateway=2001:db8:1::/80 \\ -o parent=eth0 -o macvlan_mode=bridge openwrt (fe80::728b:cdff:fece:7bf8为路由器ipv6地址) docker network create -d macvlan \\ --subnet=192.168.10.0/24 --gateway=192.168.10.1 \\ --ipv6 \\ -o parent=eth0 -o macvlan_mode=bridge openwrt 这里因为是创建的macvlan网络，因此docker不会为此创建网关路由等等设置，因此只能与公网IPV6用相同的前缀，并且指定路由网关作为自动的网关。 问题：这里的IPV6地址是手动指定的，当光猫重新拨号时，前缀和路由网关的IPv6地址会改变，这里也需要修改。 EDIT: 直接使用–ipv6而不指定subnet和gateway的话，只要指定宿主机的IPv6的NAT就可以访问IPv6外网了： sudo ip6tables -t nat -I POSTROUTING -j MASQUERADE sudo service ip6tables save 但如果要让外网能访问container，有两方法： 使用网卡的NDP，IP发现协议 手动分配IPv6 TODO: 测试使用默认IPv6设置，看看分配的地址 docker commit -m \"Backup before IPv6\" -a \"Henry Tian \u003cchariothy@gmail.com\u003e\" openwrt chariothy/openwrt docker container update --restart=no openwrt ip addr add 2409:8a20:b206:71f7::99 dev wrt0 ip route add 2001:db8:1::99 dev wrt0 up route -A inet6 add default gw fe80::728b:cdff:fece:7bf8 dev eth0 ","date":"2021-02-17","objectID":"/install-openwrt-in-docker/:2:0","series":null,"tags":["docker","openwrt"],"title":"Docker安装OpenWRT","uri":"/install-openwrt-in-docker/#创建网络"},{"categories":["IT备忘"],"content":"\r创建命令备忘 docker run \\ --restart unless-stopped \\ --name openwrt \\ -d -it \\ --ip=192.168.10.99 \\ --ip6=\"fe80::99\" \\ --sysctl net.ipv6.conf.all.disable_ipv6=0 \\ --sysctl net.ipv6.conf.all.forwarding=1 \\ --network=openwrt \\ -v openwrt:/vol \\ -v /etc/localtime:/etc/localtime \\ --privileged \\ sulinggg/openwrt:rpi3 /sbin/init docker run \\ --restart unless-stopped \\ --name openwrt \\ -d -it \\ --ip=192.168.1.99 \\ --ip6 \\ --network=openwrt \\ -v openwrt:/vol \\ -v /etc/localtime:/etc/localtime \\ --privileged \\ sulinggg/openwrt:x86_64 /sbin/init docker run \\ --restart unless-stopped \\ --name ows \\ -d -it \\ --ip=192.168.1.100 \\ --network=openwrt \\ -v ows:/vol \\ -v /etc/localtime:/etc/localtime \\ --privileged \\ chariothy/openwrt-slim:x86_64 /sbin/init docker run \\ --restart unless-stopped \\ --name ows \\ -d -it \\ --ip=192.168.10.100 \\ --network=openwrt \\ -v ows:/vol \\ -v /etc/localtime:/etc/localtime \\ --privileged \\ buddyfly/openwrt-aarch64 /sbin/init docker exec -it openwrt bash vi /etc/config/network config interface 'lan' option type 'bridge' option ifname 'eth0' option proto 'static' option ipaddr '192.168.10.99' option netmask '255.255.255.0' option ip6assign '60' option gateway '192.168.10.1' option broadcast '192.168.10.255' option dns '192.168.10.1' /etc/init.d/network restart 关闭 DHCP 服务 主路由 DHCP / DNS设置 ","date":"2021-02-17","objectID":"/install-openwrt-in-docker/:3:0","series":null,"tags":["docker","openwrt"],"title":"Docker安装OpenWRT","uri":"/install-openwrt-in-docker/#创建命令备忘"},{"categories":["IT备忘"],"content":"\rOpenWrt无法与宿主机通信的解决方法（以下操作都在宿主机上运行） ","date":"2021-02-17","objectID":"/install-openwrt-in-docker/:4:0","series":null,"tags":["docker","openwrt"],"title":"Docker安装OpenWRT","uri":"/install-openwrt-in-docker/#openwrt无法与宿主机通信的解决方法"},{"categories":["IT备忘"],"content":"\r新增一个叫mynet(不要和容器的macvlan重名)的macvlan接口sudo ip link add wrt0 link eth0 type macvlan mode bridge ","date":"2021-02-17","objectID":"/install-openwrt-in-docker/:4:1","series":null,"tags":["docker","openwrt"],"title":"Docker安装OpenWRT","uri":"/install-openwrt-in-docker/#新增一个叫mynet不要和容器的macvlan重名的macvlan接口"},{"categories":["IT备忘"],"content":"\r为该接口分配ip，并启用 sudo ip addr add 192.168.10.55 dev wrt0 sudo ip link set wrt0 up ","date":"2021-02-17","objectID":"/install-openwrt-in-docker/:4:2","series":null,"tags":["docker","openwrt"],"title":"Docker安装OpenWRT","uri":"/install-openwrt-in-docker/#为该接口分配ip并启用"},{"categories":["IT备忘"],"content":"\r修改路由，使宿主机到192.168.10.99的通信全部经由mynet进行sudo ip route add 192.168.10.99 dev wrt0 ","date":"2021-02-17","objectID":"/install-openwrt-in-docker/:4:3","series":null,"tags":["docker","openwrt"],"title":"Docker安装OpenWRT","uri":"/install-openwrt-in-docker/#修改路由使宿主机到1921681099的通信全部经由mynet进行"},{"categories":["IT备忘"],"content":"\r使用OpenWrt作为网关","date":"2021-02-17","objectID":"/install-openwrt-in-docker/:5:0","series":null,"tags":["docker","openwrt"],"title":"Docker安装OpenWRT","uri":"/install-openwrt-in-docker/#使用openwrt作为网关"},{"categories":["IT备忘"],"content":"\r删除原有的路由 sudo route delete default gw 192.168.10.99 eth0 #如果在路由器指定99为网关 sudo route delete default gw 192.168.10.1 eth0 #如果路由器还是默认1为网关 ","date":"2021-02-17","objectID":"/install-openwrt-in-docker/:5:1","series":null,"tags":["docker","openwrt"],"title":"Docker安装OpenWRT","uri":"/install-openwrt-in-docker/#删除原有的路由"},{"categories":["IT备忘"],"content":"\r增加从wrt0网口到达docker的路由 sudo ip route add default via 192.168.1.99 dev wrt0 metric 1 sudo ip route del default via 192.168.1.1 dev eno1 onlink sudo ip route add default via 192.168.1.1 dev eno1 onlink metric 100 ","date":"2021-02-17","objectID":"/install-openwrt-in-docker/:5:2","series":null,"tags":["docker","openwrt"],"title":"Docker安装OpenWRT","uri":"/install-openwrt-in-docker/#增加从wrt0网口到达docker的路由"},{"categories":["IT备忘"],"content":"\r网卡设置 #iface eth0 inet dhcp iface eth0 inet static address 192.168.10.5 netmask 255.255.255.0 gateway 192.168.10.99 #iface eth0 inet6 dhcp up ip link add wrt0 link eth0 type macvlan mode bridge up ip addr add 192.168.10.55 dev wrt0 up ip link set wrt0 up up ip route add 192.168.10.99 dev wrt0 up route delete default gw 192.168.10.99 eth0 up ip route add default via 192.168.10.99 dev wrt0 dns-nameservers 192.168.10.99 dns-nameservers 1.1.1.1 iface eth0 inet6 dhcp up route -A inet6 add default gw fe80::728b:cdff:fece:7bf8 dev eth0 dns-nameservers 2400:3200::1 dns-nameservers 240C::6644 ","date":"2021-02-17","objectID":"/install-openwrt-in-docker/:5:3","series":null,"tags":["docker","openwrt"],"title":"Docker安装OpenWRT","uri":"/install-openwrt-in-docker/#网卡设置"},{"categories":["IT备忘"],"content":"\r更新：2022-2-17现在已经基本放弃了在docker中使用openwrt，旁路由有时不太稳定，限制也有点多。 ","date":"2021-02-17","objectID":"/install-openwrt-in-docker/:6:0","series":null,"tags":["docker","openwrt"],"title":"Docker安装OpenWRT","uri":"/install-openwrt-in-docker/#更新2022-2-17"},{"categories":["IT备忘"],"content":"softether docker command","date":"2021-02-14","objectID":"/docker-softether-command/","series":null,"tags":["docker"],"title":"softether docker command","uri":"/docker-softether-command/"},{"categories":["IT备忘"],"content":"\rsoftether","date":"2021-02-14","objectID":"/docker-softether-command/:0:0","series":null,"tags":["docker"],"title":"softether docker command","uri":"/docker-softether-command/#softether"},{"categories":["IT备忘"],"content":"\rclient docker run -d --name=softether-vpnclient \\ --net=host --privileged \\ -e VPN_SERVER=tq.thy.pub \\ -e VPN_PORT=45555 \\ -e ACCOUNT_USER=henry \\ -e ACCOUNT_PASS=password \\ -e VIRTUAL_HUB=VPNAT \\ -e TAP_IPADDR=192.168.30.111 \\ mitsutaka/softether-vpnclient ","date":"2021-02-14","objectID":"/docker-softether-command/:1:0","series":null,"tags":["docker"],"title":"softether docker command","uri":"/docker-softether-command/#client"},{"categories":["软件开发"],"content":"Oracle-XMLTable-使用教程与实例","date":"2021-01-23","objectID":"/oracle-xmltable-tutorial-examples/","series":null,"tags":["Database"],"title":"Oracle-XMLTable-使用教程与实例","uri":"/oracle-xmltable-tutorial-examples/"},{"categories":["软件开发"],"content":"\rOracle-XMLTable-使用教程与实例","date":"2021-01-23","objectID":"/oracle-xmltable-tutorial-examples/:0:0","series":null,"tags":["Database"],"title":"Oracle-XMLTable-使用教程与实例","uri":"/oracle-xmltable-tutorial-examples/#oracle-xmltable-使用教程与实例"},{"categories":["软件开发"],"content":"\r从Oracle 10g开始甲骨文公司新增了XQuery和XMLTable两个功能作为处理XML的武器。 XMLQuery一样，您可以使用XQuery语言构造XML数据和查询XML和关系数据。你可以使用XMLTable从XQuery查询结果创建关系表和列。 ","date":"2021-01-23","objectID":"/oracle-xmltable-tutorial-examples/:1:0","series":null,"tags":["Database"],"title":"Oracle-XMLTable-使用教程与实例","uri":"/oracle-xmltable-tutorial-examples/#从oracle-10g开始"},{"categories":["软件开发"],"content":"\r本文我们将了解Oracle XMLTable函数并且通过例子介绍XMLTable函数的用法。 考虑到员工会有一些XML数据，所以我们创建一个EMPLOYEES表： Create TABLE EMPLOYEES ( id NUMBER, data XMLTYPE ) 表创建完成后，我们往表里插入一些数据: Insert INTO EMPLOYEES VALUES (1, xmltype ('\u003cEmployees\u003e \u003cEmployee emplid=\"1111\" type=\"admin\"\u003e \u003cfirstname\u003eJohn\u003c/firstname\u003e \u003clastname\u003eWatson\u003c/lastname\u003e \u003cage\u003e30\u003c/age\u003e \u003cemail\u003ejohnwatson@sh.com\u003c/email\u003e \u003c/Employee\u003e \u003cEmployee emplid=\"2222\" type=\"admin\"\u003e \u003cfirstname\u003eSherlock\u003c/firstname\u003e \u003clastname\u003eHomes\u003c/lastname\u003e \u003cage\u003e32\u003c/age\u003e \u003cemail\u003esherlock@sh.com\u003c/email\u003e \u003c/Employee\u003e \u003cEmployee emplid=\"3333\" type=\"user\"\u003e \u003cfirstname\u003eJim\u003c/firstname\u003e \u003clastname\u003eMoriarty\u003c/lastname\u003e \u003cage\u003e52\u003c/age\u003e \u003cemail\u003ejim@sh.com\u003c/email\u003e \u003c/Employee\u003e \u003cEmployee emplid=\"4444\" type=\"user\"\u003e \u003cfirstname\u003eMycroft\u003c/firstname\u003e \u003clastname\u003eHolmes\u003c/lastname\u003e \u003cage\u003e41\u003c/age\u003e \u003cemail\u003emycroft@sh.com\u003c/email\u003e \u003c/Employee\u003e \u003c/Employees\u003e')); 注意：XML包含了员工的相关数据，在我们开始学习之前我们首先明确几个数据： 有4名员工在我们的XML文件 每个员工都有通过属性定义一个唯一的员工id emplid 每个员工也有一个属性type，定义雇员是否是管理员或用户。 每个员工都有四个子节点： firstname ， lastname ， age和email 年龄是多少 现在我们可以使用Oracle XMLTable函数从XML中检索不同的信息。 ","date":"2021-01-23","objectID":"/oracle-xmltable-tutorial-examples/:1:1","series":null,"tags":["Database"],"title":"Oracle-XMLTable-使用教程与实例","uri":"/oracle-xmltable-tutorial-examples/#本文我们将了解oracle-xmltable函数"},{"categories":["软件开发"],"content":"\r学习XPath表达式使用XMLTable函数之前最好知道一点关于XPath。XPath使用路径表达式来选择XML文档中的节点或节点列表。看下面的列表： Expression Description nodename 选择所有名称为\"nodename\"的节点 / 选择根节点 // 从当前节点选择文档中相匹配的节点，无论他们在哪里 . 选择当前节点 .. 选择当前节点的父节点 @ 选择属性 employee 选择所有名称为\"employee\"的节点 employees/employee 选择所有子节点为employee的employees节点 //employee 选择所有employee的元素，无论他们在哪里 下面的表达式称为谓词列表。谓词在方括号中定义 [ … ]。他们被用来找到一个特定的节点或包含一个特定值的节点。 Path Expression Result /employees/employee[1] 选择第一个employee节点,它是employees的子节点。 /employees/employee[last()] 选择最后一个employee元素，它是employees的子节点 /employees/employee[last()-1] 选择是employees子元素的倒数第二个employee元素 //employee[@type=‘admin’] 选择所有具有与’admin’的值的属性命名类型的employee元素 其他更多的表达式可以参考Oracle官方手册 ","date":"2021-01-23","objectID":"/oracle-xmltable-tutorial-examples/:1:2","series":null,"tags":["Database"],"title":"Oracle-XMLTable-使用教程与实例","uri":"/oracle-xmltable-tutorial-examples/#学习xpath表达式"},{"categories":["软件开发"],"content":"\rOracle XMLTable函数的基础知识\r读取Employees中所有firstname和lastname在这个查询中,我们使用XMLTable函数从EMPLOYEES表解析XML内容。 select t.id, x.* from employees t, xmltable('/Employees/Employee' passing t.data columns firstname varchar2(30) path 'firstname', lastname varchar2(30) path 'lastname') x where t.id = 1; // 注XMLTable函数的语法： XMLTable('\u003cXQuery\u003e' PASSING \u003cxml column\u003e COLUMNS \u003cnew column name\u003e \u003ccolumn type\u003e PATH \u003cXQuery path\u003e) XMLTABLE函数包含一个XQuery行表达式和由一个或多个列表达式组成的COLUMNS子句。 在上面的语句中，行表达式是 XPath /Employees/Employee。 PASSING子句中的t.data指的是employees表中的XML列中的数据。 COLUMNS 子句用于将XML数据转换成关系数据，这里每个参数都定义了一个列名和SQL数据类型。 在上面的查询中，我们定义了firstname 和 lastname列并指向PATH的firstname 和 lastname或者选定的节点。 输出： 使用text()读取节点值在上面的教程中，我们读取到了firstname / lastname节点。 通常我们还需要获取节点的文本值，下面的例子中，我们选取/Employees/Employee/firstname路径，并使用text()获取节点的值。 下面查询employees中所有的firstname select t.id, x.* from employees t, xmltable('/Employees/Employee/firstname' passing t.data columns firstname varchar2(30) path 'text()') x where t.id = 1 输出： 不仅仅是text()表达式，Oracle还提供了其他很多有用的表达式，如 item(), node(), attribute(), element(), document-node(), namespace(), text(), xs:integer, xs:string。 读取所选节点的属性XML节点定了相关属性，我们也可以读取到节点的这些属性，下面的查询是找出employee节点的type属性： select emp.id, x.* from employees emp, xmltable('/Employees/Employee' passing emp.data columns firstname varchar2(30) path 'firstname', type varchar2(30) path '@type') x; 输出： 使用ID读取特定的记录 select t.id, x.* from employees t, xmltable('/Employees/Employee[@emplid=2222]' passing t.data columns firstname varchar2(30) path 'firstname', lastname varchar2(30) path 'lastname') x where t.id = 1; 输出： 读取所有类型是admin的员工的firstname 和 lastname select t.id, x.* from employees t, xmltable('/Employees/Employee[@type=\"admin\"]' passing t.data columns firstname varchar2(30) path 'firstname', lastname varchar2(30) path 'lastname') x where t.id = 1; 输出： 读取年龄超过40的所有员工的firstname 和 lastname select t.id, x.* from employees t, xmltable('/Employees/Employee[age\u003e40]' passing t.data columns firstname varchar2(30) path 'firstname', lastname varchar2(30) path 'lastname', age varchar2(30) path 'age') x where t.id = 1; 输出： ","date":"2021-01-23","objectID":"/oracle-xmltable-tutorial-examples/:1:3","series":null,"tags":["Database"],"title":"Oracle-XMLTable-使用教程与实例","uri":"/oracle-xmltable-tutorial-examples/#oracle-xmltable函数的基础知识"},{"categories":["软件开发"],"content":"\rOracle XMLTable函数的基础知识\r读取Employees中所有firstname和lastname在这个查询中,我们使用XMLTable函数从EMPLOYEES表解析XML内容。 select t.id, x.* from employees t, xmltable('/Employees/Employee' passing t.data columns firstname varchar2(30) path 'firstname', lastname varchar2(30) path 'lastname') x where t.id = 1; // 注XMLTable函数的语法： XMLTable('' PASSING COLUMNS PATH ) XMLTABLE函数包含一个XQuery行表达式和由一个或多个列表达式组成的COLUMNS子句。 在上面的语句中，行表达式是 XPath /Employees/Employee。 PASSING子句中的t.data指的是employees表中的XML列中的数据。 COLUMNS 子句用于将XML数据转换成关系数据，这里每个参数都定义了一个列名和SQL数据类型。 在上面的查询中，我们定义了firstname 和 lastname列并指向PATH的firstname 和 lastname或者选定的节点。 输出： 使用text()读取节点值在上面的教程中，我们读取到了firstname / lastname节点。 通常我们还需要获取节点的文本值，下面的例子中，我们选取/Employees/Employee/firstname路径，并使用text()获取节点的值。 下面查询employees中所有的firstname select t.id, x.* from employees t, xmltable('/Employees/Employee/firstname' passing t.data columns firstname varchar2(30) path 'text()') x where t.id = 1 输出： 不仅仅是text()表达式，Oracle还提供了其他很多有用的表达式，如 item(), node(), attribute(), element(), document-node(), namespace(), text(), xs:integer, xs:string。 读取所选节点的属性XML节点定了相关属性，我们也可以读取到节点的这些属性，下面的查询是找出employee节点的type属性： select emp.id, x.* from employees emp, xmltable('/Employees/Employee' passing emp.data columns firstname varchar2(30) path 'firstname', type varchar2(30) path '@type') x; 输出： 使用ID读取特定的记录 select t.id, x.* from employees t, xmltable('/Employees/Employee[@emplid=2222]' passing t.data columns firstname varchar2(30) path 'firstname', lastname varchar2(30) path 'lastname') x where t.id = 1; 输出： 读取所有类型是admin的员工的firstname 和 lastname select t.id, x.* from employees t, xmltable('/Employees/Employee[@type=\"admin\"]' passing t.data columns firstname varchar2(30) path 'firstname', lastname varchar2(30) path 'lastname') x where t.id = 1; 输出： 读取年龄超过40的所有员工的firstname 和 lastname select t.id, x.* from employees t, xmltable('/Employees/Employee[age\u003e40]' passing t.data columns firstname varchar2(30) path 'firstname', lastname varchar2(30) path 'lastname', age varchar2(30) path 'age') x where t.id = 1; 输出： ","date":"2021-01-23","objectID":"/oracle-xmltable-tutorial-examples/:1:3","series":null,"tags":["Database"],"title":"Oracle-XMLTable-使用教程与实例","uri":"/oracle-xmltable-tutorial-examples/#读取employees中所有firstname和lastname"},{"categories":["软件开发"],"content":"\rOracle XMLTable函数的基础知识\r读取Employees中所有firstname和lastname在这个查询中,我们使用XMLTable函数从EMPLOYEES表解析XML内容。 select t.id, x.* from employees t, xmltable('/Employees/Employee' passing t.data columns firstname varchar2(30) path 'firstname', lastname varchar2(30) path 'lastname') x where t.id = 1; // 注XMLTable函数的语法： XMLTable('' PASSING COLUMNS PATH ) XMLTABLE函数包含一个XQuery行表达式和由一个或多个列表达式组成的COLUMNS子句。 在上面的语句中，行表达式是 XPath /Employees/Employee。 PASSING子句中的t.data指的是employees表中的XML列中的数据。 COLUMNS 子句用于将XML数据转换成关系数据，这里每个参数都定义了一个列名和SQL数据类型。 在上面的查询中，我们定义了firstname 和 lastname列并指向PATH的firstname 和 lastname或者选定的节点。 输出： 使用text()读取节点值在上面的教程中，我们读取到了firstname / lastname节点。 通常我们还需要获取节点的文本值，下面的例子中，我们选取/Employees/Employee/firstname路径，并使用text()获取节点的值。 下面查询employees中所有的firstname select t.id, x.* from employees t, xmltable('/Employees/Employee/firstname' passing t.data columns firstname varchar2(30) path 'text()') x where t.id = 1 输出： 不仅仅是text()表达式，Oracle还提供了其他很多有用的表达式，如 item(), node(), attribute(), element(), document-node(), namespace(), text(), xs:integer, xs:string。 读取所选节点的属性XML节点定了相关属性，我们也可以读取到节点的这些属性，下面的查询是找出employee节点的type属性： select emp.id, x.* from employees emp, xmltable('/Employees/Employee' passing emp.data columns firstname varchar2(30) path 'firstname', type varchar2(30) path '@type') x; 输出： 使用ID读取特定的记录 select t.id, x.* from employees t, xmltable('/Employees/Employee[@emplid=2222]' passing t.data columns firstname varchar2(30) path 'firstname', lastname varchar2(30) path 'lastname') x where t.id = 1; 输出： 读取所有类型是admin的员工的firstname 和 lastname select t.id, x.* from employees t, xmltable('/Employees/Employee[@type=\"admin\"]' passing t.data columns firstname varchar2(30) path 'firstname', lastname varchar2(30) path 'lastname') x where t.id = 1; 输出： 读取年龄超过40的所有员工的firstname 和 lastname select t.id, x.* from employees t, xmltable('/Employees/Employee[age\u003e40]' passing t.data columns firstname varchar2(30) path 'firstname', lastname varchar2(30) path 'lastname', age varchar2(30) path 'age') x where t.id = 1; 输出： ","date":"2021-01-23","objectID":"/oracle-xmltable-tutorial-examples/:1:3","series":null,"tags":["Database"],"title":"Oracle-XMLTable-使用教程与实例","uri":"/oracle-xmltable-tutorial-examples/#使用text读取节点值"},{"categories":["软件开发"],"content":"\rOracle XMLTable函数的基础知识\r读取Employees中所有firstname和lastname在这个查询中,我们使用XMLTable函数从EMPLOYEES表解析XML内容。 select t.id, x.* from employees t, xmltable('/Employees/Employee' passing t.data columns firstname varchar2(30) path 'firstname', lastname varchar2(30) path 'lastname') x where t.id = 1; // 注XMLTable函数的语法： XMLTable('' PASSING COLUMNS PATH ) XMLTABLE函数包含一个XQuery行表达式和由一个或多个列表达式组成的COLUMNS子句。 在上面的语句中，行表达式是 XPath /Employees/Employee。 PASSING子句中的t.data指的是employees表中的XML列中的数据。 COLUMNS 子句用于将XML数据转换成关系数据，这里每个参数都定义了一个列名和SQL数据类型。 在上面的查询中，我们定义了firstname 和 lastname列并指向PATH的firstname 和 lastname或者选定的节点。 输出： 使用text()读取节点值在上面的教程中，我们读取到了firstname / lastname节点。 通常我们还需要获取节点的文本值，下面的例子中，我们选取/Employees/Employee/firstname路径，并使用text()获取节点的值。 下面查询employees中所有的firstname select t.id, x.* from employees t, xmltable('/Employees/Employee/firstname' passing t.data columns firstname varchar2(30) path 'text()') x where t.id = 1 输出： 不仅仅是text()表达式，Oracle还提供了其他很多有用的表达式，如 item(), node(), attribute(), element(), document-node(), namespace(), text(), xs:integer, xs:string。 读取所选节点的属性XML节点定了相关属性，我们也可以读取到节点的这些属性，下面的查询是找出employee节点的type属性： select emp.id, x.* from employees emp, xmltable('/Employees/Employee' passing emp.data columns firstname varchar2(30) path 'firstname', type varchar2(30) path '@type') x; 输出： 使用ID读取特定的记录 select t.id, x.* from employees t, xmltable('/Employees/Employee[@emplid=2222]' passing t.data columns firstname varchar2(30) path 'firstname', lastname varchar2(30) path 'lastname') x where t.id = 1; 输出： 读取所有类型是admin的员工的firstname 和 lastname select t.id, x.* from employees t, xmltable('/Employees/Employee[@type=\"admin\"]' passing t.data columns firstname varchar2(30) path 'firstname', lastname varchar2(30) path 'lastname') x where t.id = 1; 输出： 读取年龄超过40的所有员工的firstname 和 lastname select t.id, x.* from employees t, xmltable('/Employees/Employee[age\u003e40]' passing t.data columns firstname varchar2(30) path 'firstname', lastname varchar2(30) path 'lastname', age varchar2(30) path 'age') x where t.id = 1; 输出： ","date":"2021-01-23","objectID":"/oracle-xmltable-tutorial-examples/:1:3","series":null,"tags":["Database"],"title":"Oracle-XMLTable-使用教程与实例","uri":"/oracle-xmltable-tutorial-examples/#读取所选节点的属性"},{"categories":["软件开发"],"content":"\rOracle XMLTable函数的基础知识\r读取Employees中所有firstname和lastname在这个查询中,我们使用XMLTable函数从EMPLOYEES表解析XML内容。 select t.id, x.* from employees t, xmltable('/Employees/Employee' passing t.data columns firstname varchar2(30) path 'firstname', lastname varchar2(30) path 'lastname') x where t.id = 1; // 注XMLTable函数的语法： XMLTable('' PASSING COLUMNS PATH ) XMLTABLE函数包含一个XQuery行表达式和由一个或多个列表达式组成的COLUMNS子句。 在上面的语句中，行表达式是 XPath /Employees/Employee。 PASSING子句中的t.data指的是employees表中的XML列中的数据。 COLUMNS 子句用于将XML数据转换成关系数据，这里每个参数都定义了一个列名和SQL数据类型。 在上面的查询中，我们定义了firstname 和 lastname列并指向PATH的firstname 和 lastname或者选定的节点。 输出： 使用text()读取节点值在上面的教程中，我们读取到了firstname / lastname节点。 通常我们还需要获取节点的文本值，下面的例子中，我们选取/Employees/Employee/firstname路径，并使用text()获取节点的值。 下面查询employees中所有的firstname select t.id, x.* from employees t, xmltable('/Employees/Employee/firstname' passing t.data columns firstname varchar2(30) path 'text()') x where t.id = 1 输出： 不仅仅是text()表达式，Oracle还提供了其他很多有用的表达式，如 item(), node(), attribute(), element(), document-node(), namespace(), text(), xs:integer, xs:string。 读取所选节点的属性XML节点定了相关属性，我们也可以读取到节点的这些属性，下面的查询是找出employee节点的type属性： select emp.id, x.* from employees emp, xmltable('/Employees/Employee' passing emp.data columns firstname varchar2(30) path 'firstname', type varchar2(30) path '@type') x; 输出： 使用ID读取特定的记录 select t.id, x.* from employees t, xmltable('/Employees/Employee[@emplid=2222]' passing t.data columns firstname varchar2(30) path 'firstname', lastname varchar2(30) path 'lastname') x where t.id = 1; 输出： 读取所有类型是admin的员工的firstname 和 lastname select t.id, x.* from employees t, xmltable('/Employees/Employee[@type=\"admin\"]' passing t.data columns firstname varchar2(30) path 'firstname', lastname varchar2(30) path 'lastname') x where t.id = 1; 输出： 读取年龄超过40的所有员工的firstname 和 lastname select t.id, x.* from employees t, xmltable('/Employees/Employee[age\u003e40]' passing t.data columns firstname varchar2(30) path 'firstname', lastname varchar2(30) path 'lastname', age varchar2(30) path 'age') x where t.id = 1; 输出： ","date":"2021-01-23","objectID":"/oracle-xmltable-tutorial-examples/:1:3","series":null,"tags":["Database"],"title":"Oracle-XMLTable-使用教程与实例","uri":"/oracle-xmltable-tutorial-examples/#使用id读取特定的记录"},{"categories":["软件开发"],"content":"\rOracle XMLTable函数的基础知识\r读取Employees中所有firstname和lastname在这个查询中,我们使用XMLTable函数从EMPLOYEES表解析XML内容。 select t.id, x.* from employees t, xmltable('/Employees/Employee' passing t.data columns firstname varchar2(30) path 'firstname', lastname varchar2(30) path 'lastname') x where t.id = 1; // 注XMLTable函数的语法： XMLTable('' PASSING COLUMNS PATH ) XMLTABLE函数包含一个XQuery行表达式和由一个或多个列表达式组成的COLUMNS子句。 在上面的语句中，行表达式是 XPath /Employees/Employee。 PASSING子句中的t.data指的是employees表中的XML列中的数据。 COLUMNS 子句用于将XML数据转换成关系数据，这里每个参数都定义了一个列名和SQL数据类型。 在上面的查询中，我们定义了firstname 和 lastname列并指向PATH的firstname 和 lastname或者选定的节点。 输出： 使用text()读取节点值在上面的教程中，我们读取到了firstname / lastname节点。 通常我们还需要获取节点的文本值，下面的例子中，我们选取/Employees/Employee/firstname路径，并使用text()获取节点的值。 下面查询employees中所有的firstname select t.id, x.* from employees t, xmltable('/Employees/Employee/firstname' passing t.data columns firstname varchar2(30) path 'text()') x where t.id = 1 输出： 不仅仅是text()表达式，Oracle还提供了其他很多有用的表达式，如 item(), node(), attribute(), element(), document-node(), namespace(), text(), xs:integer, xs:string。 读取所选节点的属性XML节点定了相关属性，我们也可以读取到节点的这些属性，下面的查询是找出employee节点的type属性： select emp.id, x.* from employees emp, xmltable('/Employees/Employee' passing emp.data columns firstname varchar2(30) path 'firstname', type varchar2(30) path '@type') x; 输出： 使用ID读取特定的记录 select t.id, x.* from employees t, xmltable('/Employees/Employee[@emplid=2222]' passing t.data columns firstname varchar2(30) path 'firstname', lastname varchar2(30) path 'lastname') x where t.id = 1; 输出： 读取所有类型是admin的员工的firstname 和 lastname select t.id, x.* from employees t, xmltable('/Employees/Employee[@type=\"admin\"]' passing t.data columns firstname varchar2(30) path 'firstname', lastname varchar2(30) path 'lastname') x where t.id = 1; 输出： 读取年龄超过40的所有员工的firstname 和 lastname select t.id, x.* from employees t, xmltable('/Employees/Employee[age\u003e40]' passing t.data columns firstname varchar2(30) path 'firstname', lastname varchar2(30) path 'lastname', age varchar2(30) path 'age') x where t.id = 1; 输出： ","date":"2021-01-23","objectID":"/oracle-xmltable-tutorial-examples/:1:3","series":null,"tags":["Database"],"title":"Oracle-XMLTable-使用教程与实例","uri":"/oracle-xmltable-tutorial-examples/#读取所有类型是admin的员工的firstname-和-lastname"},{"categories":["软件开发"],"content":"\rOracle XMLTable函数的基础知识\r读取Employees中所有firstname和lastname在这个查询中,我们使用XMLTable函数从EMPLOYEES表解析XML内容。 select t.id, x.* from employees t, xmltable('/Employees/Employee' passing t.data columns firstname varchar2(30) path 'firstname', lastname varchar2(30) path 'lastname') x where t.id = 1; // 注XMLTable函数的语法： XMLTable('' PASSING COLUMNS PATH ) XMLTABLE函数包含一个XQuery行表达式和由一个或多个列表达式组成的COLUMNS子句。 在上面的语句中，行表达式是 XPath /Employees/Employee。 PASSING子句中的t.data指的是employees表中的XML列中的数据。 COLUMNS 子句用于将XML数据转换成关系数据，这里每个参数都定义了一个列名和SQL数据类型。 在上面的查询中，我们定义了firstname 和 lastname列并指向PATH的firstname 和 lastname或者选定的节点。 输出： 使用text()读取节点值在上面的教程中，我们读取到了firstname / lastname节点。 通常我们还需要获取节点的文本值，下面的例子中，我们选取/Employees/Employee/firstname路径，并使用text()获取节点的值。 下面查询employees中所有的firstname select t.id, x.* from employees t, xmltable('/Employees/Employee/firstname' passing t.data columns firstname varchar2(30) path 'text()') x where t.id = 1 输出： 不仅仅是text()表达式，Oracle还提供了其他很多有用的表达式，如 item(), node(), attribute(), element(), document-node(), namespace(), text(), xs:integer, xs:string。 读取所选节点的属性XML节点定了相关属性，我们也可以读取到节点的这些属性，下面的查询是找出employee节点的type属性： select emp.id, x.* from employees emp, xmltable('/Employees/Employee' passing emp.data columns firstname varchar2(30) path 'firstname', type varchar2(30) path '@type') x; 输出： 使用ID读取特定的记录 select t.id, x.* from employees t, xmltable('/Employees/Employee[@emplid=2222]' passing t.data columns firstname varchar2(30) path 'firstname', lastname varchar2(30) path 'lastname') x where t.id = 1; 输出： 读取所有类型是admin的员工的firstname 和 lastname select t.id, x.* from employees t, xmltable('/Employees/Employee[@type=\"admin\"]' passing t.data columns firstname varchar2(30) path 'firstname', lastname varchar2(30) path 'lastname') x where t.id = 1; 输出： 读取年龄超过40的所有员工的firstname 和 lastname select t.id, x.* from employees t, xmltable('/Employees/Employee[age\u003e40]' passing t.data columns firstname varchar2(30) path 'firstname', lastname varchar2(30) path 'lastname', age varchar2(30) path 'age') x where t.id = 1; 输出： ","date":"2021-01-23","objectID":"/oracle-xmltable-tutorial-examples/:1:3","series":null,"tags":["Database"],"title":"Oracle-XMLTable-使用教程与实例","uri":"/oracle-xmltable-tutorial-examples/#读取年龄超过40的所有员工的firstname-和-lastname"},{"categories":["生活随笔"],"content":"羽毛球穿线磅数","date":"2021-01-17","objectID":"/pound-value-of-badminton-thread/","series":null,"tags":["羽毛球"],"title":"羽毛球穿线磅数","uri":"/pound-value-of-badminton-thread/"},{"categories":["生活随笔"],"content":"\r羽毛球穿线磅数","date":"2021-01-17","objectID":"/pound-value-of-badminton-thread/:0:0","series":null,"tags":["羽毛球"],"title":"羽毛球穿线磅数","uri":"/pound-value-of-badminton-thread/#羽毛球穿线磅数"},{"categories":["生活随笔"],"content":"\r如果你的球拍要求磅数为24磅，一般会选择横线25，竖线23","date":"2021-01-17","objectID":"/pound-value-of-badminton-thread/:0:1","series":null,"tags":["羽毛球"],"title":"羽毛球穿线磅数","uri":"/pound-value-of-badminton-thread/#如果你的球拍要求磅数为24磅一般会选择横线25竖线23"},{"categories":["生活随笔"],"content":"\r如果你的球拍要求磅数为25磅，一般会选择横线26，竖线24","date":"2021-01-17","objectID":"/pound-value-of-badminton-thread/:0:2","series":null,"tags":["羽毛球"],"title":"羽毛球穿线磅数","uri":"/pound-value-of-badminton-thread/#如果你的球拍要求磅数为25磅一般会选择横线26竖线24"},{"categories":["生活随笔"],"content":"\r如果你的球拍要求磅数为26磅，一般会选择横线27，竖线25","date":"2021-01-17","objectID":"/pound-value-of-badminton-thread/:0:3","series":null,"tags":["羽毛球"],"title":"羽毛球穿线磅数","uri":"/pound-value-of-badminton-thread/#如果你的球拍要求磅数为26磅一般会选择横线27竖线25"},{"categories":["IT备忘"],"content":"crontab示例","date":"2021-01-15","objectID":"/crontab-examples/","series":null,"tags":["Linux","crontab"],"title":"crontab示例","uri":"/crontab-examples/"},{"categories":["IT备忘"],"content":"\rcrontab 示例 * * * * * /command path` 分钟 小时 日期 月份 星期 0-59 0-23 1-31 1-12 0-6（0表示周日） 43 21 * * * 21:43 执行 15 05 * * * 05:15 执行 0 17 * * * 17:00 执行 0 17 * * 1 每周一的 17:00 执行 0,10 17 * * 0,2,3 ! 每周日,周二,周三的 17:00和 17:10 执行 0-10 17 1 * * ! 毎月1日从 17:00到7:10 毎隔1分钟 执行 0 0 1,15 * 1 毎月1日和 15日和 一日的 0:00 执行 42 4 1 * * 毎月1日的 4:42分 执行 0 21 * * 1-6 ! 周一到周六 21:00 执行 0,10,20,30,40,50 * * * * 每隔10分 执行 */10 * * * * 每隔10分 执行 * 1 * * * 从1:0到1:59 每隔1分钟 执行 0 1 * * * 1:00 执行 0 */1 * * * 毎时0分 每隔1小时 执行 0 * * * * 毎时0分 每隔1小时 执行 2 8-20/3 * * * ! 8:02,11:02,14:02,17:02,20:02 执行 30 5 1,15 * * 1日 和 15日的 5:30 执行 ","date":"2021-01-15","objectID":"/crontab-examples/:0:0","series":null,"tags":["Linux","crontab"],"title":"crontab示例","uri":"/crontab-examples/#crontab-示例"},{"categories":["IT备忘"],"content":"tmux配置","date":"2021-01-15","objectID":"/tmux-config-remark/","series":null,"tags":["Linux","tmux"],"title":"tmux配置","uri":"/tmux-config-remark/"},{"categories":["IT备忘"],"content":" set -g mouse on set -g default-command /bin/zsh set -g default-terminal \"screen-256color\" #set-option -ga terminal-overrides \",*256col*:Tc\" set -g @sidebar-tree-command 'tree -C -L 2 -a' set -g terminal-overrides 'xterm*:smcup@:rmcup@' #set -g @plugin 'tmux-plugins/tpm' #set -g @plugin 'tmux-plugins/tmux-sensible' #set -g @plugin 'tmux-plugins/tmux-resurrect' #set -g @plugin 'tmux-plugins/tmux-sidebar' # To copy, left click and drag to highlight text in yellow, # then press ENTER then selected yellow block will disappear and will automatically be available in clibboard # In WSL pipe copy result to clip.exe # In MobaXterm pipe copy result to xclip (sudo yum install xorg-x11-xauth) #bind-key -T copy-mode Enter send-keys -X copy-pipe-and-cancel xclip #run '~/.tmux/plugins/tpm/tpm' ","date":"2021-01-15","objectID":"/tmux-config-remark/:0:0","series":null,"tags":["Linux","tmux"],"title":"tmux配置","uri":"/tmux-config-remark/#"},{"categories":["IT备忘"],"content":"debian安装podman","date":"2021-01-15","objectID":"/install-podman-on-debian/","series":null,"tags":["Linux","debian","podman"],"title":"debian安装podman","uri":"/install-podman-on-debian/"},{"categories":["IT备忘"],"content":"\rdebian安装podman","date":"2021-01-15","objectID":"/install-podman-on-debian/:0:0","series":null,"tags":["Linux","debian","podman"],"title":"debian安装podman","uri":"/install-podman-on-debian/#debian安装podman"},{"categories":["IT备忘"],"content":"\r首先最好将debain升级到11debain升级到11 ","date":"2021-01-15","objectID":"/install-podman-on-debian/:1:0","series":null,"tags":["Linux","debian","podman"],"title":"debian安装podman","uri":"/install-podman-on-debian/#首先最好将debain升级到11"},{"categories":["IT备忘"],"content":"\r安装podmansudo apt install podman ","date":"2021-01-15","objectID":"/install-podman-on-debian/:2:0","series":null,"tags":["Linux","debian","podman"],"title":"debian安装podman","uri":"/install-podman-on-debian/#安装podman"},{"categories":["IT备忘"],"content":"\r安装docker-composesudo curl -L \"https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose sudo chmod +x /usr/local/bin/docker-compose systemctl --user start podman.socket export DOCKER_HOST=unix://$XDG_RUNTIME_DIR/podman/podman.sock sudo nano /etc/containers/registries.conf # 加上 unqualified-search-registries=[\"docker.io\"] ","date":"2021-01-15","objectID":"/install-podman-on-debian/:3:0","series":null,"tags":["Linux","debian","podman"],"title":"debian安装podman","uri":"/install-podman-on-debian/#安装docker-compose"},{"categories":["IT备忘"],"content":"frpc docker command","date":"2021-01-12","objectID":"/docker-frpc-command/","series":null,"tags":["docker"],"title":"frpc docker command","uri":"/docker-frpc-command/"},{"categories":["IT备忘"],"content":"\rfrpc===============使用本机网络============== docker run -d -it \\ --restart unless-stopped \\ --name frpc \\ -v /etc/frp/frpc.toml:/etc/frp/frpc.toml \\ --network=host \\ snowdreamtech/frpc ","date":"2021-01-12","objectID":"/docker-frpc-command/:0:0","series":null,"tags":["docker"],"title":"frpc docker command","uri":"/docker-frpc-command/#frpc"},{"categories":["IT备忘"],"content":"zsh配置","date":"2021-01-11","objectID":"/zsh-config-remark/","series":null,"tags":["Linux","zsh"],"title":"zsh配置","uri":"/zsh-config-remark/"},{"categories":["IT备忘"],"content":"\rZSH 配置","date":"2021-01-11","objectID":"/zsh-config-remark/:0:0","series":null,"tags":["Linux","zsh"],"title":"zsh配置","uri":"/zsh-config-remark/#zsh-配置"},{"categories":["IT备忘"],"content":"\r安装zshsudo apt install zsh 或者 sudo yum install zsh ","date":"2021-01-11","objectID":"/zsh-config-remark/:1:0","series":null,"tags":["Linux","zsh"],"title":"zsh配置","uri":"/zsh-config-remark/#安装zsh"},{"categories":["IT备忘"],"content":"\r安装oh-my-zshwget https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O - | sh 手动安装插件 git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions 运行 zsh 激活 ","date":"2021-01-11","objectID":"/zsh-config-remark/:2:0","series":null,"tags":["Linux","zsh"],"title":"zsh配置","uri":"/zsh-config-remark/#安装oh-my-zsh"},{"categories":["IT备忘"],"content":"\rzsh插件管理","date":"2021-01-11","objectID":"/zsh-config-remark/:3:0","series":null,"tags":["Linux","zsh"],"title":"zsh配置","uri":"/zsh-config-remark/#zsh插件管理"},{"categories":["IT备忘"],"content":"\r安装antigen cd ~ \u0026\u0026 curl -L git.io/antigen \u003e .antigen.zsh ","date":"2021-01-11","objectID":"/zsh-config-remark/:3:1","series":null,"tags":["Linux","zsh"],"title":"zsh配置","uri":"/zsh-config-remark/#安装antigen"},{"categories":["IT备忘"],"content":"\rzsh配置 ZSH_THEME=\"ys\" plugins=(git extract z gitignore sudo zsh-syntax-highlighting zsh-autosuggestions tmux ) # 插件管理 cd ~ \u0026\u0026 curl -L git.io/antigen \u003e .antigen.zsh source $HOME/.antigen.zsh antigen use oh-my-zsh antigen bundle zsh-users/zsh-autosuggestions antigen bundle AlexisBRENON/oh-my-zsh-reminder antigen bundle mattmc3/zsh-safe-rm #antigen bundle gko/ssh-connect antigen apply # 环境变量（兼顾crontab中的这行命令： source $HOME/.bash_profile \u0026\u0026 /mysql_backup.sh \u0026 \u003e /dev/null 2\u003e\u00261） source ~/.bash_profile # 默认启用tmux if which tmux \u003e/dev/null 2\u003e\u00261; then # if no session is started, start a new session test -z ${TMUX} \u0026\u0026 tmux # when quitting tmux, try to attach while test -z ${TMUX}; do tmux attach || break done fi # 禁止匹配*号等字符 setopt nonomatch # 解决enter有时不能用 bindkey -s \"^[OM\" \"^M\" # alias for sys alias ns=\"sudo netstat -ntlp\" alias tracert=\"sudo /usr/local/besttrace4linux/besttrace\" alias tn=\"tail -n 200\" # alias for docker alias dk=\"docker\" alias dkre='dkrefn() { docker restart $1 \u0026\u0026 docker logs -f --tail 10 $1; }; dkrefn' alias dkrm='dkrmfn() { docker stop $1 \u0026\u0026 docker rm $1; }; dkrmfn' alias dkrmi='docker rmi' alias dkup='dkupfn() { docker start $1 \u0026\u0026 docker logs -f --tail 10 $1; }; dkupfn' alias dkrun=\"docker run -it\" alias dkrum=\"docker run -it --rm\" alias dkexe=\"docker exec -it\" alias dkpsa=\"docker ps -a\" alias dkps=\"docker ps\" alias dklg=\"docker logs --tail 200\" alias dklgf=\"docker logs -f --tail 10\" alias dkimg=\"docker images\" alias dkimp='docker image prune' # alias for docker-compose alias dc=\"docker-compose\" alias dclgf=\"docker-compose logs -f --tail=10\" alias dcupb=\"docker-compose up --build\" alias dcupr=\"docker-compose up --force-recreate\" alias dcupd=\"docker-compose up --build -d \u0026\u0026 docker-compose logs -f --tail=10\" # alias for go alias go='dkrum -e GO111MODULE=on -v /go:/go -v $PWD:/usr/src/app -w /usr/src/app --network host golang go' #alias go='gofn() { dkrum -v /go:/go -v $PWD:/usr/src/app -w /usr/src/app --network host golang go;}; gofn' #alias gorun='gorunfn() { dkrum -v /go:/go -v $1:/usr/src/app -w /usr/src/app --network host golang go run .;}; gorunfn' #alias gob='gobfn() { dkrum -v /go:/go -v $1:/usr/src/app -w /usr/src/app --network host golang go build -i .;}; gobfn' #alias dkair='dkrum -e GO111MODULE=on -v /go:/go -v $PWD:/usr/src/app -w /usr/src/app --network host golang air' alias genair=\"dkrum -e GO111MODULE=on -v /go:/go -v $PWD:/usr/src -w /usr/src/app/server --network host golang air\" # PATH export PATH=/go/bin:$PATH ","date":"2021-01-11","objectID":"/zsh-config-remark/:4:0","series":null,"tags":["Linux","zsh"],"title":"zsh配置","uri":"/zsh-config-remark/#zsh配置"},{"categories":["IT备忘"],"content":"UPS直通DSM并通知QNAP与PVE","date":"2021-01-11","objectID":"/bypass-ups-pve-dsm/","series":null,"tags":["pve","dsm","ups"],"title":"UPS直通DSM并通知QNAP与PVE","uri":"/bypass-ups-pve-dsm/"},{"categories":["IT备忘"],"content":"\rUPS直通DSM并通知QNAP与PVE","date":"2021-01-11","objectID":"/bypass-ups-pve-dsm/:0:0","series":null,"tags":["pve","dsm","ups"],"title":"UPS直通DSM并通知QNAP与PVE","uri":"/bypass-ups-pve-dsm/#ups直通dsm并通知qnap与pve"},{"categories":["IT备忘"],"content":"\rPVE: ","date":"2021-01-11","objectID":"/bypass-ups-pve-dsm/:1:0","series":null,"tags":["pve","dsm","ups"],"title":"UPS直通DSM并通知QNAP与PVE","uri":"/bypass-ups-pve-dsm/#pve"},{"categories":["IT备忘"],"content":"\rDSM ","date":"2021-01-11","objectID":"/bypass-ups-pve-dsm/:2:0","series":null,"tags":["pve","dsm","ups"],"title":"UPS直通DSM并通知QNAP与PVE","uri":"/bypass-ups-pve-dsm/#dsm"},{"categories":["IT备忘"],"content":"\rQNAP ","date":"2021-01-11","objectID":"/bypass-ups-pve-dsm/:3:0","series":null,"tags":["pve","dsm","ups"],"title":"UPS直通DSM并通知QNAP与PVE","uri":"/bypass-ups-pve-dsm/#qnap"},{"categories":["IT备忘"],"content":"\rPVE -\u003e CONSOLE apt install nut -y nano /etc/nut/nut.conf MODE=netclient nano /etc/nut/upsmon.conf 在MONITOR小节加入 MONITOR ups@10.8.0.2 1 upsmon pass slave systemctl start nut-client \u0026\u0026 systemctl enable nut-client upsc ups@10.8.0.2 # 应该显示UPS信息 ","date":"2021-01-11","objectID":"/bypass-ups-pve-dsm/:4:0","series":null,"tags":["pve","dsm","ups"],"title":"UPS直通DSM并通知QNAP与PVE","uri":"/bypass-ups-pve-dsm/#pve---console"},{"categories":["IT备忘"],"content":"\r遇到的坑开始在UPS中用的之前相同的设置，只允许了两个IP接受UPS服务器信息。 但后来PVE中增加了10.8.0.222作为备用管理口，所以在PVE中运行upsc ups@10.8.0.2时，UPS服务器是接收的从10.8.0.222发来的请示，因此返回ACCESS DENIED。 解决方法，在允许的IP地址中添加10.8.0.222 ","date":"2021-01-11","objectID":"/bypass-ups-pve-dsm/:5:0","series":null,"tags":["pve","dsm","ups"],"title":"UPS直通DSM并通知QNAP与PVE","uri":"/bypass-ups-pve-dsm/#遇到的坑"},{"categories":["IT备忘"],"content":"\rPS DSM的UPS设置在 /usr/syno/etc/ups/ 测试网络连接 nc -v 10.8.0.2 3493 \u003e USERNAME henry ","date":"2021-01-11","objectID":"/bypass-ups-pve-dsm/:6:0","series":null,"tags":["pve","dsm","ups"],"title":"UPS直通DSM并通知QNAP与PVE","uri":"/bypass-ups-pve-dsm/#ps"},{"categories":["IT备忘"],"content":"LXC容器Alpine新系统配置","date":"2021-01-10","objectID":"/config-alpine-on-lxc-from-minimal/","series":null,"tags":["Linux","alpine","lxc"],"title":"LXC容器Alpine新系统配置","uri":"/config-alpine-on-lxc-from-minimal/"},{"categories":["IT备忘"],"content":"\rLXC容器Alpine新系统配置","date":"2021-01-10","objectID":"/config-alpine-on-lxc-from-minimal/:0:0","series":null,"tags":["Linux","alpine","lxc"],"title":"LXC容器Alpine新系统配置","uri":"/config-alpine-on-lxc-from-minimal/#lxc容器alpine新系统配置"},{"categories":["IT备忘"],"content":"\r（以alpine 12为例）","date":"2021-01-10","objectID":"/config-alpine-on-lxc-from-minimal/:1:0","series":null,"tags":["Linux","alpine","lxc"],"title":"LXC容器Alpine新系统配置","uri":"/config-alpine-on-lxc-from-minimal/#以alpine-12为例"},{"categories":["IT备忘"],"content":"\r替换源sed -i 's/dl-cdn.alpinelinux.org/mirrors.ustc.edu.cn/g' /etc/apk/repositories apk update \u0026\u0026 apk upgrade ","date":"2021-01-10","objectID":"/config-alpine-on-lxc-from-minimal/:2:0","series":null,"tags":["Linux","alpine","lxc"],"title":"LXC容器Alpine新系统配置","uri":"/config-alpine-on-lxc-from-minimal/#替换源"},{"categories":["IT备忘"],"content":"\r安装scpapk add openssh-client ","date":"2021-01-10","objectID":"/config-alpine-on-lxc-from-minimal/:3:0","series":null,"tags":["Linux","alpine","lxc"],"title":"LXC容器Alpine新系统配置","uri":"/config-alpine-on-lxc-from-minimal/#安装scp"},{"categories":["IT备忘"],"content":"\r安装时区设置apk add tzdata ","date":"2021-01-10","objectID":"/config-alpine-on-lxc-from-minimal/:4:0","series":null,"tags":["Linux","alpine","lxc"],"title":"LXC容器Alpine新系统配置","uri":"/config-alpine-on-lxc-from-minimal/#安装时区设置"},{"categories":["IT备忘"],"content":"\r复制上海时区cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime ","date":"2021-01-10","objectID":"/config-alpine-on-lxc-from-minimal/:5:0","series":null,"tags":["Linux","alpine","lxc"],"title":"LXC容器Alpine新系统配置","uri":"/config-alpine-on-lxc-from-minimal/#复制上海时区"},{"categories":["IT备忘"],"content":"\r指定为上海时区echo \"Asia/Shanghai\" \u003e /etc/timezone ","date":"2021-01-10","objectID":"/config-alpine-on-lxc-from-minimal/:6:0","series":null,"tags":["Linux","alpine","lxc"],"title":"LXC容器Alpine新系统配置","uri":"/config-alpine-on-lxc-from-minimal/#指定为上海时区"},{"categories":["IT备忘"],"content":"\r验证date -R ","date":"2021-01-10","objectID":"/config-alpine-on-lxc-from-minimal/:7:0","series":null,"tags":["Linux","alpine","lxc"],"title":"LXC容器Alpine新系统配置","uri":"/config-alpine-on-lxc-from-minimal/#验证"},{"categories":["IT备忘"],"content":"\r输出，和当前时间对比Thu, 14 Feb 2019 14:01:02 +0800 ","date":"2021-01-10","objectID":"/config-alpine-on-lxc-from-minimal/:8:0","series":null,"tags":["Linux","alpine","lxc"],"title":"LXC容器Alpine新系统配置","uri":"/config-alpine-on-lxc-from-minimal/#输出和当前时间对比"},{"categories":["IT备忘"],"content":"\r删除其他时区配置，节省空间apk del tzdata ","date":"2021-01-10","objectID":"/config-alpine-on-lxc-from-minimal/:9:0","series":null,"tags":["Linux","alpine","lxc"],"title":"LXC容器Alpine新系统配置","uri":"/config-alpine-on-lxc-from-minimal/#删除其他时区配置节省空间"},{"categories":["IT备忘"],"content":"\rNTP时钟同步apk add chrony ","date":"2021-01-10","objectID":"/config-alpine-on-lxc-from-minimal/:10:0","series":null,"tags":["Linux","alpine","lxc"],"title":"LXC容器Alpine新系统配置","uri":"/config-alpine-on-lxc-from-minimal/#ntp时钟同步"},{"categories":["IT备忘"],"content":"\r创建自启动命令vi /etc/local.d/frpc.start # 必须以 .start 为后缀名 输入nohup frpc -c /etc/frp/frpc.ini \u0026 运行 chmod +x /etc/local.d/frpc.start rc-update add local ","date":"2021-01-10","objectID":"/config-alpine-on-lxc-from-minimal/:11:0","series":null,"tags":["Linux","alpine","lxc"],"title":"LXC容器Alpine新系统配置","uri":"/config-alpine-on-lxc-from-minimal/#创建自启动命令"},{"categories":["IT备忘"],"content":"阿里云ECS变yam肉鸡处理过程","date":"2021-01-10","objectID":"/ecs-being-hacked/","series":null,"tags":["Linux","centos","安全"],"title":"阿里云ECS变yam肉鸡处理过程","uri":"/ecs-being-hacked/"},{"categories":["IT备忘"],"content":"\r阿里云ECS变yam肉鸡处理过程","date":"2021-01-10","objectID":"/ecs-being-hacked/:0:0","series":null,"tags":["Linux","centos","安全"],"title":"阿里云ECS变yam肉鸡处理过程","uri":"/ecs-being-hacked/#阿里云ecs变yam肉鸡处理过程"},{"categories":["IT备忘"],"content":"\r修复步骤 关闭Redis： /etc/inti.d/redis* stop 关闭crontab: service crond stop 查看定期任务 crontab -l 删除定期任务 crontab -r 删除/opt/yam 删除/ect/cron*下的可疑文件 find / -name yam看看如果有也删除 删除crontab中的任务：vi /etc/crontab 为redis加上密码，并绑定本机 查看/root/.ssh中有无多余的密钥 删除/etc/init.d下的多余脚本 删除/etc/ssh/sshd_config中的 AuthorizedKeysFile .ssh/*** 删除/lib/libudev.so 将/etc/passwd中redis用户的权限设置为nologin ","date":"2021-01-10","objectID":"/ecs-being-hacked/:1:0","series":null,"tags":["Linux","centos","安全"],"title":"阿里云ECS变yam肉鸡处理过程","uri":"/ecs-being-hacked/#修复步骤"},{"categories":["IT备忘"],"content":"\rRedis修复建议 禁止一些高危命令修改 redis.conf 文件，添加 rename-command FLUSHALL rename-command CONFIG rename-command EVAL 来禁用远程修改 DB 文件地址 以低权限运行 Redis 服务 为 Redis 服务创建单独的用户和家目录，并且配置禁止登陆 为 Redis 添加密码验证 修改 redis.conf 文件，添加 requirepass mypassword 禁止外网访问 Redis 修改 redis.conf 文件，添加或修改 127.0.0.1 使得 Redis 服务只在当前主机可用 ","date":"2021-01-10","objectID":"/ecs-being-hacked/:2:0","series":null,"tags":["Linux","centos","安全"],"title":"阿里云ECS变yam肉鸡处理过程","uri":"/ecs-being-hacked/#redis修复建议"},{"categories":["IT备忘"],"content":"自行签发SSL证书","date":"2021-01-10","objectID":"/sign-and-issue-ssl-cert-for-myself/","series":null,"tags":["Linux"],"title":"自行签发SSL证书","uri":"/sign-and-issue-ssl-cert-for-myself/"},{"categories":["IT备忘"],"content":"\r自行签发SSL证书 cd ~ openssl req -x509 -sha256 -nodes -days 365 -newkey rsa:2048 -keyout ssl.key -out ssl.crt -subj ‘/CN=*.tq.com’ cat ssl.key ssl.crt \u003e ssl.pem openssl pkcs12 -export -out ssl.pfx -inkey ssl.key -in ssl.crt （密码留空） sudo mv ssl.* /etc/nginx/ssl 编辑nginx.conf，在server配置中加入： listen 443; server_name ws.tq.com; ssl on; ssl_certificate /etc/nginx/ssl/ssl.pem; #证书公钥文件路径 ssl_certificate_key /etc/nginx/ssl/ssl.key; #证书私钥文件路径 ssl_session_timeout 5m; #5分钟session会话保持 ssl_protocols TLSv1 TLSv1.1 TLSv1.2; ssl_ciphers AESGCM:ALL:!DH:!EXPORT:!RC4:+HIGH:!MEDIUM:!LOW:!aNULL:!eNULL; ssl_prefer_server_ciphers on; systemctl restart nginx.service （如果遇到提示账号为vagrant，则输入密码vagrant） 将ssl.pfx同时导入到浏览器的个从、中级证书、受信任的根证书等 ","date":"2021-01-10","objectID":"/sign-and-issue-ssl-cert-for-myself/:0:0","series":null,"tags":["Linux"],"title":"自行签发SSL证书","uri":"/sign-and-issue-ssl-cert-for-myself/#自行签发ssl证书"},{"categories":["IT备忘"],"content":"zfs修改缓存大小","date":"2020-11-15","objectID":"/zfs-change-cache-size/","series":null,"tags":["zfs"],"title":"zfs修改缓存大小","uri":"/zfs-change-cache-size/"},{"categories":["IT备忘"],"content":"\rzfs修改缓存大小nano /usr/lib/modules-load.d/zfs.conf 加入： options zfs zfs_arc_max=34359738368 如果根文件系统也使用了ZFS，你必须在每次修改该参数后更新initramfs，如下： update-initramfs –u 查看根文件系统：df -T -h ","date":"2020-11-15","objectID":"/zfs-change-cache-size/:0:0","series":null,"tags":["zfs"],"title":"zfs修改缓存大小","uri":"/zfs-change-cache-size/#zfs修改缓存大小"},{"categories":["IT备忘"],"content":"debian安装cups","date":"2020-11-15","objectID":"/install-cups-on-debian/","series":null,"tags":["Linux","debian","cups"],"title":"debian安装cups","uri":"/install-cups-on-debian/"},{"categories":["IT备忘"],"content":"\rdebian安装cups (HP1106) sudo apt update sudo apt install cups -y sudo nano /etc/cups/cupsd.conf ","date":"2020-11-15","objectID":"/install-cups-on-debian/:0:0","series":null,"tags":["Linux","debian","cups"],"title":"debian安装cups","uri":"/install-cups-on-debian/#debian安装cups-hp1106"},{"categories":["IT备忘"],"content":"\r第一步：将cupsd.conf中的 Browsing Off 改为 Browsing On","date":"2020-11-15","objectID":"/install-cups-on-debian/:1:0","series":null,"tags":["Linux","debian","cups"],"title":"debian安装cups","uri":"/install-cups-on-debian/#第一步将cupsdconf中的-browsing-off-改为-browsing-on"},{"categories":["IT备忘"],"content":"\r第二步：将cupsd.conf中的 Listen localhost:631 改为 Port 631","date":"2020-11-15","objectID":"/install-cups-on-debian/:2:0","series":null,"tags":["Linux","debian","cups"],"title":"debian安装cups","uri":"/install-cups-on-debian/#第二步将cupsdconf中的-listen-localhost631-改为-port-631"},{"categories":["IT备忘"],"content":"\r其次，在 \u003cLocation /\u003e Order allow,deny \u003c/Location\u003e 添加 \u003cLocation /\u003e Order allow,deny Allow @LOCAL \u003c/Location\u003e 一共有2-3处，添加即可，目的是让本地可以通过网页的形式访问你的CUPS控制台 sudo systemctl restart cups sudo apt install hplip -y sudo usermod -a -G lpadmin henry sudo cupsctl --remote-any 开始在CUPS网页添加打印机： Name使用P1106很重要，因为要和后面《CPUS添加打印机》安卓手动添加的队列名称一致。 驱动带有requires propietary plugin说明需要安装hplip-plugin ","date":"2020-11-15","objectID":"/install-cups-on-debian/:3:0","series":null,"tags":["Linux","debian","cups"],"title":"debian安装cups","uri":"/install-cups-on-debian/#其次在"},{"categories":["IT备忘"],"content":"\r安装hplip-plugin（一路回车） sudo apt install gpg -y hp-setup -i ========================================================================= ","date":"2020-11-15","objectID":"/install-cups-on-debian/:4:0","series":null,"tags":["Linux","debian","cups"],"title":"debian安装cups","uri":"/install-cups-on-debian/#安装hplip-plugin一路回车"},{"categories":["IT备忘"],"content":"\r在Windows中（先安装打印机驱动。– 或者最后安装）","date":"2020-11-15","objectID":"/install-cups-on-debian/:5:0","series":null,"tags":["Linux","debian","cups"],"title":"debian安装cups","uri":"/install-cups-on-debian/#在windows中先安装打印机驱动---或者最后安装"},{"categories":["IT备忘"],"content":"\r然后添加打印机，我的打印机不在列表中，按名称共享打印机，直接填写http://10.8.9.5:631/printers/P1106，（外网填写http://taoquanw.com:50631/printers/P1106），扫描结束后，从磁盘选择驱动，完成。 ========================================================================= ","date":"2020-11-15","objectID":"/install-cups-on-debian/:6:0","series":null,"tags":["Linux","debian","cups"],"title":"debian安装cups","uri":"/install-cups-on-debian/#然后添加打印机"},{"categories":["IT备忘"],"content":"\r对于安卓手机。安装PrintHand： ","date":"2020-11-15","objectID":"/install-cups-on-debian/:7:0","series":null,"tags":["Linux","debian","cups"],"title":"debian安装cups","uri":"/install-cups-on-debian/#对于安卓手机安装printhand"},{"categories":["IT备忘"],"content":"debian安装docker","date":"2020-11-15","objectID":"/install-docker-on-debian/","series":null,"tags":["Linux","debian","docker"],"title":"debian安装docker","uri":"/install-docker-on-debian/"},{"categories":["IT备忘"],"content":"\rdebian安装dockersudo apt-get update ","date":"2020-11-15","objectID":"/install-docker-on-debian/:0:0","series":null,"tags":["Linux","debian","docker"],"title":"debian安装docker","uri":"/install-docker-on-debian/#debian安装docker"},{"categories":["IT备忘"],"content":"\rhttps sudo apt-get install \\ apt-transport-https \\ ca-certificates \\ curl \\ gnupg2 \\ software-properties-common ","date":"2020-11-15","objectID":"/install-docker-on-debian/:1:0","series":null,"tags":["Linux","debian","docker"],"title":"debian安装docker","uri":"/install-docker-on-debian/#https"},{"categories":["IT备忘"],"content":"\r官方keycurl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add - ","date":"2020-11-15","objectID":"/install-docker-on-debian/:2:0","series":null,"tags":["Linux","debian","docker"],"title":"debian安装docker","uri":"/install-docker-on-debian/#官方key"},{"categories":["IT备忘"],"content":"\r查看sudo apt-key fingerprint 0EBFCD88 ","date":"2020-11-15","objectID":"/install-docker-on-debian/:3:0","series":null,"tags":["Linux","debian","docker"],"title":"debian安装docker","uri":"/install-docker-on-debian/#查看"},{"categories":["IT备忘"],"content":"\r设置源 sudo add-apt-repository \\ \"deb [arch=amd64] https://download.docker.com/linux/debian \\ $(lsb_release -cs) \\ stable\" ","date":"2020-11-15","objectID":"/install-docker-on-debian/:4:0","series":null,"tags":["Linux","debian","docker"],"title":"debian安装docker","uri":"/install-docker-on-debian/#设置源"},{"categories":["IT备忘"],"content":"\r再次更新aptsudo apt-get update ","date":"2020-11-15","objectID":"/install-docker-on-debian/:5:0","series":null,"tags":["Linux","debian","docker"],"title":"debian安装docker","uri":"/install-docker-on-debian/#再次更新apt"},{"categories":["IT备忘"],"content":"\r安装docker-cesudo apt-get install docker-ce ","date":"2020-11-15","objectID":"/install-docker-on-debian/:6:0","series":null,"tags":["Linux","debian","docker"],"title":"debian安装docker","uri":"/install-docker-on-debian/#安装docker-ce"},{"categories":["IT备忘"],"content":"\r增加user权限无须sudosudo gpasswd -a ${USER} docker sudo usermod -aG docker $USER sudo systemctl restart docker ","date":"2020-11-15","objectID":"/install-docker-on-debian/:7:0","series":null,"tags":["Linux","debian","docker"],"title":"debian安装docker","uri":"/install-docker-on-debian/#增加user权限无须sudo"},{"categories":["IT备忘"],"content":"\r注销并重新登录pkill X ","date":"2020-11-15","objectID":"/install-docker-on-debian/:8:0","series":null,"tags":["Linux","debian","docker"],"title":"debian安装docker","uri":"/install-docker-on-debian/#注销并重新登录"},{"categories":["IT备忘"],"content":"\rdocker-compose (docker 23已经内置docker compose)sudo curl -L \"https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose sudo chmod +x /usr/local/bin/docker-compose ","date":"2020-11-15","objectID":"/install-docker-on-debian/:9:0","series":null,"tags":["Linux","debian","docker"],"title":"debian安装docker","uri":"/install-docker-on-debian/#docker-compose-docker-23已经内置docker-compose"},{"categories":["IT备忘"],"content":"docker迁移数据目录","date":"2020-11-13","objectID":"/migrate-data-of-docker/","series":null,"tags":["Linux","docker"],"title":"docker迁移数据目录","uri":"/migrate-data-of-docker/"},{"categories":["IT备忘"],"content":"\rdocker迁移数据目录","date":"2020-11-13","objectID":"/migrate-data-of-docker/:0:0","series":null,"tags":["Linux","docker"],"title":"docker迁移数据目录","uri":"/migrate-data-of-docker/#docker迁移数据目录"},{"categories":["IT备忘"],"content":"\rDocker的数据目录在/var/lib/docker下，往往需要大量空间，迁移过程：sudo mkdir /home/docker sudo rsync -aP /var/lib/docker/ /home/docker sudo nano /etc/docker/daemon.json { \"graph\": \"/home/docker\" } sudo reboot sudo mv /var/lib/docker /var/lib/docker.old ","date":"2020-11-13","objectID":"/migrate-data-of-docker/:1:0","series":null,"tags":["Linux","docker"],"title":"docker迁移数据目录","uri":"/migrate-data-of-docker/#docker的数据目录在varlibdocker下往往需要大量空间迁移过程"},{"categories":["IT备忘"],"content":"Esxi安装OpenWrt","date":"2020-11-11","objectID":"/install-openwrt-on-esxi/","series":null,"tags":["Linux","openwrt"],"title":"Esxi安装OpenWrt","uri":"/install-openwrt-on-esxi/"},{"categories":["IT备忘"],"content":"\rEsxi安装openwrt","date":"2020-11-11","objectID":"/install-openwrt-on-esxi/:0:0","series":null,"tags":["Linux","openwrt"],"title":"Esxi安装OpenWrt","uri":"/install-openwrt-on-esxi/#esxi安装openwrt"},{"categories":["IT备忘"],"content":"\r备份配置","date":"2020-11-11","objectID":"/install-openwrt-on-esxi/:1:0","series":null,"tags":["Linux","openwrt"],"title":"Esxi安装OpenWrt","uri":"/install-openwrt-on-esxi/#备份配置"},{"categories":["IT备忘"],"content":"\r编译OpenWrt","date":"2020-11-11","objectID":"/install-openwrt-on-esxi/:2:0","series":null,"tags":["Linux","openwrt"],"title":"Esxi安装OpenWrt","uri":"/install-openwrt-on-esxi/#编译openwrt"},{"categories":["IT备忘"],"content":"\r复制、转换镜像```bash cd ~/lede-master/bin/targets/x86/64/ scp ./openwrt-x86-64-generic-squashfs-combined-efi.vmdk root@10.88.8.6:/vmfs/volumes/5bf77725-a7c09212-6981-d4ae529aa1d7/os/ ssh root@10.88.8.6 cd /vmfs/volumes/5bf77725-a7c09212-6981-d4ae529aa1d7/os/ # 转换thin模式 vmkfstools -i openwrt-x86-64-generic-squashfs-combined-efi.vmdk openwrt-`date +%Y%m%d`-thin.vmdk -d thin # 扩容（主要是解决Esxi编辑openwrt时要删除硬盘再添加的问题） vmkfstools -X 2048M openwrt-`date +%Y%m%d`-thin.vmdk ``` ","date":"2020-11-11","objectID":"/install-openwrt-on-esxi/:3:0","series":null,"tags":["Linux","openwrt"],"title":"Esxi安装OpenWrt","uri":"/install-openwrt-on-esxi/#复制转换镜像"},{"categories":["IT备忘"],"content":"\r新建虚拟机，+ 选择其它Linux64位， + 删除默认硬盘， + 加载现有硬盘 openwrt-\\`date +%Y%m%d\\`.vmdk-thin.vmdk， + 修改网卡， + 恢复配置 ","date":"2020-11-11","objectID":"/install-openwrt-on-esxi/:4:0","series":null,"tags":["Linux","openwrt"],"title":"Esxi安装OpenWrt","uri":"/install-openwrt-on-esxi/#新建虚拟机"},{"categories":["生活随笔"],"content":"花冠EX全车灯泡规格总结","date":"2020-10-17","objectID":"/corolla-bulb-specification/","series":null,"tags":["花冠","汽车"],"title":"花冠EX全车灯泡规格总结","uri":"/corolla-bulb-specification/"},{"categories":["生活随笔"],"content":"\r花冠EX全车灯泡规格总结 位置 型号 功率 备注 近光灯 9006 或HB4 55W 远光灯 9005或HB3 60W 前雾灯 H3 55W 示宽灯\u003c小火\u003e W5W 5W 无色泡 前转向灯 PY21W 21W 琥珀色泡或叫黄色 侧转向灯 WY5W 5W 琥珀色或叫黄色（这款火接口什么样只泡子颜色同瓦数都样） 后尾灯 P21/5W 21W/5W 无色泡（因为后示宽灯刹车灯在个泡子里又叫双丝泡） 后转向灯 P21W 21W 无色泡 倒车灯 W16W 16W 无色泡 高位刹车灯 W16W 16W 无色泡 后雾灯 W21W 21W 无色泡 后备箱 W3W 3W 无色泡 车内顶灯 双尖31MM泡 8W ","date":"2020-10-17","objectID":"/corolla-bulb-specification/:0:0","series":null,"tags":["花冠","汽车"],"title":"花冠EX全车灯泡规格总结","uri":"/corolla-bulb-specification/#花冠ex全车灯泡规格总结"},{"categories":["IT备忘"],"content":"pve acme部署Let's crypt证书","date":"2020-10-08","objectID":"/issue-ssl-cert-using-acme-on-pve/","series":null,"tags":["Linux","pve","ssl"],"title":"pve acme部署Let's crypt证书","uri":"/issue-ssl-cert-using-acme-on-pve/"},{"categories":["IT备忘"],"content":"\rPVE acme部署Let’s crypt证书cd ~ ","date":"2020-10-08","objectID":"/issue-ssl-cert-using-acme-on-pve/:0:0","series":null,"tags":["Linux","pve","ssl"],"title":"pve acme部署Let's crypt证书","uri":"/issue-ssl-cert-using-acme-on-pve/#pve-acme部署lets-crypt证书"},{"categories":["IT备忘"],"content":"\r安装脚本curl https://get.acme.sh | sh cd .acme.sh ","date":"2020-10-08","objectID":"/issue-ssl-cert-using-acme-on-pve/:1:0","series":null,"tags":["Linux","pve","ssl"],"title":"pve acme部署Let's crypt证书","uri":"/issue-ssl-cert-using-acme-on-pve/#安装脚本"},{"categories":["IT备忘"],"content":"\r申请证书 （会定期自动申请新证书）export DP_Id=\"174377\"; export DP_Key=\"e3a766b6fdf83a1a39dd5caea80daa25\"; ./acme.sh --issue --dns dns_dp -d pve.thy.pub ","date":"2020-10-08","objectID":"/issue-ssl-cert-using-acme-on-pve/:2:0","series":null,"tags":["Linux","pve","ssl"],"title":"pve acme部署Let's crypt证书","uri":"/issue-ssl-cert-using-acme-on-pve/#申请证书-会定期自动申请新证书"},{"categories":["IT备忘"],"content":"\r安装证书 （会在定期自动申请新证书后自动安装） ./acme.sh --install-cert -d pve.thy.pub \\ --key-file /etc/pve/local/pveproxy-ssl.key \\ --fullchain-file /etc/pve/local/pveproxy-ssl.pem \\ --reloadcmd \"systemctl restart pveproxy\" ","date":"2020-10-08","objectID":"/issue-ssl-cert-using-acme-on-pve/:3:0","series":null,"tags":["Linux","pve","ssl"],"title":"pve acme部署Let's crypt证书","uri":"/issue-ssl-cert-using-acme-on-pve/#安装证书-会在定期自动申请新证书后自动安装"},{"categories":["IT备忘"],"content":"\r自动更新.acme.sh/acme.sh --upgrade --auto-upgrade ","date":"2020-10-08","objectID":"/issue-ssl-cert-using-acme-on-pve/:4:0","series":null,"tags":["Linux","pve","ssl"],"title":"pve acme部署Let's crypt证书","uri":"/issue-ssl-cert-using-acme-on-pve/#自动更新"},{"categories":["软件开发"],"content":"如何在SQLServer中处理亿万级别的数据(历史数据)","date":"2020-08-10","objectID":"/how-to-handle-billion-rows-in-sqlserver/","series":null,"tags":["Database"],"title":"如何在SQLServer中处理亿万级别的数据(历史数据)","uri":"/how-to-handle-billion-rows-in-sqlserver/"},{"categories":["软件开发"],"content":"\r如何在SQLServer中处理亿万级别的数据(历史数据)","date":"2020-08-10","objectID":"/how-to-handle-billion-rows-in-sqlserver/:0:0","series":null,"tags":["Database"],"title":"如何在SQLServer中处理亿万级别的数据(历史数据)","uri":"/how-to-handle-billion-rows-in-sqlserver/#如何在sqlserver中处理亿万级别的数据历史数据"},{"categories":["软件开发"],"content":"\r可以按以下方面进行 去掉表的所有索引 用SqlBulkCopy进行插入 分表或者分区，减少每个表的数据总量 在某个表完全写完之后再建立索引 正确的指定索引字段 把需要用到的字段放到包含索引中(在返回的索引中就包含了一切) ","date":"2020-08-10","objectID":"/how-to-handle-billion-rows-in-sqlserver/:1:0","series":null,"tags":["Database"],"title":"如何在SQLServer中处理亿万级别的数据(历史数据)","uri":"/how-to-handle-billion-rows-in-sqlserver/#可以按以下方面进行"},{"categories":["IT备忘"],"content":"Let's crypt ACME泛域名证书","date":"2020-08-08","objectID":"/issue-ssl-cert-using-lets-crypt-acme/","series":null,"tags":["Linux","ssl"],"title":"Let's crypt ACME泛域名证书","uri":"/issue-ssl-cert-using-lets-crypt-acme/"},{"categories":["IT备忘"],"content":"\rLet’s crypt 使用ACME为dnspod泛域名申请证书cd ~ ","date":"2020-08-08","objectID":"/issue-ssl-cert-using-lets-crypt-acme/:0:0","series":null,"tags":["Linux","ssl"],"title":"Let's crypt ACME泛域名证书","uri":"/issue-ssl-cert-using-lets-crypt-acme/#lets-crypt-使用acme为dnspod泛域名申请证书"},{"categories":["IT备忘"],"content":"\r安装脚本 su root #否则后面没有权限重启nginx curl https://get.acme.sh | sh -s email=chariothy@gmail.com cd .acme.sh ","date":"2020-08-08","objectID":"/issue-ssl-cert-using-lets-crypt-acme/:1:0","series":null,"tags":["Linux","ssl"],"title":"Let's crypt ACME泛域名证书","uri":"/issue-ssl-cert-using-lets-crypt-acme/#安装脚本"},{"categories":["IT备忘"],"content":"\r更改默认 CA(现在应该不需要了，现在换成了Zerossl) ./acme.sh --set-default-ca --server letsencrypt ","date":"2020-08-08","objectID":"/issue-ssl-cert-using-lets-crypt-acme/:2:0","series":null,"tags":["Linux","ssl"],"title":"Let's crypt ACME泛域名证书","uri":"/issue-ssl-cert-using-lets-crypt-acme/#更改默认-ca"},{"categories":["IT备忘"],"content":"\r申请证书 （会定期自动申请新证书）export DP_Id=\"174377\"; export DP_Key=\"e3a766b6fdf83a1a39dd5caea80daa25\"; ./acme.sh --issue --dns dns_dp -d thy.pub -d *.thy.pub (不能加–nginx， 因为这是http方式，目前只支持dns方式) ","date":"2020-08-08","objectID":"/issue-ssl-cert-using-lets-crypt-acme/:3:0","series":null,"tags":["Linux","ssl"],"title":"Let's crypt ACME泛域名证书","uri":"/issue-ssl-cert-using-lets-crypt-acme/#申请证书-会定期自动申请新证书"},{"categories":["IT备忘"],"content":"\r安装证书 （会在定期自动申请新证书后自动安装）apt安装的nginx acme.sh --install-cert -d thy.pub \\ --key-file /etc/nginx/cert/thy.pub.key \\ --fullchain-file /etc/nginx/cert/thy.pub.fullchain \\ --cert-file /etc/nginx/cert/thy.pub.cert \\ --ca-file /etc/nginx/cert/thy.pub.ca \\ --reloadcmd \"sudo systemctl force-reload nginx\" docker安装的nginx acme.sh --install-cert -d thy.pub \\ --key-file /etc/nginx/cert/thy.pub.key \\ --fullchain-file /etc/nginx/cert/thy.pub.fullchain \\ --cert-file /etc/nginx/cert/thy.pub.cert \\ --ca-file /etc/nginx/cert/thy.pub.ca \\ --reloadcmd \"docker restart ng\" 如果需要彻底重启 acme.sh --install-cert -d thy.pub \\ --key-file /etc/nginx/cert/thy.pub.key \\ --fullchain-file /etc/nginx/cert/thy.pub.fullchain \\ --cert-file /etc/nginx/cert/thy.pub.cert \\ --ca-file /etc/nginx/cert/thy.pub.ca \\ --reloadcmd \"reboot\" ","date":"2020-08-08","objectID":"/issue-ssl-cert-using-lets-crypt-acme/:4:0","series":null,"tags":["Linux","ssl"],"title":"Let's crypt ACME泛域名证书","uri":"/issue-ssl-cert-using-lets-crypt-acme/#安装证书-会在定期自动申请新证书后自动安装"},{"categories":["IT备忘"],"content":"\r自动更新.acme.sh/acme.sh --upgrade --auto-upgrade ","date":"2020-08-08","objectID":"/issue-ssl-cert-using-lets-crypt-acme/:5:0","series":null,"tags":["Linux","ssl"],"title":"Let's crypt ACME泛域名证书","uri":"/issue-ssl-cert-using-lets-crypt-acme/#自动更新"},{"categories":["软件开发"],"content":"Yii Composer不正确的解决方法","date":"2020-07-18","objectID":"/yii-composer-incorrect-solution/","series":null,"tags":["PHP"],"title":"Yii Composer不正确的解决方法","uri":"/yii-composer-incorrect-solution/"},{"categories":["软件开发"],"content":"\rYii Composer不正确的解决方法","date":"2020-07-18","objectID":"/yii-composer-incorrect-solution/:0:0","series":null,"tags":["PHP"],"title":"Yii Composer不正确的解决方法","uri":"/yii-composer-incorrect-solution/#yii-composer不正确的解决方法"},{"categories":["软件开发"],"content":"\r经常提示：Loading composer repositories with package information Updating dependencies (including require-dev) Your requirements could not be resolved to an installable set of packages. Problem 1 - yiisoft/yii2 2.0.12 requires bower-asset/jquery 2.2.*@stable | 2.1.*@stable | 1.11.*@stable | 1.12.*@stable -\u003e no matching package found. - yiisoft/yii2 2.0.11.2 requires bower-asset/jquery 2.2.*@stable | 2.1.*@stable | 1.11.*@stable | 1.12.*@stable -\u003e no matching package found. - yiisoft/yii2 2.0.11.1 requires bower-asset/jquery 2.2.*@stable | 2.1.*@stable | 1.11.*@stable | 1.12.*@stable -\u003e no matching package found. - yiisoft/yii2 2.0.11 requires bower-asset/jquery 2.2.*@stable | 2.1.*@stable | 1.11.*@stable | 1.12.*@stable -\u003e no matching package found. - Installation request for yiisoft/yii2 ~2.0.11 -\u003e satisfiable by yiisoft/yii2[2.0.11, 2.0.11.1, 2.0.11.2, 2.0.12]. Potential causes: - A typo in the package name - The package is not available in a stable-enough version according to your minimum-stability setting see \u003chttps://getcomposer.org/doc/04-schema.md#minimum-stability\u003e for more details. Read \u003chttps://getcomposer.org/doc/articles/troubleshooting.md\u003e for further common problems. 这时候只要安装： composer global require \"fxp/composer-asset-plugin:1.3.1\" ","date":"2020-07-18","objectID":"/yii-composer-incorrect-solution/:1:0","series":null,"tags":["PHP"],"title":"Yii Composer不正确的解决方法","uri":"/yii-composer-incorrect-solution/#经常提示"},{"categories":["软件开发"],"content":"PHP常见坑和避免的方法","date":"2020-07-18","objectID":"/common-php-pits-and-ways-to-avoid-them/","series":null,"tags":["PHP"],"title":"PHP常见坑和避免的方法","uri":"/common-php-pits-and-ways-to-avoid-them/"},{"categories":["软件开发"],"content":"\rPHP常见坑和避免的方法","date":"2020-07-18","objectID":"/common-php-pits-and-ways-to-avoid-them/:0:0","series":null,"tags":["PHP"],"title":"PHP常见坑和避免的方法","uri":"/common-php-pits-and-ways-to-avoid-them/#php常见坑和避免的方法"},{"categories":["软件开发"],"content":"\rfilesize缓存的问题可以用clearstatcache()清除缓存，且不能正确获取大于2G文件的大小 ","date":"2020-07-18","objectID":"/common-php-pits-and-ways-to-avoid-them/:1:0","series":null,"tags":["PHP"],"title":"PHP常见坑和避免的方法","uri":"/common-php-pits-and-ways-to-avoid-them/#filesize缓存的问题"},{"categories":["软件开发"],"content":"\rnull和空、0、false等四个值的比较强制只使用===来比较 ","date":"2020-07-18","objectID":"/common-php-pits-and-ways-to-avoid-them/:2:0","series":null,"tags":["PHP"],"title":"PHP常见坑和避免的方法","uri":"/common-php-pits-and-ways-to-avoid-them/#null和空0false等四个值的比较"},{"categories":["软件开发"],"content":"\rforeach里的引用赋值数组最后一个元素的 $value 引用在 foreach 循环之后仍会保留。建议使用 unset() 来将其销毁。 避免在foreach中使用引用： `foreach($a as \u0026$item){}` ","date":"2020-07-18","objectID":"/common-php-pits-and-ways-to-avoid-them/:3:0","series":null,"tags":["PHP"],"title":"PHP常见坑和避免的方法","uri":"/common-php-pits-and-ways-to-avoid-them/#foreach里的引用赋值"},{"categories":["软件开发"],"content":"\risset与empty的联系和区别 empty对如下8种情况返回true： null 空串\"\" 字符串0\"0\" 空array 布尔值false 数字0 浮点数0.0 类里用var定义但是未赋值 isset 检测变量是否设置，并且不是 NULL，但是对于empty的8种情况，只有null返回false，其它7种情况都返回true 综上所述，除了empty描述的的非null的7种情况，在其它情况下， if(empty(变量)) 等效于 if(!isset(变量)) 按照函数的本意来使用： - 想判断变量是否设置，或是否存在于数组中，用isset - 想判断变量的值是否为空，用empty ","date":"2020-07-18","objectID":"/common-php-pits-and-ways-to-avoid-them/:4:0","series":null,"tags":["PHP"],"title":"PHP常见坑和避免的方法","uri":"/common-php-pits-and-ways-to-avoid-them/#isset与empty的联系和区别"},{"categories":["软件开发"],"content":"\r含有字符的数字和数字比较有可能为真。测试如下代码： `'404abc'==404` 强制只使用===来比较 ","date":"2020-07-18","objectID":"/common-php-pits-and-ways-to-avoid-them/:5:0","series":null,"tags":["PHP"],"title":"PHP常见坑和避免的方法","uri":"/common-php-pits-and-ways-to-avoid-them/#含有字符的数字和数字比较有可能为真"},{"categories":["软件开发"],"content":"\rcount函数传入字符时，会自动将字符转换为数组将计算。测试如下代码 ```php count(false) count(null) ``` ","date":"2020-07-18","objectID":"/common-php-pits-and-ways-to-avoid-them/:6:0","series":null,"tags":["PHP"],"title":"PHP常见坑和避免的方法","uri":"/common-php-pits-and-ways-to-avoid-them/#count函数传入字符时会自动将字符转换为数组将计算"},{"categories":["软件开发"],"content":"\r浮点运算时应注意丢失精度(PHP遵循IEEE 754双精度)测试如下代码 ```php floor((0.1+0.7)*10) intval( 0.58*100 ) var_dump((8 - 6.4) == ##6) ``` ","date":"2020-07-18","objectID":"/common-php-pits-and-ways-to-avoid-them/:7:0","series":null,"tags":["PHP"],"title":"PHP常见坑和避免的方法","uri":"/common-php-pits-and-ways-to-avoid-them/#浮点运算时应注意丢失精度php遵循ieee-754双精度"},{"categories":["软件开发"],"content":"\r数组key如果是数字形式，哪怕以字符串保存也会转成数字```php $trMap = [ 'baidu' =\u003e '百度', 'sougou' =\u003e '搜狗', '360' =\u003e '360', 'google' =\u003e '谷歌' ]; ``` 但是PHP给处理成了 ```php array(4) { [\"baidu\"]=\u003e string(6) \"百度\" [\"sougou\"]=\u003e string(6) \"搜狗\" [360]=\u003e string(3) \"360\" [\"google\"]=\u003e string(6) \"谷歌\" } ``` 在使用数组的key时，如果期待是字符串，则全部用(string)key来转换。 ","date":"2020-07-18","objectID":"/common-php-pits-and-ways-to-avoid-them/:8:0","series":null,"tags":["PHP"],"title":"PHP常见坑和避免的方法","uri":"/common-php-pits-and-ways-to-avoid-them/#数组key如果是数字形式哪怕以字符串保存也会转成数字"},{"categories":["软件开发"],"content":"\r空字典json序列化成了[]因为PHP的关联数组特点。 避免方案： ```php $ret2 = [ 'choices' =\u003e [], 'answers' =\u003e (object) [], ]; ``` ","date":"2020-07-18","objectID":"/common-php-pits-and-ways-to-avoid-them/:9:0","series":null,"tags":["PHP"],"title":"PHP常见坑和避免的方法","uri":"/common-php-pits-and-ways-to-avoid-them/#空字典json序列化成了"},{"categories":["软件开发"],"content":"\r什么值在类型转换后为true/false？下列类型在类型转换后为false，其余均为true： - 布尔型false - 整型0 - 浮点型0.0 - 空字符串和字符串\"0\"：特别注意仅包含0的字符串会被转换为false - 空数组 - null类型变量 - 从空标签创建的SimpleXML对象 ","date":"2020-07-18","objectID":"/common-php-pits-and-ways-to-avoid-them/:10:0","series":null,"tags":["PHP"],"title":"PHP常见坑和避免的方法","uri":"/common-php-pits-and-ways-to-avoid-them/#什么值在类型转换后为truefalse"},{"categories":["软件开发"],"content":"\r最后附上php比较操作符![img](img/php-troublesome.png) ","date":"2020-07-18","objectID":"/common-php-pits-and-ways-to-avoid-them/:11:0","series":null,"tags":["PHP"],"title":"PHP常见坑和避免的方法","uri":"/common-php-pits-and-ways-to-avoid-them/#最后附上php比较操作符"},{"categories":["软件开发"],"content":"python生成式","date":"2020-06-18","objectID":"/python-list-dict-generator/","series":null,"tags":["Python"],"title":"python生成式","uri":"/python-list-dict-generator/"},{"categories":["软件开发"],"content":"\rpython生成式","date":"2020-06-18","objectID":"/python-list-dict-generator/:0:0","series":null,"tags":["Python"],"title":"python生成式","uri":"/python-list-dict-generator/#python生成式"},{"categories":["软件开发"],"content":"\r1. 列表生成式 [experssion for i in sequence if...] ","date":"2020-06-18","objectID":"/python-list-dict-generator/:1:0","series":null,"tags":["Python"],"title":"python生成式","uri":"/python-list-dict-generator/#1-列表生成式"},{"categories":["软件开发"],"content":"\r2. 字典生成式 { key: value for i in sequence if...} ","date":"2020-06-18","objectID":"/python-list-dict-generator/:2:0","series":null,"tags":["Python"],"title":"python生成式","uri":"/python-list-dict-generator/#2-字典生成式"},{"categories":["软件开发"],"content":"哪些字段适合用JSON，哪些字段不适合用JSON","date":"2020-04-18","objectID":"/what-kind-of-fields-are-suitable-for-json-types/","series":null,"tags":["Database"],"title":"字段是否用JSON","uri":"/what-kind-of-fields-are-suitable-for-json-types/"},{"categories":["软件开发"],"content":"\r哪些字段适合用JSON，哪些字段不适合用JSON","date":"2020-04-18","objectID":"/what-kind-of-fields-are-suitable-for-json-types/:0:0","series":null,"tags":["Database"],"title":"字段是否用JSON","uri":"/what-kind-of-fields-are-suitable-for-json-types/#哪些字段适合用json哪些字段不适合用json"},{"categories":["软件开发"],"content":"\r适合用JSON的 数据不常修改 数据基本不用作查询、统计，仅做存储 数据格式易变，或不确定 没有进一步权限的要求 ","date":"2020-04-18","objectID":"/what-kind-of-fields-are-suitable-for-json-types/:1:0","series":null,"tags":["Database"],"title":"字段是否用JSON","uri":"/what-kind-of-fields-are-suitable-for-json-types/#适合用json的"},{"categories":["软件开发"],"content":"\r不适合用JSON的 该字段的操作权限超过了该表的权限，如：user下放resource_ids，user可以更新自己的信息，但他没有权限更改拥有的resource_id 需要查询、统计，尽管mysql5.7以后提供了JSON函数，但总的来说目前不是太方便 内容的格式相当固定，不会也不能轻易改变 内容经常修改 ","date":"2020-04-18","objectID":"/what-kind-of-fields-are-suitable-for-json-types/:2:0","series":null,"tags":["Database"],"title":"字段是否用JSON","uri":"/what-kind-of-fields-are-suitable-for-json-types/#不适合用json的"},{"categories":["软件开发"],"content":"事务提交大量sql与合并提交大量sql效率对比","date":"2020-04-18","objectID":"/comparision-between-commit-one-by-one-and-all-in-one/","series":null,"tags":["Database"],"title":"事务提交大量sql与合并提交大量sql效率对比","uri":"/comparision-between-commit-one-by-one-and-all-in-one/"},{"categories":["软件开发"],"content":"\r事务提交大量sql与合并提交大量sql效率对比 事务提交5000条update，耗时：13.79 秒，内存占用：17.88 MB（大量时间消耗在Query生成sql语句上） $startTime = microtime(true); $startMemory = memory_get_usage(); $transaction = \\Yii::$app-\u003edb-\u003ebeginTransaction(); for($i=0; $i\u003c 5000; ++$i) { \\Yii::$app-\u003edb-\u003ecreateCommand()-\u003eupdate(UserMenu::tableName(), ['menu_id' =\u003e 4], ['user_id' =\u003e $id, 'menu_id' =\u003e 3])-\u003eexecute(); } $transaction-\u003ecommit(); $endTime = microtime(true); $runtime = number_format($endTime - $startTime, 2); //秒 $endMemory = memory_get_usage(); $usedMemory = number_format(($endMemory - $startMemory) / 1024 / 1024, 2); //MB \\Yii::error(\"耗时：$runtime 秒，内存占用：$usedMemory MB\"); 事务提交5000条update，耗时：9.59 秒，内存占用：16.66 MB（只计算生成sql语句执行时间） $transaction = \\Yii::$app-\u003edb-\u003ebeginTransaction(); $sql = \\Yii::$app-\u003edb-\u003ecreateCommand()-\u003eupdate(UserMenu::tableName(), ['menu_id' =\u003e 4], ['user_id' =\u003e $id, 'menu_id' =\u003e 3])-\u003egetRawSql().';'; $startTime = microtime(true); $startMemory = memory_get_usage(); for($i=0; $i\u003c 5000; ++$i) { \\Yii::$app-\u003edb-\u003ecreateCommand($sql)-\u003eexecute(); } $transaction-\u003ecommit(); $endTime = microtime(true); $runtime = number_format($endTime - $startTime, 2); //秒 $endMemory = memory_get_usage(); $usedMemory = number_format(($endMemory - $startMemory) / 1024 / 1024, 2); //MB \\Yii::error(\"耗时：$runtime 秒，内存占用：$usedMemory MB\"); 合并sql提交5000条update，耗时：13.05 秒，内存占用：0.37 MB（主要时间都耗在Query生成sql语句上了） $startTime = microtime(true); $startMemory = memory_get_usage(); $transaction = \\Yii::$app-\u003edb-\u003ebeginTransaction(); $sql = ''; for($i=0; $i\u003c 5000; ++$i) { $sql .= \\Yii::$app-\u003edb-\u003ecreateCommand()-\u003eupdate(UserMenu::tableName(), ['menu_id' =\u003e 4], ['user_id' =\u003e $id, 'menu_id' =\u003e 3])-\u003egetRawSql().';'; } \\Yii::$app-\u003edb-\u003ecreateCommand($sql)-\u003eexecute(); $transaction-\u003ecommit(); $endTime = microtime(true); $runtime = number_format($endTime - $startTime, 2); //秒 $endMemory = memory_get_usage(); $usedMemory = number_format(($endMemory - $startMemory) / 1024 / 1024, 2); //MB \\Yii::error(\"耗时：$runtime 秒，内存占用：$usedMemory MB\"); 合并sql提交5000条update，耗时：4.84 秒，内存占用：0.00 MB（只计算生成sql语句执行时间 ） $transaction = \\Yii::$app-\u003edb-\u003ebeginTransaction(); $sql = ''; for($i=0; $i\u003c 5000; ++$i) { $sql .= \\Yii::$app-\u003edb-\u003ecreateCommand()-\u003eupdate(UserMenu::tableName(), ['menu_id' =\u003e 4], ['user_id' =\u003e $id, 'menu_id' =\u003e 3])-\u003egetRawSql().';'; } $startTime = microtime(true); $startMemory = memory_get_usage(); \\Yii::$app-\u003edb-\u003ecreateCommand($sql)-\u003eexecute(); $transaction-\u003ecommit(); $endTime = microtime(true); $runtime = number_format($endTime - $startTime, 2); //秒 $endMemory = memory_get_usage(); $usedMemory = number_format(($endMemory - $startMemory) / 1024 / 1024, 2); //MB \\Yii::error(\"耗时：$runtime 秒，内存占用：$usedMemory MB\"); ","date":"2020-04-18","objectID":"/comparision-between-commit-one-by-one-and-all-in-one/:0:0","series":null,"tags":["Database"],"title":"事务提交大量sql与合并提交大量sql效率对比","uri":"/comparision-between-commit-one-by-one-and-all-in-one/#事务提交大量sql与合并提交大量sql效率对比"},{"categories":["软件开发"],"content":"Linux裁剪图片+OCR识别","date":"2020-03-18","objectID":"/linux-cropped-picture-ocr-identification/","series":null,"tags":["ocr"],"title":"Linux裁剪图片+OCR识别","uri":"/linux-cropped-picture-ocr-identification/"},{"categories":["软件开发"],"content":"\rLinux裁剪图片+OCR识别","date":"2020-03-18","objectID":"/linux-cropped-picture-ocr-identification/:0:0","series":null,"tags":["ocr"],"title":"Linux裁剪图片+OCR识别","uri":"/linux-cropped-picture-ocr-identification/#linux裁剪图片ocr识别"},{"categories":["软件开发"],"content":"\r安装： sudo yum-config-manager --add-repo https://download.opensuse.org/repositories/home:/Alexander_Pozdnyakov/CentOS_7/ sudo rpm --import https://build.opensuse.org/projects/home:Alexander_Pozdnyakov/public_key sudo yum update sudo yum install tesseract # sudo yum install tesseract-langpack-deu ","date":"2020-03-18","objectID":"/linux-cropped-picture-ocr-identification/:1:0","series":null,"tags":["ocr"],"title":"Linux裁剪图片+OCR识别","uri":"/linux-cropped-picture-ocr-identification/#安装"},{"categories":["软件开发"],"content":"\r裁剪：convert zlpic.jpg -crop 300x50+268+600 zlpic1.jpg ","date":"2020-03-18","objectID":"/linux-cropped-picture-ocr-identification/:2:0","series":null,"tags":["ocr"],"title":"Linux裁剪图片+OCR识别","uri":"/linux-cropped-picture-ocr-identification/#裁剪"},{"categories":["软件开发"],"content":"\r识别： tesseract zlpic1.jpg out cat out.txt ","date":"2020-03-18","objectID":"/linux-cropped-picture-ocr-identification/:3:0","series":null,"tags":["ocr"],"title":"Linux裁剪图片+OCR识别","uri":"/linux-cropped-picture-ocr-identification/#识别"},{"categories":["IT备忘"],"content":"doskey特殊字符","date":"2020-03-15","objectID":"/doskey-meta-char/","series":null,"tags":["批处理"],"title":"doskey特殊字符","uri":"/doskey-meta-char/"},{"categories":["IT备忘"],"content":"\rdoskey特殊字符 字符 说明 $G 或 $g 重定向输出。使用任意特殊字符将输出发送到设备或文件而不是发送到屏幕。该字符与输出的重定向符号 (\u003c) 等价。 $G$G 或 $g$g 将输出附加到文件结尾。使用特殊双字符将输出附加到现有文件而不是替换文件中的日期。这些双重字符与输出的附加重定向符号 (») 等价。 $B 或 $b 重定向输入。使用任意特殊字符从设备或文件而不是从键盘读取输入。该字符与输入的重定向符号 (\u003c) 等价。 $B 或 $b 将宏输出发送给命令。这些特殊字符与使用命令行上的管道字符 ( $T 或 $t 分隔命令。创建宏或在 Doskey 命令行上键入命令时使用任一特殊字符分隔命令。这些特殊字符与使用命令行上的 \u0026 （即“与”）等价。 $$ 指定美元符号字符 ($)。 $1 到 $9 代表运行宏时要指定的任何命令行信息。特殊字符 $1 到 $9 是批处理参数，它可能使您每次运行宏时在命令行上使用不同的数据。doskey 命令中的 “ 字符类似于批处理程序中的 %1 字符。 $* 代表键入宏名称时要指定的所有命令行信息。特殊字符 $* 是可替换参数，这与批处理参数 “到 $9 相似，但有一个重要的差异。此处，在宏名后命令行上键入的所有内容替换宏中的 $*。 ","date":"2020-03-15","objectID":"/doskey-meta-char/:0:0","series":null,"tags":["批处理"],"title":"doskey特殊字符","uri":"/doskey-meta-char/#doskey特殊字符"},{"categories":["读书笔记"],"content":"漫步华尔街","date":"2020-02-22","objectID":"/a-random-walk-down-wall-street/","series":null,"tags":["投资理财"],"title":"漫步华尔街","uri":"/a-random-walk-down-wall-street/"},{"categories":["读书笔记"],"content":"\r漫步华尔街","date":"2020-02-22","objectID":"/a-random-walk-down-wall-street/:0:0","series":null,"tags":["投资理财"],"title":"漫步华尔街","uri":"/a-random-walk-down-wall-street/#漫步华尔街"},{"categories":["读书笔记"],"content":"\r这是第二遍看了，之前一遍的印象已经不深了。 正是在这一遍看的过程当中，我经历了入市以来的一次大挫折，加深了对市场更多的思考。 原来认为作者对市场的一些看法太保守了，根本是挡我的财路。入市后的一系列经历让我渐渐清醒下来。 ","date":"2020-02-22","objectID":"/a-random-walk-down-wall-street/:1:0","series":null,"tags":["投资理财"],"title":"漫步华尔街","uri":"/a-random-walk-down-wall-street/#这是第二遍看了之前一遍的印象已经不深了"},{"categories":["读书笔记"],"content":"\r总的来说这本书与《通往财富自由之路》的内容很相似，主要观点： 不管是技术、基本面还是混合，都很难战胜市场 主动基金很难持续战胜市场 在不同的生命周期对资产的配置不同 主推指数基金 ","date":"2020-02-22","objectID":"/a-random-walk-down-wall-street/:2:0","series":null,"tags":["投资理财"],"title":"漫步华尔街","uri":"/a-random-walk-down-wall-street/#总的来说这本书与通往财富自由之路的内容很相似主要观点"},{"categories":["读书笔记"],"content":"\r大道至简。 我之前想自己做价值蓝筹股，但买入个股后，尤其是重仓后，心理的那种不安，严重影响生活和工作。另外，自己很难做到下跌不惊慌。因此以后还是要走指数化投资的路。 不过作者的理论在中国也需要一些变通，中国的指数多为牛短熊长，所以长持不太可靠，还要辅以合理的止盈。另外投入的时机也会严重影响收益。这方面还有很多需要学习的和思考的。 ","date":"2020-02-22","objectID":"/a-random-walk-down-wall-street/:3:0","series":null,"tags":["投资理财"],"title":"漫步华尔街","uri":"/a-random-walk-down-wall-street/#大道至简"},{"categories":["读书笔记"],"content":"Yii2最佳实践","date":"2020-02-22","objectID":"/yii2-best-practice/","series":null,"tags":["软件开发"],"title":"Yii2最佳实践","uri":"/yii2-best-practice/"},{"categories":["读书笔记"],"content":"\rYii2最佳实践","date":"2020-02-22","objectID":"/yii2-best-practice/:0:0","series":null,"tags":["软件开发"],"title":"Yii2最佳实践","uri":"/yii2-best-practice/#yii2最佳实践"},{"categories":["读书笔记"],"content":"\r控制器： ","date":"2020-02-22","objectID":"/yii2-best-practice/:1:0","series":null,"tags":["软件开发"],"title":"Yii2最佳实践","uri":"/yii2-best-practice/#控制器"},{"categories":["读书笔记"],"content":"\r视图： ","date":"2020-02-22","objectID":"/yii2-best-practice/:2:0","series":null,"tags":["软件开发"],"title":"Yii2最佳实践","uri":"/yii2-best-practice/#视图"},{"categories":["读书笔记"],"content":"\r模型： ","date":"2020-02-22","objectID":"/yii2-best-practice/:3:0","series":null,"tags":["软件开发"],"title":"Yii2最佳实践","uri":"/yii2-best-practice/#模型"},{"categories":["读书笔记"],"content":"\r小部件： ","date":"2020-02-22","objectID":"/yii2-best-practice/:4:0","series":null,"tags":["软件开发"],"title":"Yii2最佳实践","uri":"/yii2-best-practice/#小部件"},{"categories":["读书笔记"],"content":"\r模块： ","date":"2020-02-22","objectID":"/yii2-best-practice/:5:0","series":null,"tags":["软件开发"],"title":"Yii2最佳实践","uri":"/yii2-best-practice/#模块"},{"categories":["读书笔记"],"content":"\rHTTP状态码： ","date":"2020-02-22","objectID":"/yii2-best-practice/:6:0","series":null,"tags":["软件开发"],"title":"Yii2最佳实践","uri":"/yii2-best-practice/#http状态码"},{"categories":["读书笔记"],"content":"PHP Cookbook经典实例（第二版）","date":"2020-02-22","objectID":"/php-cookbook-classic-example-second-edition/","series":null,"tags":["软件开发","PHP"],"title":"PHP Cookbook经典实例（第二版）","uri":"/php-cookbook-classic-example-second-edition/"},{"categories":["读书笔记"],"content":"\rPHP Cookbook经典实例（第二版）","date":"2020-02-22","objectID":"/php-cookbook-classic-example-second-edition/:0:0","series":null,"tags":["软件开发","PHP"],"title":"PHP Cookbook经典实例（第二版）","uri":"/php-cookbook-classic-example-second-edition/#php-cookbook经典实例第二版"},{"categories":["读书笔记"],"content":"\r字符 ucfirst()、ucwords() 首字母大写 fputcsv()、fgetcsv() pack()、unpack()、str_pad()、str_split() 固定字符宽度 wordwrap() 文本自动换行 ","date":"2020-02-22","objectID":"/php-cookbook-classic-example-second-edition/:1:0","series":null,"tags":["软件开发","PHP"],"title":"PHP Cookbook经典实例（第二版）","uri":"/php-cookbook-classic-example-second-edition/#字符"},{"categories":["读书笔记"],"content":"\r数字 range() 生成范围 mt_rand() 更好的随机 money_format() （only unix） BCMath（EX: bcadd()）、GMP（EX: gmp_add()）、big_int（EX: bi_add） 任意精度 base_convert() 进制转换 ","date":"2020-02-22","objectID":"/php-cookbook-classic-example-second-edition/:2:0","series":null,"tags":["软件开发","PHP"],"title":"PHP Cookbook经典实例（第二版）","uri":"/php-cookbook-classic-example-second-edition/#数字"},{"categories":["读书笔记"],"content":"\r日期时间 localtime() 当地时间 checkdate() 验证日期是否有效 ","date":"2020-02-22","objectID":"/php-cookbook-classic-example-second-edition/:3:0","series":null,"tags":["软件开发","PHP"],"title":"PHP Cookbook经典实例（第二版）","uri":"/php-cookbook-classic-example-second-edition/#日期时间"},{"categories":["读书笔记"],"content":"\r数组 foreach迭代副本、each()迭代本身 settype($items, 'array') array_splice() 减小数组 array_pad() 增大数组 in_array() 检查值 asort() 排序并保持索引关系 natsort() 自然算法排序（可识别img1、img10、img2之间的顺序为1,2,10） usort() 自定义排序 RecursiveArrayIterator iterator_to_array ","date":"2020-02-22","objectID":"/php-cookbook-classic-example-second-edition/:4:0","series":null,"tags":["软件开发","PHP"],"title":"PHP Cookbook经典实例（第二版）","uri":"/php-cookbook-classic-example-second-edition/#数组"},{"categories":["读书笔记"],"content":"\r变量 list($a,$b)=[$b,$a]; 交换变量 shmop（EX: shmop_open()）、SystemV（EX: shm_get_var()） 共享内存在进程间共享数据（Semaphore（EX: sem_get()）共享内存同步） addslashes(serialize())、unserialize(stripslashes()) 序列化时便于数据库查询 ","date":"2020-02-22","objectID":"/php-cookbook-classic-example-second-edition/:5:0","series":null,"tags":["软件开发","PHP"],"title":"PHP Cookbook经典实例（第二版）","uri":"/php-cookbook-classic-example-second-edition/#变量"},{"categories":["读书笔记"],"content":"\r函数 func_get_args、func_num_args 可变参数 list(, $b, ) = ex_function() // 跳过某些值 call_user_func、call_user_func_array create_function // 内部使用eval，安全性不佳，不如匿名函数function() {} ","date":"2020-02-22","objectID":"/php-cookbook-classic-example-second-edition/:6:0","series":null,"tags":["软件开发","PHP"],"title":"PHP Cookbook经典实例（第二版）","uri":"/php-cookbook-classic-example-second-edition/#函数"},{"categories":["读书笔记"],"content":"\r类和对象 __destruct() //不能在解析器中引用另一个对象，因为PHP可能已经把那个对象删除了 class_implements 返回类的所有接口 ReflectionClass 返回类的相关信息 clone $obj 浅拷贝，可以用__clone()来定制深拷贝 __call 可以将方法访问转交给组合类 Reflection::export() 快速预览类信息 ","date":"2020-02-22","objectID":"/php-cookbook-classic-example-second-edition/:7:0","series":null,"tags":["软件开发","PHP"],"title":"PHP Cookbook经典实例（第二版）","uri":"/php-cookbook-classic-example-second-edition/#类和对象"},{"categories":["读书笔记"],"content":"\rWeb基础 get_browser() 获取浏览器信息 htmlentities()、html_entity_decode() html字符转换 file_get_contents('php://input') 直接访问POST请求主体而非PHP解析后放在$_POST中的数据 flush()、ob_start()、ob_end_flush() 刷新输出 getenv()、putenv() 环境变量 apache_note() 与apache内部进行通信 ctype_* 一系列数据验证方法 htmlentities($str, ENT_QUOTES, 'UTF-8') 防止跨站点脚本 md5(uniqid()) 用token防止重复提交表单（hash('md5','string')是md5速度的两倍） ","date":"2020-02-22","objectID":"/php-cookbook-classic-example-second-edition/:8:0","series":null,"tags":["软件开发","PHP"],"title":"PHP Cookbook经典实例（第二版）","uri":"/php-cookbook-classic-example-second-edition/#web基础"},{"categories":["读书笔记"],"content":"\r访问数据库 PDO::quote() 转义引号（prepare()和execute()会自动转义） ","date":"2020-02-22","objectID":"/php-cookbook-classic-example-second-edition/:9:0","series":null,"tags":["软件开发","PHP"],"title":"PHP Cookbook经典实例（第二版）","uri":"/php-cookbook-classic-example-second-edition/#访问数据库"},{"categories":["读书笔记"],"content":"\rSession和数据保持output_add_rewrite_var() 将值写入url 预防session劫持：只允许通过cookie传递SessionID，同时生成一个url传递的session token，当请求包含sessionID和session token时才可以访问session。（P373） 预防session重放攻击 ini_set('session.use_only_cookies', true) session_start(); if(!isset($_SESSION['gen']) || $_SESSION['gen']\u003c(time()-30)) { session_regenerate_id(); //只要用户的授权范围改变，如成功登录后 $_SESSION['gen'] = time(); } ","date":"2020-02-22","objectID":"/php-cookbook-classic-example-second-edition/:10:0","series":null,"tags":["软件开发","PHP"],"title":"PHP Cookbook经典实例（第二版）","uri":"/php-cookbook-classic-example-second-edition/#session和数据保持"},{"categories":["读书笔记"],"content":"\rXML DOMDocument('1.0', 'UTF-8'); simplexml_load_* XMLReader 大型XML无法一次性全部读入内存 XPath、DOMXPath 直达所需的节点 DOMDocument::schemaValidate、DOMDocument::relaxNGValidate XML验证 iconv 字符集转换 ","date":"2020-02-22","objectID":"/php-cookbook-classic-example-second-edition/:11:0","series":null,"tags":["软件开发","PHP"],"title":"PHP Cookbook经典实例（第二版）","uri":"/php-cookbook-classic-example-second-edition/#xml"},{"categories":["读书笔记"],"content":"\rWeb自动化 Tidy 库，可以修复html strip_tags 删除html和php标签 ","date":"2020-02-22","objectID":"/php-cookbook-classic-example-second-edition/:12:0","series":null,"tags":["软件开发","PHP"],"title":"PHP Cookbook经典实例（第二版）","uri":"/php-cookbook-classic-example-second-edition/#web自动化"},{"categories":["读书笔记"],"content":"\r安全和加密 ","date":"2020-02-22","objectID":"/php-cookbook-classic-example-second-edition/:13:0","series":null,"tags":["软件开发","PHP"],"title":"PHP Cookbook经典实例（第二版）","uri":"/php-cookbook-classic-example-second-edition/#安全和加密"},{"categories":["读书笔记"],"content":"\r国际化和本地化 setlocale()、strftime() 、money_format() ","date":"2020-02-22","objectID":"/php-cookbook-classic-example-second-edition/:14:0","series":null,"tags":["软件开发","PHP"],"title":"PHP Cookbook经典实例（第二版）","uri":"/php-cookbook-classic-example-second-edition/#国际化和本地化"},{"categories":["读书笔记"],"content":"\r错误处理、故障排除和测试 debug_backtrace() init_get_all()、get_cfg_var、ini_restore() auto_prepend_file (在php.ini中）设置自动加载的文件，可用于设置DEBUG常量，密码等 ","date":"2020-02-22","objectID":"/php-cookbook-classic-example-second-edition/:15:0","series":null,"tags":["软件开发","PHP"],"title":"PHP Cookbook经典实例（第二版）","uri":"/php-cookbook-classic-example-second-edition/#错误处理故障排除和测试"},{"categories":["读书笔记"],"content":"\r正则表达式preg_replace_callback() ","date":"2020-02-22","objectID":"/php-cookbook-classic-example-second-edition/:16:0","series":null,"tags":["软件开发","PHP"],"title":"PHP Cookbook经典实例（第二版）","uri":"/php-cookbook-classic-example-second-edition/#正则表达式"},{"categories":["读书笔记"],"content":"\r文件 $php_errormsg 记录前一次错误信息（track_error需要为on） fpassthru() 直接读出文件内容并输出 readfile() 直接读取一个文件并输出到缓冲 fgets() 一次读取一行 stream_get_line() 从资源流里读取一行直到给定的定界符 parse_ini_file() print()是函数，有返回值；echo是语言结构，无返回值 escapeshellarg 把字符串转码为可以在 shell 命令里使用的参数 escapeshellcmd shell 元字符转义 popen()、pclose() 打开通向程序的管道，然后用fputs写入数据或发送命令（$php=popen('/usr/bin/nsupdate -k keyfile','w');fputs($ph,'update delete test.e.com A\\n')） backtick（`符号） 会执行其中的程序并返回结果 popen('strace ls 2\u003e\u00261','r') 将标准错误重定向到标准输出 popen('strace ls 2\u003e\u00261 1\u003e/dev/null','r') 只读取标准错误 flock() 劝告式锁定（LOCK_EX排他锁，LOCK_SH共享锁；LOCK_NB锁定时不阻塞） fopen('compress.zlib://lotsofdata.gz','r') fopen('compress.bzip2://lotsofdata.bz2','r') compress流封装（编译php时要使用--withzlib和--withbz2） ","date":"2020-02-22","objectID":"/php-cookbook-classic-example-second-edition/:17:0","series":null,"tags":["软件开发","PHP"],"title":"PHP Cookbook经典实例（第二版）","uri":"/php-cookbook-classic-example-second-edition/#文件"},{"categories":["读书笔记"],"content":"\r目录DirectoryIterator() 遍历目录 opendir()、readdir()、closedir() 打开目录遍历文件 smlink() 创建符号连接 stat()、fstat() 给出文件信息（用clearstatcache()刷新缓存结果） lstat() 给出符号链接本身的信息 chmod()、chgrp() 相当于linux命令 FilterIterator 抽象类，用accept()过滤Iterator（如DirectoryIterator） glob() 返回匹配的文件名数组（如/folder/**/*.txt） Recursive***Iterator 带递归的Iterator RecursiveIteratorIterator 将RecursiveIterator扁平化 ","date":"2020-02-22","objectID":"/php-cookbook-classic-example-second-edition/:18:0","series":null,"tags":["软件开发","PHP"],"title":"PHP Cookbook经典实例（第二版）","uri":"/php-cookbook-classic-example-second-edition/#目录"},{"categories":["读书笔记"],"content":"\r命令行PHP php_sapi_name 返回描述 PHP 所使用的接口类型的小写字符串。if('cli'==php_sapi_name() ....) ","date":"2020-02-22","objectID":"/php-cookbook-classic-example-second-edition/:19:0","series":null,"tags":["软件开发","PHP"],"title":"PHP Cookbook经典实例（第二版）","uri":"/php-cookbook-classic-example-second-edition/#命令行php"},{"categories":["读书笔记"],"content":"\r命令行输入密码： `/bin/stty -echo` //关闭回显 $password = readline(); `/bin/stty echo` ","date":"2020-02-22","objectID":"/php-cookbook-classic-example-second-edition/:19:1","series":null,"tags":["软件开发","PHP"],"title":"PHP Cookbook经典实例（第二版）","uri":"/php-cookbook-classic-example-second-edition/#命令行输入密码"},{"categories":["读书笔记"],"content":"改善Python程序的91个建议","date":"2020-02-22","objectID":"/improving-91-suggestions-from-python-programs/","series":null,"tags":["软件开发"],"title":"改善Python程序的91个建议","uri":"/improving-91-suggestions-from-python-programs/"},{"categories":["读书笔记"],"content":"\r改善Python程序的91个建议","date":"2020-02-22","objectID":"/improving-91-suggestions-from-python-programs/:0:0","series":null,"tags":["软件开发"],"title":"改善Python程序的91个建议","uri":"/improving-91-suggestions-from-python-programs/#改善python程序的91个建议"},{"categories":["读书笔记"],"content":"\rP15. enumerate()的本质是生成器 def enumerate(seq, start=0): n = start for el in seq: yield n, el n += 1 ","date":"2020-02-22","objectID":"/improving-91-suggestions-from-python-programs/:1:0","series":null,"tags":["软件开发"],"title":"改善Python程序的91个建议","uri":"/improving-91-suggestions-from-python-programs/#p15-enumerate的本质是生成器"},{"categories":["读书笔记"],"content":"\rP22. ++j不是自增运算，将被解释为+(+j)，j的值不会变化。–j同理 while j \u003c 10: ++j # j的值不会变化，因此为死循环（i+=1） ","date":"2020-02-22","objectID":"/improving-91-suggestions-from-python-programs/:2:0","series":null,"tags":["软件开发"],"title":"改善Python程序的91个建议","uri":"/improving-91-suggestions-from-python-programs/#p22-j不是自增运算将被解释为jj的值不会变化--j同理"},{"categories":["读书笔记"],"content":"\rP23. 循环和异常中的else for i in range (2,10): for j in range(2,i): if i % j == 0: break else: # 循环正常结束和循环条件不成立时被执行（break中断时不执行） print(f'{i} is a prime num.') try: db.execute(sql) excep DBError: db.rollback() else: # 无异常时执行 db.commit() ","date":"2020-02-22","objectID":"/improving-91-suggestions-from-python-programs/:3:0","series":null,"tags":["软件开发"],"title":"改善Python程序的91个建议","uri":"/improving-91-suggestions-from-python-programs/#p23-循环和异常中的else"},{"categories":["读书笔记"],"content":"\rP25. try/except中未被except处理的异常会临时保存起来，finally执行完毕后再次抛出，但finally中如果：有新的异常，或者执行了return或者break，临时保存的异常将丢失。 try: raise IndexEror() except NameError, e: print('Name error') break finally: print('Finally') return ","date":"2020-02-22","objectID":"/improving-91-suggestions-from-python-programs/:4:0","series":null,"tags":["软件开发"],"title":"改善Python程序的91个建议","uri":"/improving-91-suggestions-from-python-programs/#p25-tryexcept中未被except处理的异常会临时保存起来finally执行完毕后再次抛出但finally中如果"},{"categories":["读书笔记"],"content":"\rP28. .format函数的形式： [[填充符] 对齐方式][符号][#][0][宽度][,][.精确度][转换类型] | | | | |______ c/s/r/d/u/o/x/e/f/g | | | |_____数字 | | |_______ +/-/空格 | |______ \u003c/\u003e/=/^ |___ 除'{'和'}'之外的任意字符 'Num {0:,} hex is: {0:#x}, oct is {0:#o}, Num {+1:\u003c20}}'.format(123, -123) 'Max is {max:0.3f}, min is {min:0.3f}'.format(max=100, min=12.5) point = (1,3) 'X:{0[0]},Y:{0[1]}'.format(point) class A(object): def __init__(self, name): self.name = name def __str__(self): return 'Name={self.name}'.format(self=self) ","date":"2020-02-22","objectID":"/improving-91-suggestions-from-python-programs/:5:0","series":null,"tags":["软件开发"],"title":"改善Python程序的91个建议","uri":"/improving-91-suggestions-from-python-programs/#p28-format函数的形式"},{"categories":["读书笔记"],"content":"\rP32. 默认参数会被保存在函数对象的func_defaults中，因此不要修改默认参数，否则会影响下次使用 def func1(list=[]): list.append(1) return list 上面的函数每次调用后list都会添加1，影响下面使用。 ","date":"2020-02-22","objectID":"/improving-91-suggestions-from-python-programs/:6:0","series":null,"tags":["软件开发"],"title":"改善Python程序的91个建议","uri":"/improving-91-suggestions-from-python-programs/#p32-默认参数会被保存在函数对象的func_defaults中因此不要修改默认参数否则会影响下次使用"},{"categories":["读书笔记"],"content":"\rP34. str()调用__str__()，面向用户，repr()调用__repr__()，面向机器： a=datetime.today() str(a) # '2020-01-01' repr(a) # 'datetime.date(2020, 1, 1)' ","date":"2020-02-22","objectID":"/improving-91-suggestions-from-python-programs/:7:0","series":null,"tags":["软件开发"],"title":"改善Python程序的91个建议","uri":"/improving-91-suggestions-from-python-programs/#p34-str调用__str__面向用户repr调用__repr__面向机器"},{"categories":["读书笔记"],"content":"\rP35. classmethod和staticmethod class Fruit(object): def instance_method(self, x): # self为实例，隐式传入 pass @staticmethod def static_method(x): return Fruit(x) @classmethod def class_method(cls, x): # cls为类，隐式传入 return cls(x) # 需要用classmethod的例子 class Orange(Fruit): pass # 继承的class_method中，如果换成static_method # 则返回的不是Orange实例，而是Fruit实例 ","date":"2020-02-22","objectID":"/improving-91-suggestions-from-python-programs/:8:0","series":null,"tags":["软件开发"],"title":"改善Python程序的91个建议","uri":"/improving-91-suggestions-from-python-programs/#p35-classmethod和staticmethod"},{"categories":["读书笔记"],"content":"\rP36. 用counter()统计列表 from collections import Counter a = ['a', 1, 'a', 0, 'b', 1] Counter(a) # Counter({'a': 2, 1: 2, 'b': 1, 0: 1}) ","date":"2020-02-22","objectID":"/improving-91-suggestions-from-python-programs/:9:0","series":null,"tags":["软件开发"],"title":"改善Python程序的91个建议","uri":"/improving-91-suggestions-from-python-programs/#p36-用counter统计列表"},{"categories":["读书笔记"],"content":"\rP51. 使用mixin动态混入多继承 class People(object): def make_tea(self): self.get_teapot() # get_teapot() 未定义，留在子类中定义 # 但也可以使用mixin，先定义一些含get_teapot的类： class UseSimpleTeapot(object): def get_teapot(): pass # 现在可以mixin，因为每个类都有个__bases__，是所有基类的元组 def simple_tea_people(): people = People() people.__bases__ += (UseSimpleTeapot, ) ","date":"2020-02-22","objectID":"/improving-91-suggestions-from-python-programs/:10:0","series":null,"tags":["软件开发"],"title":"改善Python程序的91个建议","uri":"/improving-91-suggestions-from-python-programs/#p51-使用mixin动态混入多继承"},{"categories":["读书笔记"],"content":"\rP54. built-in object ","date":"2020-02-22","objectID":"/improving-91-suggestions-from-python-programs/:11:0","series":null,"tags":["软件开发"],"title":"改善Python程序的91个建议","uri":"/improving-91-suggestions-from-python-programs/#p54-built-in-object"},{"categories":["读书笔记"],"content":"\rP55. new(cls, *args, **kwagrs) # 主要用于类的初始化 __init__(self, *args, **kwagrs) # 主要用于实例的初始化 ","date":"2020-02-22","objectID":"/improving-91-suggestions-from-python-programs/:12:0","series":null,"tags":["软件开发"],"title":"改善Python程序的91个建议","uri":"/improving-91-suggestions-from-python-programs/#p55-__new__cls-args-kwagrs--主要用于类的初始化"},{"categories":["读书笔记"],"content":"\rP59. getattribute()总会被调用，而__getattr__()只有在__getattribute__()中引发异常的情况下才会被调用。 ","date":"2020-02-22","objectID":"/improving-91-suggestions-from-python-programs/:13:0","series":null,"tags":["软件开发"],"title":"改善Python程序的91个建议","uri":"/improving-91-suggestions-from-python-programs/#p59-__getattribute__总会被调用而__getattr__只有在__getattribute__中引发异常"},{"categories":["读书笔记"],"content":"\rP63. 对象协议 __str__() / __repr__() / __int__() / __long__() / __float__() / __nonzero__() __cmp__() / __eq__() / __ne__() / __lt__() / __gt__() 所有运算符都可以有反运算符：方法前面加r， __sub__() =\u003e __rsub__() __len__() / __getitem__() / __setitem__() / __delitem__() / __reversed__() / __contains__() __call__() / __hash__() / __enter__() / __exit__() __getattr__() / __setattr__() / __delattr__() ","date":"2020-02-22","objectID":"/improving-91-suggestions-from-python-programs/:14:0","series":null,"tags":["软件开发"],"title":"改善Python程序的91个建议","uri":"/improving-91-suggestions-from-python-programs/#p63-对象协议"},{"categories":["软件开发"],"content":"Omnis历史","date":"2020-02-22","objectID":"/omnis-history/","series":null,"tags":["Omnis"],"title":"Omnis历史","uri":"/omnis-history/"},{"categories":["软件开发"],"content":"\rOmnis历史 ","date":"2020-02-22","objectID":"/omnis-history/:0:0","series":null,"tags":["Omnis"],"title":"Omnis历史","uri":"/omnis-history/#omnis历史"},{"categories":["软件开发"],"content":"Omnis event route","date":"2020-02-22","objectID":"/omnis-event-route/","series":null,"tags":["Omnis"],"title":"Omnis event route","uri":"/omnis-event-route/"},{"categories":["软件开发"],"content":"\rOmnis-event-route ","date":"2020-02-22","objectID":"/omnis-event-route/:0:0","series":null,"tags":["Omnis"],"title":"Omnis event route","uri":"/omnis-event-route/#omnis-event-route"},{"categories":["软件开发"],"content":"python日期函数","date":"2020-02-18","objectID":"/python-date-time-functions/","series":null,"tags":["Python"],"title":"python日期函数","uri":"/python-date-time-functions/"},{"categories":["软件开发"],"content":"\rpython日期函数","date":"2020-02-18","objectID":"/python-date-time-functions/:0:0","series":null,"tags":["Python"],"title":"python日期函数","uri":"/python-date-time-functions/#python日期函数"},{"categories":["软件开发"],"content":"\r函数 ","date":"2020-02-18","objectID":"/python-date-time-functions/:1:0","series":null,"tags":["Python"],"title":"python日期函数","uri":"/python-date-time-functions/#函数"},{"categories":["软件开发"],"content":"\r更新（2022-2-18）：频繁使用时推荐用 arrow ","date":"2020-02-18","objectID":"/python-date-time-functions/:2:0","series":null,"tags":["Python"],"title":"python日期函数","uri":"/python-date-time-functions/#更新2022-2-18"},{"categories":["软件开发"],"content":"python标准类库结构图","date":"2020-02-18","objectID":"/python-standard-lib-struct-mind-pic/","series":null,"tags":["Python"],"title":"python标准类库结构图","uri":"/python-standard-lib-struct-mind-pic/"},{"categories":["软件开发"],"content":"\rpython标准类库结构图 ","date":"2020-02-18","objectID":"/python-standard-lib-struct-mind-pic/:0:0","series":null,"tags":["Python"],"title":"python标准类库结构图","uri":"/python-standard-lib-struct-mind-pic/#python标准类库结构图"},{"categories":["软件开发"],"content":"jupyter切换conda环境","date":"2020-02-18","objectID":"/jupyter-switch-conda-env/","series":null,"tags":["Python"],"title":"jupyter切换conda环境","uri":"/jupyter-switch-conda-env/"},{"categories":["软件开发"],"content":"\rjupyter切换conda环境","date":"2020-02-18","objectID":"/jupyter-switch-conda-env/:0:0","series":null,"tags":["Python"],"title":"jupyter切换conda环境","uri":"/jupyter-switch-conda-env/#jupyter切换conda环境"},{"categories":["软件开发"],"content":"\r命令 conda install nb_conda_kernels conda create -n env_name python=3.8 ipykernel ","date":"2020-02-18","objectID":"/jupyter-switch-conda-env/:1:0","series":null,"tags":["Python"],"title":"jupyter切换conda环境","uri":"/jupyter-switch-conda-env/#命令"},{"categories":["软件开发"],"content":"\r打开jupyter notebook，选择环境","date":"2020-02-18","objectID":"/jupyter-switch-conda-env/:2:0","series":null,"tags":["Python"],"title":"jupyter切换conda环境","uri":"/jupyter-switch-conda-env/#打开jupyter-notebook选择环境"},{"categories":["软件开发"],"content":"\r更新（2022-2-18）现在在vscode中使用jupyter再也不用操心这些了 ","date":"2020-02-18","objectID":"/jupyter-switch-conda-env/:3:0","series":null,"tags":["Python"],"title":"jupyter切换conda环境","uri":"/jupyter-switch-conda-env/#更新2022-2-18"},{"categories":["软件开发"],"content":"IPython魔术函数","date":"2020-02-18","objectID":"/ipython-magic-functions/","series":null,"tags":["Python"],"title":"IPython魔术函数","uri":"/ipython-magic-functions/"},{"categories":["软件开发"],"content":"\rIPython魔术函数 ","date":"2020-02-18","objectID":"/ipython-magic-functions/:0:0","series":null,"tags":["Python"],"title":"IPython魔术函数","uri":"/ipython-magic-functions/#ipython魔术函数"},{"categories":["生活随笔"],"content":"社保缴费比例","date":"2020-02-17","objectID":"/social-security-contribution-ratio/","series":null,"tags":["社保"],"title":"社保缴费比例","uri":"/social-security-contribution-ratio/"},{"categories":["生活随笔"],"content":"\r社保缴费比例 养老保险： 个人缴费根据职工本人上一年度月平均工资（最低数为上年全市职工工资的60%;最高数为上年全市职工工资的300%）的8%缴纳。 单位缴费根据职工本人上一年度月平均工资的22%缴纳。2006年1月1日起，人社部将个人养老账户的规模统一由本人缴费工资的11%调整为8%。此前的政策是个人缴费全部和单位缴费的3%计入个人养老账户，单位缴纳的19%划转为社会统筹，而新政策将单位缴费的3%也划入社会统筹用来解决养老空账问题。 医疗保险：单位10%，个人2%+3元; 失业保险：单位1%，个人0.2%; 工伤保险：根据单位被划分的行业范围来确定它的工伤费率，在0.5%~2%之间; 生育保险：单位0.8%，个人不交钱。 ","date":"2020-02-17","objectID":"/social-security-contribution-ratio/:0:0","series":null,"tags":["社保"],"title":"社保缴费比例","uri":"/social-security-contribution-ratio/#社保缴费比例"},{"categories":["读书笔记"],"content":"我如何从股市赚了200万","date":"2020-02-12","objectID":"/how-do-i-earn-2-million-from-the-stock-market/","series":null,"tags":["投资理财"],"title":"我如何从股市赚了200万","uri":"/how-do-i-earn-2-million-from-the-stock-market/"},{"categories":["读书笔记"],"content":"\r我如何从股市赚了200万","date":"2020-02-12","objectID":"/how-do-i-earn-2-million-from-the-stock-market/:0:0","series":null,"tags":["投资理财"],"title":"我如何从股市赚了200万","uri":"/how-do-i-earn-2-million-from-the-stock-market/#我如何从股市赚了200万"},{"categories":["读书笔记"],"content":"\r很快的时间内看完了这本书主要是因为这是一位非专业人士写的，没有指标和术语，像看故事一样，读得很流畅。 ","date":"2020-02-12","objectID":"/how-do-i-earn-2-million-from-the-stock-market/:1:0","series":null,"tags":["投资理财"],"title":"我如何从股市赚了200万","uri":"/how-do-i-earn-2-million-from-the-stock-market/#很快的时间内看完了这本书"},{"categories":["读书笔记"],"content":"\r综合一下作者的观点就是： 学费是必要要交的，不光是知识方面，还有心情方面，让你对市场充满敬畏之心 一定要止损 不要过度交易和频繁交易 条件买单和自动止损（也就是说，建立自己的交易系统，然后机械地执行） 不要操作那些便宜的股票 箱体理论 要顺大盘的势来做，不可逆势而为 要有耐心，等待机会的出现（这又对应了第4 点，要有交易系统） 独立思考，对自己的决定负责 持有上涨的，卖出亏损的 价要量来印证 思考： 作者的方法也全面，也很接地气，但在A股的T+1以及没有止损单的情况下，不太适合。 可以学习到的点有：止损、交易系统、等待机会、买卖逻辑 ","date":"2020-02-12","objectID":"/how-do-i-earn-2-million-from-the-stock-market/:2:0","series":null,"tags":["投资理财"],"title":"我如何从股市赚了200万","uri":"/how-do-i-earn-2-million-from-the-stock-market/#综合一下作者的观点就是"},{"categories":["IT备忘"],"content":"sysbench成绩比较","date":"2020-02-11","objectID":"/sysbench-performance-remark/","series":null,"tags":["Linux"],"title":"sysbench成绩比较","uri":"/sysbench-performance-remark/"},{"categories":["IT备忘"],"content":"\rsysbench成绩比较","date":"2020-02-11","objectID":"/sysbench-performance-remark/:0:0","series":null,"tags":["Linux"],"title":"sysbench成绩比较","uri":"/sysbench-performance-remark/#sysbench成绩比较"},{"categories":["IT备忘"],"content":"\r命令：sysbench cpu --cpu-max-prime=20000 --threads=4 run Rspi 3B+ 1.4GHz 4 cores ARM Cortex-A53: CPU speed: events per second: 1074.56 General statistics: total time: 10.0037s total number of events: 10756 Latency (ms): min: 3.64 avg: 3.72 max: 18.10 95th percentile: 3.75 sum: 39982.29 Threads fairness: events (avg/stddev): 2689.0000/4.06 execution time (avg/stddev): 9.9956/0.00 N3150 (4 cores 1.60 GHz) CPU speed: events per second: 710.77 General statistics: total time: 10.0040s total number of events: 7112 Latency (ms): min: 5.58 avg: 5.62 max: 25.14 95th percentile: 5.67 sum: 40002.80 Threads fairness: events (avg/stddev): 1778.0000/4.42 execution time (avg/stddev): 10.0007/0.00 X5670 (TQ R410) CPU speed: events per second: 1419.63 General statistics: total time: 10.0013s total number of events: 14201 Latency (ms): min: 2.63 avg: 2.82 max: 6.14 95th percentile: 2.91 sum: 39981.89 Threads fairness: events (avg/stddev): 3550.2500/47.99 execution time (avg/stddev): 9.9955/0.00 i9-8950HK (XPS15) CPU speed: events per second: 1438.23 General statistics: total time: 10.0018s total number of events: 14388 Latency (ms): min: 1.73 avg: 2.78 max: 36.17 95th percentile: 3.55 sum: 39945.20 Threads fairness: events (avg/stddev): 3597.0000/8.46 execution time (avg/stddev): 9.9863/0.00 E5-2680 v3 (阿里云) CPU speed: events per second: 531.70 General statistics: total time: 10.0075s total number of events: 5322 Latency (ms): min: 3.52 avg: 7.51 max: 24.23 95th percentile: 13.70 sum: 39981.61 Threads fairness: events (avg/stddev): 1330.5000/16.74 execution time (avg/stddev): 9.9954/0.01 E3 1220L V2 (PVE) CPU speed: events per second: 1014.66 General statistics: total time: 10.0035s total number of events: 10152 Latency (ms): min: 2.88 avg: 3.94 max: 16.00 95th percentile: 4.03 sum: 40004.30 Threads fairness: events (avg/stddev): 2538.0000/12.81 execution time (avg/stddev): 10.0011/0.00 E5645 (SNF ESXI) CPU speed: events per second: 1124.96 General statistics: total time: 10.0033s total number of events: 11256 Latency (ms): min: 3.15 avg: 3.55 max: 8.59 95th percentile: 5.57 sum: 39986.43 Threads fairness: events (avg/stddev): 2814.0000/31.28 execution time (avg/stddev): 9.9966/0.00 E5-1620 (T3600) CPU speed: events per second: 1466.98 General statistics: total time: 10.0010s total number of events: 14675 Latency (ms): min: 2.30 avg: 2.72 max: 41.00 95th percentile: 3.13 sum: 39962.08 Threads fairness: events (avg/stddev): 3668.7500/18.43 execution time (avg/stddev): 9.9905/0.00 E5-2690 (vps Dedipath) CPU speed: events per second: 256.67 General statistics: total time: 10.0069s total number of events: 2569 Latency (ms): min: 2.78 avg: 15.55 max: 158.82 95th percentile: 47.47 sum: 39959.97 Threads fairness: events (avg/stddev): 642.2500/2.95 execution time (avg/stddev): 9.9900/0.02 ","date":"2020-02-11","objectID":"/sysbench-performance-remark/:1:0","series":null,"tags":["Linux"],"title":"sysbench成绩比较","uri":"/sysbench-performance-remark/#命令"},{"categories":["IT备忘"],"content":"Google定义的保留端口","date":"2020-02-05","objectID":"/google%E5%AE%9A%E4%B9%89%E7%9A%84%E4%BF%9D%E7%95%99%E7%AB%AF%E5%8F%A3/","series":null,"tags":["网络"],"title":"Google定义的保留端口","uri":"/google%E5%AE%9A%E4%B9%89%E7%9A%84%E4%BF%9D%E7%95%99%E7%AB%AF%E5%8F%A3/"},{"categories":["IT备忘"],"content":"\rGoogle定义的保留端口 端口 备注 1 tcpmux 7 echo 9 discard 11 systat 13 daytime 15 netstat 17 qotd 19 chargen 20 ftp data 21 ftp access 22 ssh 23 telnet 25 smtp 37 time 42 name 43 nicname 53 domain 77 priv-rjs 79 finger 87 ttylink 95 supdup 101 hostriame 102 iso-tsap 103 gppitnp 104 acr-nema 109 pop2 110 pop3 111 sunrpc 113 auth 115 sftp 117 uucp-path 119 nntp 123 NTP 135 loc-srv /epmap 139 netbios 143 imap2 179 BGP 389 ldap 465 smtp+ssl 512 print / exec 513 login 514 shell 515 printer 526 tempo 530 courier 531 chat 532 netnews 540 uucp 556 remotefs 563 nntp+ssl 587 stmp? 601 ?? 636 ldap+ssl 993 ldap+ssl 995 pop3+ssl 2049 nfs 3659 apple-sasl / PasswordServer 4045 lockd 6000 X11 6665 Alternate IRC [Apple addition] 6666 Alternate IRC [Apple addition] 6667 Standard IRC [Apple addition] 6668 Alternate IRC [Apple addition] 6669 Alternate IRC [Apple addition] ","date":"2020-02-05","objectID":"/google%E5%AE%9A%E4%B9%89%E7%9A%84%E4%BF%9D%E7%95%99%E7%AB%AF%E5%8F%A3/:0:0","series":null,"tags":["网络"],"title":"Google定义的保留端口","uri":"/google%E5%AE%9A%E4%B9%89%E7%9A%84%E4%BF%9D%E7%95%99%E7%AB%AF%E5%8F%A3/#google定义的保留端口"},{"categories":["读书笔记"],"content":"可转债投资魔法书","date":"2020-01-22","objectID":"/convertible-invested-investment-magic-book/","series":null,"tags":["投资理财"],"title":"可转债投资魔法书","uri":"/convertible-invested-investment-magic-book/"},{"categories":["读书笔记"],"content":"\r可转债投资魔法书","date":"2020-01-22","objectID":"/convertible-invested-investment-magic-book/:0:0","series":null,"tags":["投资理财"],"title":"可转债投资魔法书","uri":"/convertible-invested-investment-magic-book/#可转债投资魔法书"},{"categories":["读书笔记"],"content":"\r可转债数据东财可转债 ","date":"2020-01-22","objectID":"/convertible-invested-investment-magic-book/:1:0","series":null,"tags":["投资理财"],"title":"可转债投资魔法书","uri":"/convertible-invested-investment-magic-book/#可转债数据"},{"categories":["读书笔记"],"content":"\r要点 转股价： 本次可转债的初始转股价格为 2.67 元/股，不低于募集说明书公告日前二十个交易日公司股票交易均价和前一交易日公司股票交易均价。 强制赎回条款： A. 在转股期内，如果公司股票在任何连续三十个交易日中至少十五个交易日的收盘价格不低于当期转股价格的 130%（含 130%）； 下调转股价条款： 在本次可转债存续期内，当公司股票在任意二十个连续交易日中至少十个交易日的收盘价格低于当期转股价格 80%时，公司董事会有权在该情形发生后的 10 个交易日内提出转股价格向下修正方案并提交公司股东大会表决，该方案须经出席会议的股东所持表决权的三分之二以上通过方可实施。 回售保护条款： 自本次可转债第二个计息年度起， 如果公司股票在任何连续三十个交易日的收盘价格低于当期转股价格的 70%时，可转债持有人有权将其持有的可转债全部或部分按债券面值加上当期应计利息的价格回售给公司。 ","date":"2020-01-22","objectID":"/convertible-invested-investment-magic-book/:2:0","series":null,"tags":["投资理财"],"title":"可转债投资魔法书","uri":"/convertible-invested-investment-magic-book/#要点"},{"categories":["读书笔记"],"content":"\r小结","date":"2020-01-22","objectID":"/convertible-invested-investment-magic-book/:3:0","series":null,"tags":["投资理财"],"title":"可转债投资魔法书","uri":"/convertible-invested-investment-magic-book/#小结"},{"categories":["读书笔记"],"content":"\r是不是很简单？其实还能更简单： 2.67元/股； 30个交易日至少15日130%赎回； 20个交易日10日低于 80%下调； 第2年起30个交易日低于70%回售。 ","date":"2020-01-22","objectID":"/convertible-invested-investment-magic-book/:3:1","series":null,"tags":["投资理财"],"title":"可转债投资魔法书","uri":"/convertible-invested-investment-magic-book/#是不是很简单其实还能更简单"},{"categories":["读书笔记"],"content":"\r策略 步骤 1，在面值附近买入可转债，越低越好； 步骤 2，不断记录可转债价格的最高点，持有可转债不动； 步骤 3，一旦可转债价格跌破当前最高点的 90%，或从最高价跌掉 10 元，立即卖出； 步骤 4，重复步骤 1 的过程，不到面值附近绝对不买。 ","date":"2020-01-22","objectID":"/convertible-invested-investment-magic-book/:4:0","series":null,"tags":["投资理财"],"title":"可转债投资魔法书","uri":"/convertible-invested-investment-magic-book/#策略"},{"categories":["读书笔记"],"content":"\r优化 可以把卖出的最低门槛限制在 135 元或者 140 元，因为一旦正股价超越转股价的130%，可转债的价格往往在这两个价位之上。因此只要低于这个价格，即坚决持有不卖。（当然，可转债存续期间的最后一年情况除外。） ","date":"2020-01-22","objectID":"/convertible-invested-investment-magic-book/:4:1","series":null,"tags":["投资理财"],"title":"可转债投资魔法书","uri":"/convertible-invested-investment-magic-book/#优化"},{"categories":["读书笔记"],"content":"\r三条安全线","date":"2020-01-22","objectID":"/convertible-invested-investment-magic-book/:5:0","series":null,"tags":["投资理财"],"title":"可转债投资魔法书","uri":"/convertible-invested-investment-magic-book/#三条安全线"},{"categories":["读书笔记"],"content":"\r到期安全价（110元）、回售价、面值，三个安全价 进入了第一条安全线（到期安全价110元），就少买点，保本了嘛！开始建仓 进入了第二条安全线（当期回售价），就再买点，更安全了嘛！陆续加仓 进入了第三条安全线（面值100元），就多多买，更更安全了嘛！重仓持有 ","date":"2020-01-22","objectID":"/convertible-invested-investment-magic-book/:5:1","series":null,"tags":["投资理财"],"title":"可转债投资魔法书","uri":"/convertible-invested-investment-magic-book/#到期安全价110元回售价面值三个安全价"},{"categories":["读书笔记"],"content":"\r偿债能力比较好的企业，一般具有如下特点： 主业稳定供血。历年经营现金流净值为正数，稳定增长且金额较大最佳。 现金余额大于已发转债的余额，有财力支持直接赎回或回售。 流动比例大于1【流动资产可以偿还短期债务】，最好速动比率也大于1【容易变现的资产可以偿还短期债务】。 ","date":"2020-01-22","objectID":"/convertible-invested-investment-magic-book/:5:2","series":null,"tags":["投资理财"],"title":"可转债投资魔法书","uri":"/convertible-invested-investment-magic-book/#偿债能力比较好的企业一般具有如下特点"},{"categories":["读书笔记"],"content":"\r比较好的企业具有如下特点： 业绩稳定增长，或者周期性小于可转债存续期。 赢利能力偏强，最近5年ROE均值大于10%，且相对稳定最佳。 估值适中偏低。采用适合的估值方式，估值分位数小于50%为佳，且相对同行也合理或偏低。 ","date":"2020-01-22","objectID":"/convertible-invested-investment-magic-book/:5:3","series":null,"tags":["投资理财"],"title":"可转债投资魔法书","uri":"/convertible-invested-investment-magic-book/#比较好的企业具有如下特点"},{"categories":["软件开发"],"content":"将sphinx配置为更好的实时搜索引擎","date":"2020-01-18","objectID":"/config-sphinx-as-a-better-real-time-search-engine/","series":null,"tags":["Database","Sphinx"],"title":"将sphinx配置为更好的实时搜索引擎","uri":"/config-sphinx-as-a-better-real-time-search-engine/"},{"categories":["软件开发"],"content":"\r将sphinx配置为更好的实时搜索引擎","date":"2020-01-18","objectID":"/config-sphinx-as-a-better-real-time-search-engine/:0:0","series":null,"tags":["Database","Sphinx"],"title":"将sphinx配置为更好的实时搜索引擎","uri":"/config-sphinx-as-a-better-real-time-search-engine/#将sphinx配置为更好的实时搜索引擎"},{"categories":["软件开发"],"content":"\rsphinx以它的简单、快速吸引着我。但它的plain增量索引有两大问题一直困扰着我： 一是增量索引只能定时创建，必须会造成数据到主索引时存在一个时间差，而且经测试，增量索引merge到主索引时还经常会被阻塞一段时间（–rotate）； 二是在增量索引中无法对字符串属性进行修改UPDATE，所以发布的物品修改了名称就甭想搜索到了。 ","date":"2020-01-18","objectID":"/config-sphinx-as-a-better-real-time-search-engine/:1:0","series":null,"tags":["Database","Sphinx"],"title":"将sphinx配置为更好的实时搜索引擎","uri":"/config-sphinx-as-a-better-real-time-search-engine/#sphinx以它的简单快速吸引着我但它的plain增量索引有两大问题一直困扰着我"},{"categories":["软件开发"],"content":"\rsphinx也实现了一个rt（实时）索引，可以在生产环境中使用。但是，它也有几个缺点： 搜索性能差很多，见下图： 红色为rt索引，蓝色为plain索引。 主要差距来自于rt实时索引在超出rt_mem_limit 之后就会将内存中的内容RAM CHUNK写入磁盘块DISK CHUNK，当多次写入磁盘块后，每次搜索的结果都需要从多个磁盘块中读取，然后再合并结果。当然这可以通过加大rt_mem_limit来解决： 如果加大了rt_mem_limit，那么rt索引会在内存中保留大量数据，为了从崩溃中恢复，可能需要flush加binlog获取更好的恢复效果，然而大数据量flush时会有些卡顿。 高频的DELETE/REPLACE会引起碎片，当然可以用OPTIMIZE命令来整理。 但OPTIMIZE不但需要大量IO，也需要大量CPU时间，因为它需要读取多个CHUNK，然后再合并结果。 一旦修改了数据库表结构，那要修改rt索引中的数据也是比较麻烦的，需要手工修改。 综上所述，纯使用sphinx的rt索引还是比较娇贵的。我一直想把rt索引的实时和可修改字符串优势与plain索引的快速创建优势结合起来，经过不断查看官方文档，我找到了一个兼顾两者优点的方案。 ","date":"2020-01-18","objectID":"/config-sphinx-as-a-better-real-time-search-engine/:2:0","series":null,"tags":["Database","Sphinx"],"title":"将sphinx配置为更好的实时搜索引擎","uri":"/config-sphinx-as-a-better-real-time-search-engine/#sphinx也实现了一个rt实时索引可以在生产环境中使用但是它也有几个缺点"},{"categories":["软件开发"],"content":"\r简而言之就是：创一个每日定时任务，在夜里创建全量plain索引，然后将全量索引TRUNCATE，同时将plain索引ATTACH 到rt实时索引，随后只在rt索引中搜索和修改（在修改DB中的数据后）。 这样做的优点我们最后来看。下面先用实例来演示一遍—————： 假设我们有一个求购表，叫ask_buy，简化的表结构为： CREATETABLE `ask_buy` ( `id` INT(11) NOTNULL AUTO_INCREMENT, `title` VARCHAR(200) NOTNULL, `deleted` TINYINT(1) NOTNULLDEFAULT'0', PRIMARYKEY (`id`), ) COMMENT='求购' COLLATE='utf8_general_ci' ENGINE=InnoDB ; CREATE TABLE `ask_buy` ( `id` INT(11) NOT NULL AUTO_INCREMENT, `title` VARCHAR(200) NOT NULL, `deleted` TINYINT(1) NOT NULL DEFAULT '0', PRIMARY KEY (`id`), ) COMMENT='求购' COLLATE='utf8_general_ci' ENGINE=InnoDB ; 首先我们创建一个全量plain索引（片断）： source ask_buy_src { type = mysql sql_host = localhost sql_user = root sql_pass = root sql_db = taoquan sql_port = 3306 # optional, default is 3306 sql_query_pre = SET NAMES utf8 sql_query_pre = SET SESSION query_cache_type=OFF sql_query = SELECT id, title, deleted FROM t_ask_buy sql_attr_uint = deleted sql_field_string = title sql_query_post_index = REPLACE INTO search_counter SELECT 'ask_buy',MAX(id) FROM ask_buy sql_ranged_throttle = 0 } index ask_buy { type = plain source = ask_buy_src path = /usr/local/sphinx/data/ask_buy docinfo = extern dict = keywords mlock = 0 morphology = none min_word_len = 1 ngram_len = 1 ngram_chars = U+3000..U+2FA1F html_strip = 0 } index rt_ask_buy { type = rt path = /usr/local/sphinx/var/data/rt_ask_buy rt_mem_limit = 512M rt_field = title rt_attr_uint = deleted } source ask_buy_src { type = mysql sql_host = localhost sql_user = root sql_pass = root sql_db = taoquan sql_port = 3306 # optional, default is 3306 sql_query_pre = SET NAMES utf8 sql_query_pre = SET SESSION query_cache_type=OFF sql_query = SELECT id, title, deleted FROM t_ask_buy sql_attr_uint = deleted sql_field_string = title sql_query_post_index = REPLACE INTO search_counter SELECT 'ask_buy',MAX(id) FROM ask_buy sql_ranged_throttle = 0 } index ask_buy { type = plain source = ask_buy_src path = /usr/local/sphinx/data/ask_buy docinfo = extern dict = keywords mlock = 0 morphology = none min_word_len = 1 ngram_len = 1 ngram_chars = U+3000..U+2FA1F html_strip = 0 } index rt_ask_buy { type = rt path = /usr/local/sphinx/var/data/rt_ask_buy rt_mem_limit = 512M rt_field = title rt_attr_uint = deleted } 然后创建一个脚本index.sh来创建plain全量索引并ATTACH到rt索引： #!/bin/bash /usr/local/sphinx/bin/indexer goods --rotate --all \u003e\u003e /usr/local/sphinx/var/log/index_rt.log mysql -P 9306 -h 127.0.0.1 -e\"TRUNCATE RTINDEX rt_ask_buy;ATTACH INDEX ask_buy TO RTINDEX rt_ask_buy;\" #!/bin/bash /usr/local/sphinx/bin/indexer goods --rotate --all \u003e\u003e /usr/local/sphinx/var/log/index_rt.log mysql -P 9306 -h 127.0.0.1 -e\"TRUNCATE RTINDEX rt_ask_buy;ATTACH INDEX ask_buy TO RTINDEX rt_ask_buy;\" 然后在每天夜里2点30创建： 30 2 * * * sudo ~/index.sh 30 2 * * * sudo ~/index.sh 最后来检验结果了： 优点： 这样rt索引就无需定期flush到磁盘，因为即便它丢失了也可以直接进行重建，而且重建后还没有碎片。 还测试了，如果修改了表结构，只要修改sphinx配置文件，然后重启searchd进程，最后再执行index.sh即可。 如果sphinx崩溃，只需要再执行index.sh即可，无需从binlog或dump中恢复到rt索引，直接从数据源重建索引的速度是很快的： 这种方案的检索速度比plain方案相当，因为全量索引的DISK CHUNK只有一个，而只要rt_mem_limit设置合理，每天新增的DISK CHUNK也不会很多，这样在一两个CHUNK之间合并，速度只比纯plain方案略低。参考下图的2048M(5+1)，重点不在2048M，而在后面的5+1，即5个DISK CHUNK+1个RAM CHUNK。 ","date":"2020-01-18","objectID":"/config-sphinx-as-a-better-real-time-search-engine/:3:0","series":null,"tags":["Database","Sphinx"],"title":"将sphinx配置为更好的实时搜索引擎","uri":"/config-sphinx-as-a-better-real-time-search-engine/#简而言之"},{"categories":["IT备忘"],"content":"zfs命令","date":"2020-01-11","objectID":"/zfs-command-remark/","series":null,"tags":["zfs"],"title":"zfs命令","uri":"/zfs-command-remark/"},{"categories":["IT备忘"],"content":"\rzfs命令zpool tank=儲存池名稱 ","date":"2020-01-11","objectID":"/zfs-command-remark/:0:0","series":null,"tags":["zfs"],"title":"zfs命令","uri":"/zfs-command-remark/#zfs命令"},{"categories":["IT备忘"],"content":"\r摧毀儲存池:zpool destroy tank ","date":"2020-01-11","objectID":"/zfs-command-remark/:1:0","series":null,"tags":["zfs"],"title":"zfs命令","uri":"/zfs-command-remark/#摧毀儲存池"},{"categories":["IT备忘"],"content":"\r清除超級塊:zpool labelclear ","date":"2020-01-11","objectID":"/zfs-command-remark/:2:0","series":null,"tags":["zfs"],"title":"zfs命令","uri":"/zfs-command-remark/#清除超級塊"},{"categories":["IT备忘"],"content":"\r強制清除當台裝置上所有儲存超級塊(請謹慎使用):zpool labelclear -f /dev/sd[a-z] ","date":"2020-01-11","objectID":"/zfs-command-remark/:3:0","series":null,"tags":["zfs"],"title":"zfs命令","uri":"/zfs-command-remark/#強制清除當台裝置上所有儲存超級塊請謹慎使用"},{"categories":["IT备忘"],"content":"\r取得儲存池資訊:zpool get all (選填tank) ","date":"2020-01-11","objectID":"/zfs-command-remark/:4:0","series":null,"tags":["zfs"],"title":"zfs命令","uri":"/zfs-command-remark/#取得儲存池資訊"},{"categories":["IT备忘"],"content":"\r同位元檢查:zpool scrub tank (不打tank 做所有pool) ","date":"2020-01-11","objectID":"/zfs-command-remark/:5:0","series":null,"tags":["zfs"],"title":"zfs命令","uri":"/zfs-command-remark/#同位元檢查"},{"categories":["IT备忘"],"content":"\r取得碎片化狀態:zpool get fragmentation ","date":"2020-01-11","objectID":"/zfs-command-remark/:6:0","series":null,"tags":["zfs"],"title":"zfs命令","uri":"/zfs-command-remark/#取得碎片化狀態"},{"categories":["IT备忘"],"content":"\r列出硬碟詳細列表:zpool list -v ","date":"2020-01-11","objectID":"/zfs-command-remark/:7:0","series":null,"tags":["zfs"],"title":"zfs命令","uri":"/zfs-command-remark/#列出硬碟詳細列表"},{"categories":["IT备忘"],"content":"\r列出儲存池狀態:zpool status tank ","date":"2020-01-11","objectID":"/zfs-command-remark/:8:0","series":null,"tags":["zfs"],"title":"zfs命令","uri":"/zfs-command-remark/#列出儲存池狀態"},{"categories":["IT备忘"],"content":"\r設定自動擴展容量:zpool set autoexpand=on tank ","date":"2020-01-11","objectID":"/zfs-command-remark/:9:0","series":null,"tags":["zfs"],"title":"zfs命令","uri":"/zfs-command-remark/#設定自動擴展容量"},{"categories":["IT备忘"],"content":"\r建立儲存池:zpool create -o ashift=12 tank raidz /dev/disk/by-id/ ","date":"2020-01-11","objectID":"/zfs-command-remark/:10:0","series":null,"tags":["zfs"],"title":"zfs命令","uri":"/zfs-command-remark/#建立儲存池"},{"categories":["IT备忘"],"content":"\r添加vdev到現有儲存池:zpool add tank raidz /dev/disk/by-id/ ","date":"2020-01-11","objectID":"/zfs-command-remark/:11:0","series":null,"tags":["zfs"],"title":"zfs命令","uri":"/zfs-command-remark/#添加vdev到現有儲存池"},{"categories":["IT备忘"],"content":"\r增加L2ARC讀取快取:zpool add -f tank cache /dev/disk/by-id/ ","date":"2020-01-11","objectID":"/zfs-command-remark/:12:0","series":null,"tags":["zfs"],"title":"zfs命令","uri":"/zfs-command-remark/#增加l2arc讀取快取"},{"categories":["IT备忘"],"content":"\r增加ZIL寫入快取:zpool add tank log /dev/disk/by-id/ ","date":"2020-01-11","objectID":"/zfs-command-remark/:13:0","series":null,"tags":["zfs"],"title":"zfs命令","uri":"/zfs-command-remark/#增加zil寫入快取"},{"categories":["IT备忘"],"content":"\r重新更新zpool.cache Filezpool set cachefile=/etc/zfs/zpool.cache tank ","date":"2020-01-11","objectID":"/zfs-command-remark/:14:0","series":null,"tags":["zfs"],"title":"zfs命令","uri":"/zfs-command-remark/#重新更新zpoolcache-file"},{"categories":["IT备忘"],"content":"\r匯入 zpool 儲存池:zpool import tank (-f) ","date":"2020-01-11","objectID":"/zfs-command-remark/:15:0","series":null,"tags":["zfs"],"title":"zfs命令","uri":"/zfs-command-remark/#匯入-zpool-儲存池"},{"categories":["IT备忘"],"content":"\r匯入已摧毀 zpool 儲存池:zpool import -Df tank ","date":"2020-01-11","objectID":"/zfs-command-remark/:16:0","series":null,"tags":["zfs"],"title":"zfs命令","uri":"/zfs-command-remark/#匯入已摧毀-zpool-儲存池"},{"categories":["IT备忘"],"content":"SSH隧道配置","date":"2020-01-11","objectID":"/ssh-usage-remark/","series":null,"tags":["ssh"],"title":"SSH隧道配置","uri":"/ssh-usage-remark/"},{"categories":["IT备忘"],"content":"\r-f 表示在后台运行","date":"2020-01-11","objectID":"/ssh-usage-remark/:0:0","series":null,"tags":["ssh"],"title":"SSH隧道配置","uri":"/ssh-usage-remark/#-f-表示在后台运行"},{"categories":["IT备忘"],"content":"\r示例","date":"2020-01-11","objectID":"/ssh-usage-remark/:1:0","series":null,"tags":["ssh"],"title":"SSH隧道配置","uri":"/ssh-usage-remark/#示例"},{"categories":["IT备忘"],"content":"\rsocks 8888 -\u003e tqsit -\u003e (ow 路由)（IPV4可翻，IPV6不可翻，因为tq没有ipv6）ssh -D 8888 -p 41322 vagrant@tq.thy.pub -N ","date":"2020-01-11","objectID":"/ssh-usage-remark/:1:1","series":null,"tags":["ssh"],"title":"SSH隧道配置","uri":"/ssh-usage-remark/#socks-8888---tqsit---ow-路由ipv4可翻ipv6不可翻因为tq没有ipv6"},{"categories":["IT备忘"],"content":"\rsocks 8888 -\u003e csnas 直出（IPV4/6不可翻）ssh -D 8888 -p 22222 henry@tq.thy.pub -N ","date":"2020-01-11","objectID":"/ssh-usage-remark/:1:2","series":null,"tags":["ssh"],"title":"SSH隧道配置","uri":"/ssh-usage-remark/#socks-8888---csnas-直出ipv46不可翻"},{"categories":["IT备忘"],"content":"\rsocks 8888 -\u003e srv -\u003e (ow 路由)（IPV4可翻，IPV6不可翻，因为ipv6流量经隧道后不从ow路由经过）ssh -D 8888 henry@srv.thy.pub -N ","date":"2020-01-11","objectID":"/ssh-usage-remark/:1:3","series":null,"tags":["ssh"],"title":"SSH隧道配置","uri":"/ssh-usage-remark/#socks-8888---srv---ow-路由ipv4可翻ipv6不可翻因为ipv6流量经隧道后不从ow路由经过"},{"categories":["IT备忘"],"content":"\rsocks 8888 -\u003e srv -\u003e ow 上的ss-local（IPV4可翻，IPV6不可翻，因为ss-local在docker中）ssh -NC -L 8888:192.168.1.99:1080 henry@srv.thy.pub 以上均无法解决ipv6网站优先的问题，ipv6将无法走代理，因为代理装在docker中，而docker对ipv6支持不好。 ","date":"2020-01-11","objectID":"/ssh-usage-remark/:1:4","series":null,"tags":["ssh"],"title":"SSH隧道配置","uri":"/ssh-usage-remark/#socks-8888---srv---ow-上的ss-localipv4可翻ipv6不可翻因为ss-local在docker中"},{"categories":["IT备忘"],"content":"\rsocks 8888 -\u003e srv上的ss-local（IPV4/6可翻）ssh -NC -L 8888:srv.thy.pub:31080 henry@srv.thy.pub ","date":"2020-01-11","objectID":"/ssh-usage-remark/:1:5","series":null,"tags":["ssh"],"title":"SSH隧道配置","uri":"/ssh-usage-remark/#socks-8888---srv上的ss-localipv46可翻"},{"categories":["IT备忘"],"content":"\rsocks 2222 -\u003e tqw -\u003e srv上的ss-local（IPV4/6可翻）ssh -NC -L 8888:192.168.1.222:31080 henry@tqw.com （最终方案：国外从8888端口转到srv上的ss-local，国内从8889端口转到tqw上，ssh -D 8889 henry@tqw.com -N） ssh -NCR 41080:localhost:31080 vagrant@tq.thy.pub -p 41322 ","date":"2020-01-11","objectID":"/ssh-usage-remark/:1:6","series":null,"tags":["ssh"],"title":"SSH隧道配置","uri":"/ssh-usage-remark/#socks-2222---tqw---srv上的ss-localipv46可翻"},{"categories":["IT备忘"],"content":"\r案例","date":"2020-01-11","objectID":"/ssh-usage-remark/:2:0","series":null,"tags":["ssh"],"title":"SSH隧道配置","uri":"/ssh-usage-remark/#案例"},{"categories":["IT备忘"],"content":"\r以snf centos为跳板（有公网IP，ddns为snf.7ze.top，端口8822），将本地的32222端口重定向到debian10.henry（内网机器10.61.0.163）的22端口，这样可以从本地33222端口登陆debian10的sshssh -v -p 8822 -NC -L 32222:10.61.0.163:22 henry@snf.7ze.top 成功之后在本地 ssh -v -p 32222 henry@localhost 就可以登陆snf内网中的debian10.henry ","date":"2020-01-11","objectID":"/ssh-usage-remark/:2:1","series":null,"tags":["ssh"],"title":"SSH隧道配置","uri":"/ssh-usage-remark/#以snf-centos为跳板有公网ipddns为snf7zetop端口8822将本地的32222端口重定向到debian10henry内网机器10610163的22端口这样可以从本地33222端口登陆debian10的ssh"},{"categories":["IT备忘"],"content":"\r案例：以snf centos为跳板（有公网IP，ddns为snf.7ze.top，端口8822），将本地的38006端口重定向到pve（内网机器10.61.0.168）的8006端口，这样可以从本地38006访问pve的web uissh -v -p 8822 -NC -L 38006:10.61.0.168:8006 henry@snf.7ze.top 成功之后在本地 ssh -v -p 32222 henry@localhost 就可以登陆snf内网中的debian10.henry ","date":"2020-01-11","objectID":"/ssh-usage-remark/:2:2","series":null,"tags":["ssh"],"title":"SSH隧道配置","uri":"/ssh-usage-remark/#案例以snf-centos为跳板有公网ipddns为snf7zetop端口8822将本地的38006端口重定向到pve内网机器10610168的8006端口这样可以从本地38006访问pve的web-ui"},{"categories":["IT备忘"],"content":"\r案例：将本地的9000端口重定向到tqtest（内网机器10.88.9.3）的9001端口，这样可以从tqtest的9001访问本机e的9000，从而进行远程xdebugssh -v -NC -R 9001:localhost:9000 vagrant@10.88.9.3 ","date":"2020-01-11","objectID":"/ssh-usage-remark/:2:3","series":null,"tags":["ssh"],"title":"SSH隧道配置","uri":"/ssh-usage-remark/#案例将本地的9000端口重定向到tqtest内网机器108893的9001端口这样可以从tqtest的9001访问本机e的9000从而进行远程xdebug"},{"categories":["软件开发"],"content":"设计数据库时字段命名、类型和长度建议","date":"2020-01-08","objectID":"/best-practice-when-design-database-column-name-type-length/","series":null,"tags":["Database"],"title":"设计数据库时字段命名、类型和长度建议","uri":"/best-practice-when-design-database-column-name-type-length/"},{"categories":["软件开发"],"content":"\r设计数据库时字段命名、类型和长度建议","date":"2020-01-08","objectID":"/best-practice-when-design-database-column-name-type-length/:0:0","series":null,"tags":["Database"],"title":"设计数据库时字段命名、类型和长度建议","uri":"/best-practice-when-design-database-column-name-type-length/#设计数据库时字段命名类型和长度建议"},{"categories":["软件开发"],"content":"\r对于任何字段长度都不应该过于小气,否则未知的变化会造成前后台都要修改 对于开关型字段建议number(1,0) 而不是varchar2(1),避免用户错误保存Y/N,而不是1/0,这样可能会引入大小写问题 对于数据字典编码字段,不要小气的确定为3位,最好统一为32位 经验证明,有时受从其它系统数据接入的影响,由于没有对照项,会直接保存原始值,而原始值一般都5-10位 统一为32位的好处是,可以考虑利用GUID来生成数据字典编码,这样在数据合并时非常有优势. 对于一般性录入字段,如:编号,轴号,车号,不要为了一时的\"绝对\"而设置确定的长度,最好统一成较优的长度,如32位! 如:车号最早是6位,没多久就改成了7位! 轴号开始为8位,但实际上有15位的轴号!轴承编号由10改为了20位 对于类似名称的字段: 如单位名称, 数据字典项目的名称等,最好再大一些,设成60位! 对于备注类型的字段,一般内容在30个汉字左右,所以推荐设置为100 对于长文本的字段,一般内容在200个汉字左右,推荐设置为1000 对保存SQL语句的字段(特殊情况,如配置传输条件等),至少要设置为2000,最大是4000 对于数字字段,除非精度要求,统一为number是个较好的选择 （如果需要，请尽量提前考虑好精度可能的变化） number默认精度为15位(整数位数+小数位数=15位,小数点位置任意),其它大数值也可以保存,但是采用的是科学计数法,有精度损失 用number,不指定精度的最大的好处是不限制数值的精度和范围 如果指定number(2,1),则存入的数值范围在-9.9 至 9.9之间,如果用户提出精度调整为2位,则需要修改数据库和程序! 对于日期型的就没有什么说法了 ","date":"2020-01-08","objectID":"/best-practice-when-design-database-column-name-type-length/:1:0","series":null,"tags":["Database"],"title":"设计数据库时字段命名、类型和长度建议","uri":"/best-practice-when-design-database-column-name-type-length/#对于任何字段长度都不应该过于小气否则未知的变化会造成前后台都要修改"},{"categories":["IT备忘"],"content":"centos手动更新git","date":"2020-01-05","objectID":"/centos-manually-update-git/","series":null,"tags":["Linux","centos"],"title":"centos手动更新git","uri":"/centos-manually-update-git/"},{"categories":["IT备忘"],"content":"\rcentos手动更新git git --version sudo yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel asciidoc sudo yum install gcc perl-ExtUtils-MakeMaker sudo yum remove git cd ~ wget https://mirrors.edge.kernel.org/pub/software/scm/git/git-2.30.0.tar.xz x git-2.30.0.tar.xz cd git-2.30.0/ make all make prefix=/usr install git --version ","date":"2020-01-05","objectID":"/centos-manually-update-git/:0:0","series":null,"tags":["Linux","centos"],"title":"centos手动更新git","uri":"/centos-manually-update-git/#centos手动更新git"},{"categories":["读书笔记"],"content":"富爸爸，穷爸爸","date":"2019-02-22","objectID":"/rich-dad-poor-dad/","series":null,"tags":["投资理财"],"title":"富爸爸，穷爸爸","uri":"/rich-dad-poor-dad/"},{"categories":["读书笔记"],"content":"\r富爸爸，穷爸爸","date":"2019-02-22","objectID":"/rich-dad-poor-dad/:0:0","series":null,"tags":["投资理财"],"title":"富爸爸，穷爸爸","uri":"/rich-dad-poor-dad/#富爸爸穷爸爸"},{"categories":["读书笔记"],"content":"\r此书的主要内容","date":"2019-02-22","objectID":"/rich-dad-poor-dad/:1:0","series":null,"tags":["投资理财"],"title":"富爸爸，穷爸爸","uri":"/rich-dad-poor-dad/#此书的主要内容"},{"categories":["读书笔记"],"content":"\r人的思想要转变 不要把人生的道路只放在好好学习、上好学校、找好工作的单一路径上，不谈学习、工作的意义，单谈如何不让自己做金钱的奴隶的角度： 应该找到一些让财富增长的机会，让金钱为自己工作、不要让自己为金钱工作。 书中作者特别青睐房地产，在中国，房地产的黄金十年已经不再。但作者的这种思路还是值得学习的。 ","date":"2019-02-22","objectID":"/rich-dad-poor-dad/:1:1","series":null,"tags":["投资理财"],"title":"富爸爸，穷爸爸","uri":"/rich-dad-poor-dad/#人的思想要转变"},{"categories":["读书笔记"],"content":"\r不要眼中只有为别人工作，要让钱能够生钱。 我的理解是，工资总会有天花板，而且工资的增长伴随着竞争的加剧和付出的增长。同时陪年龄的增长，不同行业的工资也许不会线性增长，可能有时还会下降。 这也和我近期的思考契合，陪着年龄的增长，应该更多考虑被动收入的增长。 目前就我个人而言，工作收入还是主要部分，因此被动收入的投资不能影响到工作，基于此考虑，我目前主要还是在做基金的投资，股票和债券的搭配，这样的投资让我不会受市场每天起伏的影响。 除此之外，也应该考虑多寻找一些其它的投资或者利用业余时间创收的机会，在新媒体时代，越细化的行业和产品越可能有机会。 ","date":"2019-02-22","objectID":"/rich-dad-poor-dad/:1:2","series":null,"tags":["投资理财"],"title":"富爸爸，穷爸爸","uri":"/rich-dad-poor-dad/#不要眼中只有为别人工作要让钱能够生钱"},{"categories":["读书笔记"],"content":"\r不要只想不做不要做鸵鸟，不做永远没有机会，不要直接否则没有尝试过的机会。 ","date":"2019-02-22","objectID":"/rich-dad-poor-dad/:1:3","series":null,"tags":["投资理财"],"title":"富爸爸，穷爸爸","uri":"/rich-dad-poor-dad/#不要只想不做"},{"categories":["读书笔记"],"content":"\r买入低价资产，最好可以获取持续的现金回报，在价格过高时卖掉。","date":"2019-02-22","objectID":"/rich-dad-poor-dad/:1:4","series":null,"tags":["投资理财"],"title":"富爸爸，穷爸爸","uri":"/rich-dad-poor-dad/#买入低价资产最好可以获取持续的现金回报在价格过高时卖掉"},{"categories":["读书笔记"],"content":"\r要多接受新思想，新知识","date":"2019-02-22","objectID":"/rich-dad-poor-dad/:1:5","series":null,"tags":["投资理财"],"title":"富爸爸，穷爸爸","uri":"/rich-dad-poor-dad/#要多接受新思想新知识"},{"categories":["IT备忘"],"content":"Vagrant共享目录文件系统sshfs、nfs、vboxfs、native fs性能比较测试","date":"2017-08-13","objectID":"/vagrant-share-folder-sshfs-nfs-vboxfs-nativefs-benchmark/","series":null,"tags":["vagrant"],"title":"Vagrant共享目录文件系统sshfs、nfs、vboxfs、native fs性能比较测试","uri":"/vagrant-share-folder-sshfs-nfs-vboxfs-nativefs-benchmark/"},{"categories":["IT备忘"],"content":"\rVagrant共享目录文件系统sshfs、nfs、vboxfs、native fs性能比较测试","date":"2017-08-13","objectID":"/vagrant-share-folder-sshfs-nfs-vboxfs-nativefs-benchmark/:0:0","series":null,"tags":["vagrant"],"title":"Vagrant共享目录文件系统sshfs、nfs、vboxfs、native fs性能比较测试","uri":"/vagrant-share-folder-sshfs-nfs-vboxfs-nativefs-benchmark/#vagrant共享目录文件系统sshfsnfsvboxfsnative-fs性能比较测试"},{"categories":["IT备忘"],"content":"\r为什么测试工作中使用vagrant作为开发环境，一直比较懒，直接用的默认方式共享目录，但随着项目越来越大，而且我的笔记本一般又不关机，都是直接合上，导致系统越来越慢，不但在guest中慢（比如切换目录要1秒），连在host上打开目录也变得很慢。 终于有一天实在受不了，决定查查原因，网上看了很多文章，包括官网的文档，了解到大概有这样几种共享目录的方式： ","date":"2017-08-13","objectID":"/vagrant-share-folder-sshfs-nfs-vboxfs-nativefs-benchmark/:1:0","series":null,"tags":["vagrant"],"title":"Vagrant共享目录文件系统sshfs、nfs、vboxfs、native fs性能比较测试","uri":"/vagrant-share-folder-sshfs-nfs-vboxfs-nativefs-benchmark/#为什么测试"},{"categories":["IT备忘"],"content":"\r几种方案NFS、RSync、SMB、sshfs、vboxfs、unionfs 其中 RSync和Unionfs不是我的菜，因为它们是基于同步原理，同样的文件，host和guest中都得留一份。（当然我也没配置成功，说是ssh无权限，但我用默认私钥ssh是正常的） SMB也不是我的菜，因为它会留下一下匿名的共享账户，安全性很成问题（当然我也没配置成功，只要设置type为smb，vagrant启动时就会卡在启动第一步：clean port什么的） nfs官方说明：NFS folders do not work on Windows hosts.不过有个插件vagrant-winnfsd安装一下就可以支持了。 sshfs资料很少，仅有的几篇文章中说它的性能不错。 vboxfs为默认的共享目录文件系统，都说性能很差，我日常应用时，如果长时间不重启系统，也会觉得有点卡。 不过一直很少有看到对这几种系统的性能作一个全面对比的评测。 所以我决定用几个简单的测试大体看看sshfs、nfs、vboxfs、native的性能到底有多大区别。 测试环境为：Vagrant 1.9.7， VirtualBox 5.1.26， 每次切换挂载的文件系统前用 df -T 查看文件系统，防止vb使用默认文件系统挂载。 其中我选择了一个我日常开发所在的项目目录 /www来挂载到virtualBox中，总大小为2.88GB, 共80079个文件, 12254个文件夹，含有多个深层目录，对它的一次遍历也是挺耗时的。两个脚本如下： #! /bin/bash ###read.sh #read file in directory recursively function read_dir(){ for file in `ls $1` do if [ -d $1\"/\"$file ] then read_dir $1\"/\"$file else cat $1\"/\"$file \u003e /dev/null fi done } read_dir /www #!/bin/bash ###write.sh #large amount of small file write for (( i = 1; i \u003c=10000; i++ )) do dd if=/dev/zero of=/www/test/${i}.dd bs=100K count=1;sync done ","date":"2017-08-13","objectID":"/vagrant-share-folder-sshfs-nfs-vboxfs-nativefs-benchmark/:2:0","series":null,"tags":["vagrant"],"title":"Vagrant共享目录文件系统sshfs、nfs、vboxfs、native fs性能比较测试","uri":"/vagrant-share-folder-sshfs-nfs-vboxfs-nativefs-benchmark/#几种方案"},{"categories":["IT备忘"],"content":"\r测试成绩如下：文件系统Benchmark（目录大小为2.8GB） 结果格式hⓂ️s.ms sshfs nfs vboxfs native （目录大小为3.3GB） 测试A（sync;time du -h /www） 大量文件及目录的信息读取 10:14 1:15 1:35 23 s 测试B（sync;time du -h /www） (warm A) 10:12 1:28 1:35 19 s 测试C（sync;time ./read.sh） 大量文件的内容读取 1:45:17.58 7:55.11 9:22.67 9:15.17 测试D（sync;time ./read.sh） (warm C) 1:46:11.21 7:53.79 9:23.76 8:36.96 测试E（sync;time bash -c \"(dd if=/dev/zero of=/tmp/test.dd bs=50K count=20000;sync)） 1GB连续文件的写入 1:05.9013 (15.5 MB/s) 29.5498 s (34.7 MB/s) 30.3650 s (33.7 MB/s) 4.30492 s (238 MB/s) 测试F（sync;time ./write.sh） 10000个100KB文件的写入 17:12.82 2:12.43 2:16.95 2:09.65 测试G（sync;time rm /www/test -R） 10000个100KB文件的删除 34.227 s 10.152 s 14.860 s 1.096 s ","date":"2017-08-13","objectID":"/vagrant-share-folder-sshfs-nfs-vboxfs-nativefs-benchmark/:3:0","series":null,"tags":["vagrant"],"title":"Vagrant共享目录文件系统sshfs、nfs、vboxfs、native fs性能比较测试","uri":"/vagrant-share-folder-sshfs-nfs-vboxfs-nativefs-benchmark/#测试成绩如下"},{"categories":["IT备忘"],"content":"\r结论从数据上看nfs和vboxfs的差距并不大，但是nfs写入时会有莫名其妙的问题，有时在java中无法创建中文目录，也不报错，但是同样的代码仅仅将共享目录换成vboxfs就可以正常创建中文目录。因此我觉得还是继续用默认的vboxfs吧，我把pm2的watch和webpack的watch都关闭掉，感觉也流畅了不少，只是在目录切换时还是会停留1-2s，怀疑是git的原因。 由于时间和精力有限，没能做更多的测试，如有不对处欢迎指正。 ","date":"2017-08-13","objectID":"/vagrant-share-folder-sshfs-nfs-vboxfs-nativefs-benchmark/:4:0","series":null,"tags":["vagrant"],"title":"Vagrant共享目录文件系统sshfs、nfs、vboxfs、native fs性能比较测试","uri":"/vagrant-share-folder-sshfs-nfs-vboxfs-nativefs-benchmark/#结论"},{"categories":["IT备忘"],"content":"GIT文件重命名字母大小写的问题","date":"2017-06-05","objectID":"/git-rename-file-case/","series":null,"tags":["git"],"title":"GIT文件重命名字母大小写的问题","uri":"/git-rename-file-case/"},{"categories":["IT备忘"],"content":"\rGIT文件重命名字母大小写的问题","date":"2017-06-05","objectID":"/git-rename-file-case/:0:0","series":null,"tags":["git"],"title":"GIT文件重命名字母大小写的问题","uri":"/git-rename-file-case/#git文件重命名字母大小写的问题"},{"categories":["IT备忘"],"content":"\r当把项目中的一个文件名改变了大小写如SphinxQl改为SphinQL，那么pull的时候，git会不知所措，它会抱怨： - error: The following untracked working tree files would be overwritten by merge: - common/libs/db/SphinxQL.php - Please move or remove them before you can merge. - Aborting 这时候千万不能按照网上一些无良贴子的方法执行git clean -fx -d ，它会把你所有不在版本管理中的文件统统删除。正确的做法是： 先从项目中删除这个文件（先要备份），提交一次并且pull，然后再把这个文件重新加入项目，再提交一次并且pull。 第二次了，Mark一下！！！ ","date":"2017-06-05","objectID":"/git-rename-file-case/:1:0","series":null,"tags":["git"],"title":"GIT文件重命名字母大小写的问题","uri":"/git-rename-file-case/#当把项目中的一个文件名改变了大小写"},{"categories":null,"content":"\u003c此处写上自我介绍\u003e ","date":"0001-01-01","objectID":"/about/:0:0","series":null,"tags":null,"title":"关于","uri":"/about/#"},{"categories":["IT备忘"],"content":"云主机使用心得","date":"0001-01-01","objectID":"/vps-experience/","series":null,"tags":["云主机 vps"],"title":"云主机使用心得","uri":"/vps-experience/"},{"categories":["IT备忘"],"content":"\r云主机使用心得","date":"0001-01-01","objectID":"/vps-experience/:0:0","series":null,"tags":["云主机 vps"],"title":"云主机使用心得","uri":"/vps-experience/#云主机使用心得"},{"categories":["IT备忘"],"content":"\r综合介绍及优惠券 TOT HOST 越南 TOT K Lite 1C 1G 8G $38.45 12m 有6折优惠券 38.45*0.6=23.07 （10.25当天有4折优惠券） 测试IP： 103.197.185.252 延迟50ms (电信优化) 实际IP: 103.70.115.6 延迟345ms (移动优化) 实际使用体验：拥塞控制算法，使用cubic youtube大概3mbps，使用bbr youtube大概98mbps JTTI 香港 1C 1G 50G 2Mbps $41.55 12m JustVPS 香港 1C 1G 20G 300Mbps $132 60m ufovps 香港 1C 1G 20G 300Mbps ￥567 ","date":"0001-01-01","objectID":"/vps-experience/:1:0","series":null,"tags":["云主机 vps"],"title":"云主机使用心得","uri":"/vps-experience/#综合介绍及优惠券httpswwwvpsgocom-desc"},{"categories":["IT备忘"],"content":"\rdedipath 已经跑路 ","date":"0001-01-01","objectID":"/vps-experience/:2:0","series":null,"tags":["云主机 vps"],"title":"云主机使用心得","uri":"/vps-experience/#dedipath-已经跑路"}]